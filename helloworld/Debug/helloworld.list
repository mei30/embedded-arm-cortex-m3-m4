
helloworld.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001124  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000040  080012d4  080012d4  000112d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001314  08001314  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08001314  08001314  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001314  08001314  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001314  08001314  00011314  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001318  08001318  00011318  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  0800131c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002005c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0002005c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0002005c  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00020086  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000913  00000000  00000000  000200c9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000002f9  00000000  00000000  000209dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000118  00000000  00000000  00020cd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 000000be  00000000  00000000  00020df0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00002c89  00000000  00000000  00020eae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   000011c7  00000000  00000000  00023b37  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00009759  00000000  00000000  00024cfe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000b00  00000000  00000000  0002e458  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000065  00000000  00000000  0002ef58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000005c 	.word	0x2000005c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080012bc 	.word	0x080012bc

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000060 	.word	0x20000060
 80001ec:	080012bc 	.word	0x080012bc

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <main>:
#endif

#include <stdio.h>

int main(void)
{
 8000290:	b580      	push	{r7, lr}
 8000292:	af00      	add	r7, sp, #0
    /* Loop forever */
	printf("Hello World!");
 8000294:	4802      	ldr	r0, [pc, #8]	; (80002a0 <main+0x10>)
 8000296:	f000 f9a5 	bl	80005e4 <iprintf>
 800029a:	2300      	movs	r3, #0
	//for(;;);
}
 800029c:	4618      	mov	r0, r3
 800029e:	bd80      	pop	{r7, pc}
 80002a0:	080012d4 	.word	0x080012d4

080002a4 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80002a4:	b480      	push	{r7}
 80002a6:	b083      	sub	sp, #12
 80002a8:	af00      	add	r7, sp, #0
 80002aa:	4603      	mov	r3, r0
 80002ac:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80002ae:	4b0e      	ldr	r3, [pc, #56]	; (80002e8 <ITM_SendChar+0x44>)
 80002b0:	681b      	ldr	r3, [r3, #0]
 80002b2:	4a0d      	ldr	r2, [pc, #52]	; (80002e8 <ITM_SendChar+0x44>)
 80002b4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80002b8:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80002ba:	4b0c      	ldr	r3, [pc, #48]	; (80002ec <ITM_SendChar+0x48>)
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	4a0b      	ldr	r2, [pc, #44]	; (80002ec <ITM_SendChar+0x48>)
 80002c0:	f043 0301 	orr.w	r3, r3, #1
 80002c4:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80002c6:	bf00      	nop
 80002c8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	f003 0301 	and.w	r3, r3, #1
 80002d2:	2b00      	cmp	r3, #0
 80002d4:	d0f8      	beq.n	80002c8 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80002d6:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80002da:	79fb      	ldrb	r3, [r7, #7]
 80002dc:	6013      	str	r3, [r2, #0]
}
 80002de:	bf00      	nop
 80002e0:	370c      	adds	r7, #12
 80002e2:	46bd      	mov	sp, r7
 80002e4:	bc80      	pop	{r7}
 80002e6:	4770      	bx	lr
 80002e8:	e000edfc 	.word	0xe000edfc
 80002ec:	e0000e00 	.word	0xe0000e00

080002f0 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002f0:	b580      	push	{r7, lr}
 80002f2:	b086      	sub	sp, #24
 80002f4:	af00      	add	r7, sp, #0
 80002f6:	60f8      	str	r0, [r7, #12]
 80002f8:	60b9      	str	r1, [r7, #8]
 80002fa:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002fc:	2300      	movs	r3, #0
 80002fe:	617b      	str	r3, [r7, #20]
 8000300:	e00a      	b.n	8000318 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000302:	f3af 8000 	nop.w
 8000306:	4601      	mov	r1, r0
 8000308:	68bb      	ldr	r3, [r7, #8]
 800030a:	1c5a      	adds	r2, r3, #1
 800030c:	60ba      	str	r2, [r7, #8]
 800030e:	b2ca      	uxtb	r2, r1
 8000310:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000312:	697b      	ldr	r3, [r7, #20]
 8000314:	3301      	adds	r3, #1
 8000316:	617b      	str	r3, [r7, #20]
 8000318:	697a      	ldr	r2, [r7, #20]
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	429a      	cmp	r2, r3
 800031e:	dbf0      	blt.n	8000302 <_read+0x12>
  }

  return len;
 8000320:	687b      	ldr	r3, [r7, #4]
}
 8000322:	4618      	mov	r0, r3
 8000324:	3718      	adds	r7, #24
 8000326:	46bd      	mov	sp, r7
 8000328:	bd80      	pop	{r7, pc}

0800032a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800032a:	b580      	push	{r7, lr}
 800032c:	b086      	sub	sp, #24
 800032e:	af00      	add	r7, sp, #0
 8000330:	60f8      	str	r0, [r7, #12]
 8000332:	60b9      	str	r1, [r7, #8]
 8000334:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000336:	2300      	movs	r3, #0
 8000338:	617b      	str	r3, [r7, #20]
 800033a:	e009      	b.n	8000350 <_write+0x26>
  {
    //__io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 800033c:	68bb      	ldr	r3, [r7, #8]
 800033e:	1c5a      	adds	r2, r3, #1
 8000340:	60ba      	str	r2, [r7, #8]
 8000342:	781b      	ldrb	r3, [r3, #0]
 8000344:	4618      	mov	r0, r3
 8000346:	f7ff ffad 	bl	80002a4 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800034a:	697b      	ldr	r3, [r7, #20]
 800034c:	3301      	adds	r3, #1
 800034e:	617b      	str	r3, [r7, #20]
 8000350:	697a      	ldr	r2, [r7, #20]
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	429a      	cmp	r2, r3
 8000356:	dbf1      	blt.n	800033c <_write+0x12>
  }
  return len;
 8000358:	687b      	ldr	r3, [r7, #4]
}
 800035a:	4618      	mov	r0, r3
 800035c:	3718      	adds	r7, #24
 800035e:	46bd      	mov	sp, r7
 8000360:	bd80      	pop	{r7, pc}

08000362 <_close>:

int _close(int file)
{
 8000362:	b480      	push	{r7}
 8000364:	b083      	sub	sp, #12
 8000366:	af00      	add	r7, sp, #0
 8000368:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800036a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800036e:	4618      	mov	r0, r3
 8000370:	370c      	adds	r7, #12
 8000372:	46bd      	mov	sp, r7
 8000374:	bc80      	pop	{r7}
 8000376:	4770      	bx	lr

08000378 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000378:	b480      	push	{r7}
 800037a:	b083      	sub	sp, #12
 800037c:	af00      	add	r7, sp, #0
 800037e:	6078      	str	r0, [r7, #4]
 8000380:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000382:	683b      	ldr	r3, [r7, #0]
 8000384:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000388:	605a      	str	r2, [r3, #4]
  return 0;
 800038a:	2300      	movs	r3, #0
}
 800038c:	4618      	mov	r0, r3
 800038e:	370c      	adds	r7, #12
 8000390:	46bd      	mov	sp, r7
 8000392:	bc80      	pop	{r7}
 8000394:	4770      	bx	lr

08000396 <_isatty>:

int _isatty(int file)
{
 8000396:	b480      	push	{r7}
 8000398:	b083      	sub	sp, #12
 800039a:	af00      	add	r7, sp, #0
 800039c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800039e:	2301      	movs	r3, #1
}
 80003a0:	4618      	mov	r0, r3
 80003a2:	370c      	adds	r7, #12
 80003a4:	46bd      	mov	sp, r7
 80003a6:	bc80      	pop	{r7}
 80003a8:	4770      	bx	lr

080003aa <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003aa:	b480      	push	{r7}
 80003ac:	b085      	sub	sp, #20
 80003ae:	af00      	add	r7, sp, #0
 80003b0:	60f8      	str	r0, [r7, #12]
 80003b2:	60b9      	str	r1, [r7, #8]
 80003b4:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003b6:	2300      	movs	r3, #0
}
 80003b8:	4618      	mov	r0, r3
 80003ba:	3714      	adds	r7, #20
 80003bc:	46bd      	mov	sp, r7
 80003be:	bc80      	pop	{r7}
 80003c0:	4770      	bx	lr
	...

080003c4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003c4:	b580      	push	{r7, lr}
 80003c6:	b086      	sub	sp, #24
 80003c8:	af00      	add	r7, sp, #0
 80003ca:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003cc:	4a14      	ldr	r2, [pc, #80]	; (8000420 <_sbrk+0x5c>)
 80003ce:	4b15      	ldr	r3, [pc, #84]	; (8000424 <_sbrk+0x60>)
 80003d0:	1ad3      	subs	r3, r2, r3
 80003d2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003d4:	697b      	ldr	r3, [r7, #20]
 80003d6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003d8:	4b13      	ldr	r3, [pc, #76]	; (8000428 <_sbrk+0x64>)
 80003da:	681b      	ldr	r3, [r3, #0]
 80003dc:	2b00      	cmp	r3, #0
 80003de:	d102      	bne.n	80003e6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003e0:	4b11      	ldr	r3, [pc, #68]	; (8000428 <_sbrk+0x64>)
 80003e2:	4a12      	ldr	r2, [pc, #72]	; (800042c <_sbrk+0x68>)
 80003e4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003e6:	4b10      	ldr	r3, [pc, #64]	; (8000428 <_sbrk+0x64>)
 80003e8:	681a      	ldr	r2, [r3, #0]
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	4413      	add	r3, r2
 80003ee:	693a      	ldr	r2, [r7, #16]
 80003f0:	429a      	cmp	r2, r3
 80003f2:	d207      	bcs.n	8000404 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003f4:	f000 f99a 	bl	800072c <__errno>
 80003f8:	4603      	mov	r3, r0
 80003fa:	220c      	movs	r2, #12
 80003fc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003fe:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000402:	e009      	b.n	8000418 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000404:	4b08      	ldr	r3, [pc, #32]	; (8000428 <_sbrk+0x64>)
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800040a:	4b07      	ldr	r3, [pc, #28]	; (8000428 <_sbrk+0x64>)
 800040c:	681a      	ldr	r2, [r3, #0]
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	4413      	add	r3, r2
 8000412:	4a05      	ldr	r2, [pc, #20]	; (8000428 <_sbrk+0x64>)
 8000414:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000416:	68fb      	ldr	r3, [r7, #12]
}
 8000418:	4618      	mov	r0, r3
 800041a:	3718      	adds	r7, #24
 800041c:	46bd      	mov	sp, r7
 800041e:	bd80      	pop	{r7, pc}
 8000420:	20020000 	.word	0x20020000
 8000424:	00000400 	.word	0x00000400
 8000428:	20000078 	.word	0x20000078
 800042c:	200001c8 	.word	0x200001c8

08000430 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000430:	480d      	ldr	r0, [pc, #52]	; (8000468 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000432:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000434:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000438:	480c      	ldr	r0, [pc, #48]	; (800046c <LoopForever+0x6>)
  ldr r1, =_edata
 800043a:	490d      	ldr	r1, [pc, #52]	; (8000470 <LoopForever+0xa>)
  ldr r2, =_sidata
 800043c:	4a0d      	ldr	r2, [pc, #52]	; (8000474 <LoopForever+0xe>)
  movs r3, #0
 800043e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000440:	e002      	b.n	8000448 <LoopCopyDataInit>

08000442 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000442:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000444:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000446:	3304      	adds	r3, #4

08000448 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000448:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800044a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800044c:	d3f9      	bcc.n	8000442 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800044e:	4a0a      	ldr	r2, [pc, #40]	; (8000478 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000450:	4c0a      	ldr	r4, [pc, #40]	; (800047c <LoopForever+0x16>)
  movs r3, #0
 8000452:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000454:	e001      	b.n	800045a <LoopFillZerobss>

08000456 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000456:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000458:	3204      	adds	r2, #4

0800045a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800045a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800045c:	d3fb      	bcc.n	8000456 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800045e:	f000 f96b 	bl	8000738 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000462:	f7ff ff15 	bl	8000290 <main>

08000466 <LoopForever>:

LoopForever:
  b LoopForever
 8000466:	e7fe      	b.n	8000466 <LoopForever>
  ldr   r0, =_estack
 8000468:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800046c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000470:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000474:	0800131c 	.word	0x0800131c
  ldr r2, =_sbss
 8000478:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 800047c:	200001c8 	.word	0x200001c8

08000480 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000480:	e7fe      	b.n	8000480 <ADC_IRQHandler>
	...

08000484 <std>:
 8000484:	2300      	movs	r3, #0
 8000486:	b510      	push	{r4, lr}
 8000488:	4604      	mov	r4, r0
 800048a:	e9c0 3300 	strd	r3, r3, [r0]
 800048e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000492:	6083      	str	r3, [r0, #8]
 8000494:	8181      	strh	r1, [r0, #12]
 8000496:	6643      	str	r3, [r0, #100]	; 0x64
 8000498:	81c2      	strh	r2, [r0, #14]
 800049a:	6183      	str	r3, [r0, #24]
 800049c:	4619      	mov	r1, r3
 800049e:	2208      	movs	r2, #8
 80004a0:	305c      	adds	r0, #92	; 0x5c
 80004a2:	f000 f8f4 	bl	800068e <memset>
 80004a6:	4b05      	ldr	r3, [pc, #20]	; (80004bc <std+0x38>)
 80004a8:	6263      	str	r3, [r4, #36]	; 0x24
 80004aa:	4b05      	ldr	r3, [pc, #20]	; (80004c0 <std+0x3c>)
 80004ac:	62a3      	str	r3, [r4, #40]	; 0x28
 80004ae:	4b05      	ldr	r3, [pc, #20]	; (80004c4 <std+0x40>)
 80004b0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80004b2:	4b05      	ldr	r3, [pc, #20]	; (80004c8 <std+0x44>)
 80004b4:	6224      	str	r4, [r4, #32]
 80004b6:	6323      	str	r3, [r4, #48]	; 0x30
 80004b8:	bd10      	pop	{r4, pc}
 80004ba:	bf00      	nop
 80004bc:	08000609 	.word	0x08000609
 80004c0:	0800062b 	.word	0x0800062b
 80004c4:	08000663 	.word	0x08000663
 80004c8:	08000687 	.word	0x08000687

080004cc <stdio_exit_handler>:
 80004cc:	4a02      	ldr	r2, [pc, #8]	; (80004d8 <stdio_exit_handler+0xc>)
 80004ce:	4903      	ldr	r1, [pc, #12]	; (80004dc <stdio_exit_handler+0x10>)
 80004d0:	4803      	ldr	r0, [pc, #12]	; (80004e0 <stdio_exit_handler+0x14>)
 80004d2:	f000 b869 	b.w	80005a8 <_fwalk_sglue>
 80004d6:	bf00      	nop
 80004d8:	20000000 	.word	0x20000000
 80004dc:	08001019 	.word	0x08001019
 80004e0:	2000000c 	.word	0x2000000c

080004e4 <cleanup_stdio>:
 80004e4:	6841      	ldr	r1, [r0, #4]
 80004e6:	4b0c      	ldr	r3, [pc, #48]	; (8000518 <cleanup_stdio+0x34>)
 80004e8:	4299      	cmp	r1, r3
 80004ea:	b510      	push	{r4, lr}
 80004ec:	4604      	mov	r4, r0
 80004ee:	d001      	beq.n	80004f4 <cleanup_stdio+0x10>
 80004f0:	f000 fd92 	bl	8001018 <_fflush_r>
 80004f4:	68a1      	ldr	r1, [r4, #8]
 80004f6:	4b09      	ldr	r3, [pc, #36]	; (800051c <cleanup_stdio+0x38>)
 80004f8:	4299      	cmp	r1, r3
 80004fa:	d002      	beq.n	8000502 <cleanup_stdio+0x1e>
 80004fc:	4620      	mov	r0, r4
 80004fe:	f000 fd8b 	bl	8001018 <_fflush_r>
 8000502:	68e1      	ldr	r1, [r4, #12]
 8000504:	4b06      	ldr	r3, [pc, #24]	; (8000520 <cleanup_stdio+0x3c>)
 8000506:	4299      	cmp	r1, r3
 8000508:	d004      	beq.n	8000514 <cleanup_stdio+0x30>
 800050a:	4620      	mov	r0, r4
 800050c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000510:	f000 bd82 	b.w	8001018 <_fflush_r>
 8000514:	bd10      	pop	{r4, pc}
 8000516:	bf00      	nop
 8000518:	2000007c 	.word	0x2000007c
 800051c:	200000e4 	.word	0x200000e4
 8000520:	2000014c 	.word	0x2000014c

08000524 <global_stdio_init.part.0>:
 8000524:	b510      	push	{r4, lr}
 8000526:	4b0b      	ldr	r3, [pc, #44]	; (8000554 <global_stdio_init.part.0+0x30>)
 8000528:	4c0b      	ldr	r4, [pc, #44]	; (8000558 <global_stdio_init.part.0+0x34>)
 800052a:	4a0c      	ldr	r2, [pc, #48]	; (800055c <global_stdio_init.part.0+0x38>)
 800052c:	601a      	str	r2, [r3, #0]
 800052e:	4620      	mov	r0, r4
 8000530:	2200      	movs	r2, #0
 8000532:	2104      	movs	r1, #4
 8000534:	f7ff ffa6 	bl	8000484 <std>
 8000538:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800053c:	2201      	movs	r2, #1
 800053e:	2109      	movs	r1, #9
 8000540:	f7ff ffa0 	bl	8000484 <std>
 8000544:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000548:	2202      	movs	r2, #2
 800054a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800054e:	2112      	movs	r1, #18
 8000550:	f7ff bf98 	b.w	8000484 <std>
 8000554:	200001b4 	.word	0x200001b4
 8000558:	2000007c 	.word	0x2000007c
 800055c:	080004cd 	.word	0x080004cd

08000560 <__sfp_lock_acquire>:
 8000560:	4801      	ldr	r0, [pc, #4]	; (8000568 <__sfp_lock_acquire+0x8>)
 8000562:	f000 b90d 	b.w	8000780 <__retarget_lock_acquire_recursive>
 8000566:	bf00      	nop
 8000568:	200001bd 	.word	0x200001bd

0800056c <__sfp_lock_release>:
 800056c:	4801      	ldr	r0, [pc, #4]	; (8000574 <__sfp_lock_release+0x8>)
 800056e:	f000 b908 	b.w	8000782 <__retarget_lock_release_recursive>
 8000572:	bf00      	nop
 8000574:	200001bd 	.word	0x200001bd

08000578 <__sinit>:
 8000578:	b510      	push	{r4, lr}
 800057a:	4604      	mov	r4, r0
 800057c:	f7ff fff0 	bl	8000560 <__sfp_lock_acquire>
 8000580:	6a23      	ldr	r3, [r4, #32]
 8000582:	b11b      	cbz	r3, 800058c <__sinit+0x14>
 8000584:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000588:	f7ff bff0 	b.w	800056c <__sfp_lock_release>
 800058c:	4b04      	ldr	r3, [pc, #16]	; (80005a0 <__sinit+0x28>)
 800058e:	6223      	str	r3, [r4, #32]
 8000590:	4b04      	ldr	r3, [pc, #16]	; (80005a4 <__sinit+0x2c>)
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	2b00      	cmp	r3, #0
 8000596:	d1f5      	bne.n	8000584 <__sinit+0xc>
 8000598:	f7ff ffc4 	bl	8000524 <global_stdio_init.part.0>
 800059c:	e7f2      	b.n	8000584 <__sinit+0xc>
 800059e:	bf00      	nop
 80005a0:	080004e5 	.word	0x080004e5
 80005a4:	200001b4 	.word	0x200001b4

080005a8 <_fwalk_sglue>:
 80005a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80005ac:	4607      	mov	r7, r0
 80005ae:	4688      	mov	r8, r1
 80005b0:	4614      	mov	r4, r2
 80005b2:	2600      	movs	r6, #0
 80005b4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80005b8:	f1b9 0901 	subs.w	r9, r9, #1
 80005bc:	d505      	bpl.n	80005ca <_fwalk_sglue+0x22>
 80005be:	6824      	ldr	r4, [r4, #0]
 80005c0:	2c00      	cmp	r4, #0
 80005c2:	d1f7      	bne.n	80005b4 <_fwalk_sglue+0xc>
 80005c4:	4630      	mov	r0, r6
 80005c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80005ca:	89ab      	ldrh	r3, [r5, #12]
 80005cc:	2b01      	cmp	r3, #1
 80005ce:	d907      	bls.n	80005e0 <_fwalk_sglue+0x38>
 80005d0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80005d4:	3301      	adds	r3, #1
 80005d6:	d003      	beq.n	80005e0 <_fwalk_sglue+0x38>
 80005d8:	4629      	mov	r1, r5
 80005da:	4638      	mov	r0, r7
 80005dc:	47c0      	blx	r8
 80005de:	4306      	orrs	r6, r0
 80005e0:	3568      	adds	r5, #104	; 0x68
 80005e2:	e7e9      	b.n	80005b8 <_fwalk_sglue+0x10>

080005e4 <iprintf>:
 80005e4:	b40f      	push	{r0, r1, r2, r3}
 80005e6:	b507      	push	{r0, r1, r2, lr}
 80005e8:	4906      	ldr	r1, [pc, #24]	; (8000604 <iprintf+0x20>)
 80005ea:	ab04      	add	r3, sp, #16
 80005ec:	6808      	ldr	r0, [r1, #0]
 80005ee:	f853 2b04 	ldr.w	r2, [r3], #4
 80005f2:	6881      	ldr	r1, [r0, #8]
 80005f4:	9301      	str	r3, [sp, #4]
 80005f6:	f000 f9e3 	bl	80009c0 <_vfiprintf_r>
 80005fa:	b003      	add	sp, #12
 80005fc:	f85d eb04 	ldr.w	lr, [sp], #4
 8000600:	b004      	add	sp, #16
 8000602:	4770      	bx	lr
 8000604:	20000058 	.word	0x20000058

08000608 <__sread>:
 8000608:	b510      	push	{r4, lr}
 800060a:	460c      	mov	r4, r1
 800060c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000610:	f000 f868 	bl	80006e4 <_read_r>
 8000614:	2800      	cmp	r0, #0
 8000616:	bfab      	itete	ge
 8000618:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800061a:	89a3      	ldrhlt	r3, [r4, #12]
 800061c:	181b      	addge	r3, r3, r0
 800061e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000622:	bfac      	ite	ge
 8000624:	6563      	strge	r3, [r4, #84]	; 0x54
 8000626:	81a3      	strhlt	r3, [r4, #12]
 8000628:	bd10      	pop	{r4, pc}

0800062a <__swrite>:
 800062a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800062e:	461f      	mov	r7, r3
 8000630:	898b      	ldrh	r3, [r1, #12]
 8000632:	05db      	lsls	r3, r3, #23
 8000634:	4605      	mov	r5, r0
 8000636:	460c      	mov	r4, r1
 8000638:	4616      	mov	r6, r2
 800063a:	d505      	bpl.n	8000648 <__swrite+0x1e>
 800063c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000640:	2302      	movs	r3, #2
 8000642:	2200      	movs	r2, #0
 8000644:	f000 f83c 	bl	80006c0 <_lseek_r>
 8000648:	89a3      	ldrh	r3, [r4, #12]
 800064a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800064e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000652:	81a3      	strh	r3, [r4, #12]
 8000654:	4632      	mov	r2, r6
 8000656:	463b      	mov	r3, r7
 8000658:	4628      	mov	r0, r5
 800065a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800065e:	f000 b853 	b.w	8000708 <_write_r>

08000662 <__sseek>:
 8000662:	b510      	push	{r4, lr}
 8000664:	460c      	mov	r4, r1
 8000666:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800066a:	f000 f829 	bl	80006c0 <_lseek_r>
 800066e:	1c43      	adds	r3, r0, #1
 8000670:	89a3      	ldrh	r3, [r4, #12]
 8000672:	bf15      	itete	ne
 8000674:	6560      	strne	r0, [r4, #84]	; 0x54
 8000676:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800067a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800067e:	81a3      	strheq	r3, [r4, #12]
 8000680:	bf18      	it	ne
 8000682:	81a3      	strhne	r3, [r4, #12]
 8000684:	bd10      	pop	{r4, pc}

08000686 <__sclose>:
 8000686:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800068a:	f000 b809 	b.w	80006a0 <_close_r>

0800068e <memset>:
 800068e:	4402      	add	r2, r0
 8000690:	4603      	mov	r3, r0
 8000692:	4293      	cmp	r3, r2
 8000694:	d100      	bne.n	8000698 <memset+0xa>
 8000696:	4770      	bx	lr
 8000698:	f803 1b01 	strb.w	r1, [r3], #1
 800069c:	e7f9      	b.n	8000692 <memset+0x4>
	...

080006a0 <_close_r>:
 80006a0:	b538      	push	{r3, r4, r5, lr}
 80006a2:	4d06      	ldr	r5, [pc, #24]	; (80006bc <_close_r+0x1c>)
 80006a4:	2300      	movs	r3, #0
 80006a6:	4604      	mov	r4, r0
 80006a8:	4608      	mov	r0, r1
 80006aa:	602b      	str	r3, [r5, #0]
 80006ac:	f7ff fe59 	bl	8000362 <_close>
 80006b0:	1c43      	adds	r3, r0, #1
 80006b2:	d102      	bne.n	80006ba <_close_r+0x1a>
 80006b4:	682b      	ldr	r3, [r5, #0]
 80006b6:	b103      	cbz	r3, 80006ba <_close_r+0x1a>
 80006b8:	6023      	str	r3, [r4, #0]
 80006ba:	bd38      	pop	{r3, r4, r5, pc}
 80006bc:	200001b8 	.word	0x200001b8

080006c0 <_lseek_r>:
 80006c0:	b538      	push	{r3, r4, r5, lr}
 80006c2:	4d07      	ldr	r5, [pc, #28]	; (80006e0 <_lseek_r+0x20>)
 80006c4:	4604      	mov	r4, r0
 80006c6:	4608      	mov	r0, r1
 80006c8:	4611      	mov	r1, r2
 80006ca:	2200      	movs	r2, #0
 80006cc:	602a      	str	r2, [r5, #0]
 80006ce:	461a      	mov	r2, r3
 80006d0:	f7ff fe6b 	bl	80003aa <_lseek>
 80006d4:	1c43      	adds	r3, r0, #1
 80006d6:	d102      	bne.n	80006de <_lseek_r+0x1e>
 80006d8:	682b      	ldr	r3, [r5, #0]
 80006da:	b103      	cbz	r3, 80006de <_lseek_r+0x1e>
 80006dc:	6023      	str	r3, [r4, #0]
 80006de:	bd38      	pop	{r3, r4, r5, pc}
 80006e0:	200001b8 	.word	0x200001b8

080006e4 <_read_r>:
 80006e4:	b538      	push	{r3, r4, r5, lr}
 80006e6:	4d07      	ldr	r5, [pc, #28]	; (8000704 <_read_r+0x20>)
 80006e8:	4604      	mov	r4, r0
 80006ea:	4608      	mov	r0, r1
 80006ec:	4611      	mov	r1, r2
 80006ee:	2200      	movs	r2, #0
 80006f0:	602a      	str	r2, [r5, #0]
 80006f2:	461a      	mov	r2, r3
 80006f4:	f7ff fdfc 	bl	80002f0 <_read>
 80006f8:	1c43      	adds	r3, r0, #1
 80006fa:	d102      	bne.n	8000702 <_read_r+0x1e>
 80006fc:	682b      	ldr	r3, [r5, #0]
 80006fe:	b103      	cbz	r3, 8000702 <_read_r+0x1e>
 8000700:	6023      	str	r3, [r4, #0]
 8000702:	bd38      	pop	{r3, r4, r5, pc}
 8000704:	200001b8 	.word	0x200001b8

08000708 <_write_r>:
 8000708:	b538      	push	{r3, r4, r5, lr}
 800070a:	4d07      	ldr	r5, [pc, #28]	; (8000728 <_write_r+0x20>)
 800070c:	4604      	mov	r4, r0
 800070e:	4608      	mov	r0, r1
 8000710:	4611      	mov	r1, r2
 8000712:	2200      	movs	r2, #0
 8000714:	602a      	str	r2, [r5, #0]
 8000716:	461a      	mov	r2, r3
 8000718:	f7ff fe07 	bl	800032a <_write>
 800071c:	1c43      	adds	r3, r0, #1
 800071e:	d102      	bne.n	8000726 <_write_r+0x1e>
 8000720:	682b      	ldr	r3, [r5, #0]
 8000722:	b103      	cbz	r3, 8000726 <_write_r+0x1e>
 8000724:	6023      	str	r3, [r4, #0]
 8000726:	bd38      	pop	{r3, r4, r5, pc}
 8000728:	200001b8 	.word	0x200001b8

0800072c <__errno>:
 800072c:	4b01      	ldr	r3, [pc, #4]	; (8000734 <__errno+0x8>)
 800072e:	6818      	ldr	r0, [r3, #0]
 8000730:	4770      	bx	lr
 8000732:	bf00      	nop
 8000734:	20000058 	.word	0x20000058

08000738 <__libc_init_array>:
 8000738:	b570      	push	{r4, r5, r6, lr}
 800073a:	4d0d      	ldr	r5, [pc, #52]	; (8000770 <__libc_init_array+0x38>)
 800073c:	4c0d      	ldr	r4, [pc, #52]	; (8000774 <__libc_init_array+0x3c>)
 800073e:	1b64      	subs	r4, r4, r5
 8000740:	10a4      	asrs	r4, r4, #2
 8000742:	2600      	movs	r6, #0
 8000744:	42a6      	cmp	r6, r4
 8000746:	d109      	bne.n	800075c <__libc_init_array+0x24>
 8000748:	4d0b      	ldr	r5, [pc, #44]	; (8000778 <__libc_init_array+0x40>)
 800074a:	4c0c      	ldr	r4, [pc, #48]	; (800077c <__libc_init_array+0x44>)
 800074c:	f000 fdb6 	bl	80012bc <_init>
 8000750:	1b64      	subs	r4, r4, r5
 8000752:	10a4      	asrs	r4, r4, #2
 8000754:	2600      	movs	r6, #0
 8000756:	42a6      	cmp	r6, r4
 8000758:	d105      	bne.n	8000766 <__libc_init_array+0x2e>
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000760:	4798      	blx	r3
 8000762:	3601      	adds	r6, #1
 8000764:	e7ee      	b.n	8000744 <__libc_init_array+0xc>
 8000766:	f855 3b04 	ldr.w	r3, [r5], #4
 800076a:	4798      	blx	r3
 800076c:	3601      	adds	r6, #1
 800076e:	e7f2      	b.n	8000756 <__libc_init_array+0x1e>
 8000770:	08001314 	.word	0x08001314
 8000774:	08001314 	.word	0x08001314
 8000778:	08001314 	.word	0x08001314
 800077c:	08001318 	.word	0x08001318

08000780 <__retarget_lock_acquire_recursive>:
 8000780:	4770      	bx	lr

08000782 <__retarget_lock_release_recursive>:
 8000782:	4770      	bx	lr

08000784 <_free_r>:
 8000784:	b538      	push	{r3, r4, r5, lr}
 8000786:	4605      	mov	r5, r0
 8000788:	2900      	cmp	r1, #0
 800078a:	d041      	beq.n	8000810 <_free_r+0x8c>
 800078c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000790:	1f0c      	subs	r4, r1, #4
 8000792:	2b00      	cmp	r3, #0
 8000794:	bfb8      	it	lt
 8000796:	18e4      	addlt	r4, r4, r3
 8000798:	f000 f8de 	bl	8000958 <__malloc_lock>
 800079c:	4a1d      	ldr	r2, [pc, #116]	; (8000814 <_free_r+0x90>)
 800079e:	6813      	ldr	r3, [r2, #0]
 80007a0:	b933      	cbnz	r3, 80007b0 <_free_r+0x2c>
 80007a2:	6063      	str	r3, [r4, #4]
 80007a4:	6014      	str	r4, [r2, #0]
 80007a6:	4628      	mov	r0, r5
 80007a8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80007ac:	f000 b8da 	b.w	8000964 <__malloc_unlock>
 80007b0:	42a3      	cmp	r3, r4
 80007b2:	d908      	bls.n	80007c6 <_free_r+0x42>
 80007b4:	6820      	ldr	r0, [r4, #0]
 80007b6:	1821      	adds	r1, r4, r0
 80007b8:	428b      	cmp	r3, r1
 80007ba:	bf01      	itttt	eq
 80007bc:	6819      	ldreq	r1, [r3, #0]
 80007be:	685b      	ldreq	r3, [r3, #4]
 80007c0:	1809      	addeq	r1, r1, r0
 80007c2:	6021      	streq	r1, [r4, #0]
 80007c4:	e7ed      	b.n	80007a2 <_free_r+0x1e>
 80007c6:	461a      	mov	r2, r3
 80007c8:	685b      	ldr	r3, [r3, #4]
 80007ca:	b10b      	cbz	r3, 80007d0 <_free_r+0x4c>
 80007cc:	42a3      	cmp	r3, r4
 80007ce:	d9fa      	bls.n	80007c6 <_free_r+0x42>
 80007d0:	6811      	ldr	r1, [r2, #0]
 80007d2:	1850      	adds	r0, r2, r1
 80007d4:	42a0      	cmp	r0, r4
 80007d6:	d10b      	bne.n	80007f0 <_free_r+0x6c>
 80007d8:	6820      	ldr	r0, [r4, #0]
 80007da:	4401      	add	r1, r0
 80007dc:	1850      	adds	r0, r2, r1
 80007de:	4283      	cmp	r3, r0
 80007e0:	6011      	str	r1, [r2, #0]
 80007e2:	d1e0      	bne.n	80007a6 <_free_r+0x22>
 80007e4:	6818      	ldr	r0, [r3, #0]
 80007e6:	685b      	ldr	r3, [r3, #4]
 80007e8:	6053      	str	r3, [r2, #4]
 80007ea:	4408      	add	r0, r1
 80007ec:	6010      	str	r0, [r2, #0]
 80007ee:	e7da      	b.n	80007a6 <_free_r+0x22>
 80007f0:	d902      	bls.n	80007f8 <_free_r+0x74>
 80007f2:	230c      	movs	r3, #12
 80007f4:	602b      	str	r3, [r5, #0]
 80007f6:	e7d6      	b.n	80007a6 <_free_r+0x22>
 80007f8:	6820      	ldr	r0, [r4, #0]
 80007fa:	1821      	adds	r1, r4, r0
 80007fc:	428b      	cmp	r3, r1
 80007fe:	bf04      	itt	eq
 8000800:	6819      	ldreq	r1, [r3, #0]
 8000802:	685b      	ldreq	r3, [r3, #4]
 8000804:	6063      	str	r3, [r4, #4]
 8000806:	bf04      	itt	eq
 8000808:	1809      	addeq	r1, r1, r0
 800080a:	6021      	streq	r1, [r4, #0]
 800080c:	6054      	str	r4, [r2, #4]
 800080e:	e7ca      	b.n	80007a6 <_free_r+0x22>
 8000810:	bd38      	pop	{r3, r4, r5, pc}
 8000812:	bf00      	nop
 8000814:	200001c0 	.word	0x200001c0

08000818 <sbrk_aligned>:
 8000818:	b570      	push	{r4, r5, r6, lr}
 800081a:	4e0e      	ldr	r6, [pc, #56]	; (8000854 <sbrk_aligned+0x3c>)
 800081c:	460c      	mov	r4, r1
 800081e:	6831      	ldr	r1, [r6, #0]
 8000820:	4605      	mov	r5, r0
 8000822:	b911      	cbnz	r1, 800082a <sbrk_aligned+0x12>
 8000824:	f000 fcb6 	bl	8001194 <_sbrk_r>
 8000828:	6030      	str	r0, [r6, #0]
 800082a:	4621      	mov	r1, r4
 800082c:	4628      	mov	r0, r5
 800082e:	f000 fcb1 	bl	8001194 <_sbrk_r>
 8000832:	1c43      	adds	r3, r0, #1
 8000834:	d00a      	beq.n	800084c <sbrk_aligned+0x34>
 8000836:	1cc4      	adds	r4, r0, #3
 8000838:	f024 0403 	bic.w	r4, r4, #3
 800083c:	42a0      	cmp	r0, r4
 800083e:	d007      	beq.n	8000850 <sbrk_aligned+0x38>
 8000840:	1a21      	subs	r1, r4, r0
 8000842:	4628      	mov	r0, r5
 8000844:	f000 fca6 	bl	8001194 <_sbrk_r>
 8000848:	3001      	adds	r0, #1
 800084a:	d101      	bne.n	8000850 <sbrk_aligned+0x38>
 800084c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000850:	4620      	mov	r0, r4
 8000852:	bd70      	pop	{r4, r5, r6, pc}
 8000854:	200001c4 	.word	0x200001c4

08000858 <_malloc_r>:
 8000858:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800085c:	1ccd      	adds	r5, r1, #3
 800085e:	f025 0503 	bic.w	r5, r5, #3
 8000862:	3508      	adds	r5, #8
 8000864:	2d0c      	cmp	r5, #12
 8000866:	bf38      	it	cc
 8000868:	250c      	movcc	r5, #12
 800086a:	2d00      	cmp	r5, #0
 800086c:	4607      	mov	r7, r0
 800086e:	db01      	blt.n	8000874 <_malloc_r+0x1c>
 8000870:	42a9      	cmp	r1, r5
 8000872:	d905      	bls.n	8000880 <_malloc_r+0x28>
 8000874:	230c      	movs	r3, #12
 8000876:	603b      	str	r3, [r7, #0]
 8000878:	2600      	movs	r6, #0
 800087a:	4630      	mov	r0, r6
 800087c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000880:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000954 <_malloc_r+0xfc>
 8000884:	f000 f868 	bl	8000958 <__malloc_lock>
 8000888:	f8d8 3000 	ldr.w	r3, [r8]
 800088c:	461c      	mov	r4, r3
 800088e:	bb5c      	cbnz	r4, 80008e8 <_malloc_r+0x90>
 8000890:	4629      	mov	r1, r5
 8000892:	4638      	mov	r0, r7
 8000894:	f7ff ffc0 	bl	8000818 <sbrk_aligned>
 8000898:	1c43      	adds	r3, r0, #1
 800089a:	4604      	mov	r4, r0
 800089c:	d155      	bne.n	800094a <_malloc_r+0xf2>
 800089e:	f8d8 4000 	ldr.w	r4, [r8]
 80008a2:	4626      	mov	r6, r4
 80008a4:	2e00      	cmp	r6, #0
 80008a6:	d145      	bne.n	8000934 <_malloc_r+0xdc>
 80008a8:	2c00      	cmp	r4, #0
 80008aa:	d048      	beq.n	800093e <_malloc_r+0xe6>
 80008ac:	6823      	ldr	r3, [r4, #0]
 80008ae:	4631      	mov	r1, r6
 80008b0:	4638      	mov	r0, r7
 80008b2:	eb04 0903 	add.w	r9, r4, r3
 80008b6:	f000 fc6d 	bl	8001194 <_sbrk_r>
 80008ba:	4581      	cmp	r9, r0
 80008bc:	d13f      	bne.n	800093e <_malloc_r+0xe6>
 80008be:	6821      	ldr	r1, [r4, #0]
 80008c0:	1a6d      	subs	r5, r5, r1
 80008c2:	4629      	mov	r1, r5
 80008c4:	4638      	mov	r0, r7
 80008c6:	f7ff ffa7 	bl	8000818 <sbrk_aligned>
 80008ca:	3001      	adds	r0, #1
 80008cc:	d037      	beq.n	800093e <_malloc_r+0xe6>
 80008ce:	6823      	ldr	r3, [r4, #0]
 80008d0:	442b      	add	r3, r5
 80008d2:	6023      	str	r3, [r4, #0]
 80008d4:	f8d8 3000 	ldr.w	r3, [r8]
 80008d8:	2b00      	cmp	r3, #0
 80008da:	d038      	beq.n	800094e <_malloc_r+0xf6>
 80008dc:	685a      	ldr	r2, [r3, #4]
 80008de:	42a2      	cmp	r2, r4
 80008e0:	d12b      	bne.n	800093a <_malloc_r+0xe2>
 80008e2:	2200      	movs	r2, #0
 80008e4:	605a      	str	r2, [r3, #4]
 80008e6:	e00f      	b.n	8000908 <_malloc_r+0xb0>
 80008e8:	6822      	ldr	r2, [r4, #0]
 80008ea:	1b52      	subs	r2, r2, r5
 80008ec:	d41f      	bmi.n	800092e <_malloc_r+0xd6>
 80008ee:	2a0b      	cmp	r2, #11
 80008f0:	d917      	bls.n	8000922 <_malloc_r+0xca>
 80008f2:	1961      	adds	r1, r4, r5
 80008f4:	42a3      	cmp	r3, r4
 80008f6:	6025      	str	r5, [r4, #0]
 80008f8:	bf18      	it	ne
 80008fa:	6059      	strne	r1, [r3, #4]
 80008fc:	6863      	ldr	r3, [r4, #4]
 80008fe:	bf08      	it	eq
 8000900:	f8c8 1000 	streq.w	r1, [r8]
 8000904:	5162      	str	r2, [r4, r5]
 8000906:	604b      	str	r3, [r1, #4]
 8000908:	4638      	mov	r0, r7
 800090a:	f104 060b 	add.w	r6, r4, #11
 800090e:	f000 f829 	bl	8000964 <__malloc_unlock>
 8000912:	f026 0607 	bic.w	r6, r6, #7
 8000916:	1d23      	adds	r3, r4, #4
 8000918:	1af2      	subs	r2, r6, r3
 800091a:	d0ae      	beq.n	800087a <_malloc_r+0x22>
 800091c:	1b9b      	subs	r3, r3, r6
 800091e:	50a3      	str	r3, [r4, r2]
 8000920:	e7ab      	b.n	800087a <_malloc_r+0x22>
 8000922:	42a3      	cmp	r3, r4
 8000924:	6862      	ldr	r2, [r4, #4]
 8000926:	d1dd      	bne.n	80008e4 <_malloc_r+0x8c>
 8000928:	f8c8 2000 	str.w	r2, [r8]
 800092c:	e7ec      	b.n	8000908 <_malloc_r+0xb0>
 800092e:	4623      	mov	r3, r4
 8000930:	6864      	ldr	r4, [r4, #4]
 8000932:	e7ac      	b.n	800088e <_malloc_r+0x36>
 8000934:	4634      	mov	r4, r6
 8000936:	6876      	ldr	r6, [r6, #4]
 8000938:	e7b4      	b.n	80008a4 <_malloc_r+0x4c>
 800093a:	4613      	mov	r3, r2
 800093c:	e7cc      	b.n	80008d8 <_malloc_r+0x80>
 800093e:	230c      	movs	r3, #12
 8000940:	603b      	str	r3, [r7, #0]
 8000942:	4638      	mov	r0, r7
 8000944:	f000 f80e 	bl	8000964 <__malloc_unlock>
 8000948:	e797      	b.n	800087a <_malloc_r+0x22>
 800094a:	6025      	str	r5, [r4, #0]
 800094c:	e7dc      	b.n	8000908 <_malloc_r+0xb0>
 800094e:	605b      	str	r3, [r3, #4]
 8000950:	deff      	udf	#255	; 0xff
 8000952:	bf00      	nop
 8000954:	200001c0 	.word	0x200001c0

08000958 <__malloc_lock>:
 8000958:	4801      	ldr	r0, [pc, #4]	; (8000960 <__malloc_lock+0x8>)
 800095a:	f7ff bf11 	b.w	8000780 <__retarget_lock_acquire_recursive>
 800095e:	bf00      	nop
 8000960:	200001bc 	.word	0x200001bc

08000964 <__malloc_unlock>:
 8000964:	4801      	ldr	r0, [pc, #4]	; (800096c <__malloc_unlock+0x8>)
 8000966:	f7ff bf0c 	b.w	8000782 <__retarget_lock_release_recursive>
 800096a:	bf00      	nop
 800096c:	200001bc 	.word	0x200001bc

08000970 <__sfputc_r>:
 8000970:	6893      	ldr	r3, [r2, #8]
 8000972:	3b01      	subs	r3, #1
 8000974:	2b00      	cmp	r3, #0
 8000976:	b410      	push	{r4}
 8000978:	6093      	str	r3, [r2, #8]
 800097a:	da07      	bge.n	800098c <__sfputc_r+0x1c>
 800097c:	6994      	ldr	r4, [r2, #24]
 800097e:	42a3      	cmp	r3, r4
 8000980:	db01      	blt.n	8000986 <__sfputc_r+0x16>
 8000982:	290a      	cmp	r1, #10
 8000984:	d102      	bne.n	800098c <__sfputc_r+0x1c>
 8000986:	bc10      	pop	{r4}
 8000988:	f000 bb6e 	b.w	8001068 <__swbuf_r>
 800098c:	6813      	ldr	r3, [r2, #0]
 800098e:	1c58      	adds	r0, r3, #1
 8000990:	6010      	str	r0, [r2, #0]
 8000992:	7019      	strb	r1, [r3, #0]
 8000994:	4608      	mov	r0, r1
 8000996:	bc10      	pop	{r4}
 8000998:	4770      	bx	lr

0800099a <__sfputs_r>:
 800099a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800099c:	4606      	mov	r6, r0
 800099e:	460f      	mov	r7, r1
 80009a0:	4614      	mov	r4, r2
 80009a2:	18d5      	adds	r5, r2, r3
 80009a4:	42ac      	cmp	r4, r5
 80009a6:	d101      	bne.n	80009ac <__sfputs_r+0x12>
 80009a8:	2000      	movs	r0, #0
 80009aa:	e007      	b.n	80009bc <__sfputs_r+0x22>
 80009ac:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009b0:	463a      	mov	r2, r7
 80009b2:	4630      	mov	r0, r6
 80009b4:	f7ff ffdc 	bl	8000970 <__sfputc_r>
 80009b8:	1c43      	adds	r3, r0, #1
 80009ba:	d1f3      	bne.n	80009a4 <__sfputs_r+0xa>
 80009bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080009c0 <_vfiprintf_r>:
 80009c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80009c4:	460d      	mov	r5, r1
 80009c6:	b09d      	sub	sp, #116	; 0x74
 80009c8:	4614      	mov	r4, r2
 80009ca:	4698      	mov	r8, r3
 80009cc:	4606      	mov	r6, r0
 80009ce:	b118      	cbz	r0, 80009d8 <_vfiprintf_r+0x18>
 80009d0:	6a03      	ldr	r3, [r0, #32]
 80009d2:	b90b      	cbnz	r3, 80009d8 <_vfiprintf_r+0x18>
 80009d4:	f7ff fdd0 	bl	8000578 <__sinit>
 80009d8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80009da:	07d9      	lsls	r1, r3, #31
 80009dc:	d405      	bmi.n	80009ea <_vfiprintf_r+0x2a>
 80009de:	89ab      	ldrh	r3, [r5, #12]
 80009e0:	059a      	lsls	r2, r3, #22
 80009e2:	d402      	bmi.n	80009ea <_vfiprintf_r+0x2a>
 80009e4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80009e6:	f7ff fecb 	bl	8000780 <__retarget_lock_acquire_recursive>
 80009ea:	89ab      	ldrh	r3, [r5, #12]
 80009ec:	071b      	lsls	r3, r3, #28
 80009ee:	d501      	bpl.n	80009f4 <_vfiprintf_r+0x34>
 80009f0:	692b      	ldr	r3, [r5, #16]
 80009f2:	b99b      	cbnz	r3, 8000a1c <_vfiprintf_r+0x5c>
 80009f4:	4629      	mov	r1, r5
 80009f6:	4630      	mov	r0, r6
 80009f8:	f000 fb74 	bl	80010e4 <__swsetup_r>
 80009fc:	b170      	cbz	r0, 8000a1c <_vfiprintf_r+0x5c>
 80009fe:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a00:	07dc      	lsls	r4, r3, #31
 8000a02:	d504      	bpl.n	8000a0e <_vfiprintf_r+0x4e>
 8000a04:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000a08:	b01d      	add	sp, #116	; 0x74
 8000a0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a0e:	89ab      	ldrh	r3, [r5, #12]
 8000a10:	0598      	lsls	r0, r3, #22
 8000a12:	d4f7      	bmi.n	8000a04 <_vfiprintf_r+0x44>
 8000a14:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a16:	f7ff feb4 	bl	8000782 <__retarget_lock_release_recursive>
 8000a1a:	e7f3      	b.n	8000a04 <_vfiprintf_r+0x44>
 8000a1c:	2300      	movs	r3, #0
 8000a1e:	9309      	str	r3, [sp, #36]	; 0x24
 8000a20:	2320      	movs	r3, #32
 8000a22:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000a26:	f8cd 800c 	str.w	r8, [sp, #12]
 8000a2a:	2330      	movs	r3, #48	; 0x30
 8000a2c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000be0 <_vfiprintf_r+0x220>
 8000a30:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000a34:	f04f 0901 	mov.w	r9, #1
 8000a38:	4623      	mov	r3, r4
 8000a3a:	469a      	mov	sl, r3
 8000a3c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a40:	b10a      	cbz	r2, 8000a46 <_vfiprintf_r+0x86>
 8000a42:	2a25      	cmp	r2, #37	; 0x25
 8000a44:	d1f9      	bne.n	8000a3a <_vfiprintf_r+0x7a>
 8000a46:	ebba 0b04 	subs.w	fp, sl, r4
 8000a4a:	d00b      	beq.n	8000a64 <_vfiprintf_r+0xa4>
 8000a4c:	465b      	mov	r3, fp
 8000a4e:	4622      	mov	r2, r4
 8000a50:	4629      	mov	r1, r5
 8000a52:	4630      	mov	r0, r6
 8000a54:	f7ff ffa1 	bl	800099a <__sfputs_r>
 8000a58:	3001      	adds	r0, #1
 8000a5a:	f000 80a9 	beq.w	8000bb0 <_vfiprintf_r+0x1f0>
 8000a5e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000a60:	445a      	add	r2, fp
 8000a62:	9209      	str	r2, [sp, #36]	; 0x24
 8000a64:	f89a 3000 	ldrb.w	r3, [sl]
 8000a68:	2b00      	cmp	r3, #0
 8000a6a:	f000 80a1 	beq.w	8000bb0 <_vfiprintf_r+0x1f0>
 8000a6e:	2300      	movs	r3, #0
 8000a70:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000a74:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000a78:	f10a 0a01 	add.w	sl, sl, #1
 8000a7c:	9304      	str	r3, [sp, #16]
 8000a7e:	9307      	str	r3, [sp, #28]
 8000a80:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000a84:	931a      	str	r3, [sp, #104]	; 0x68
 8000a86:	4654      	mov	r4, sl
 8000a88:	2205      	movs	r2, #5
 8000a8a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a8e:	4854      	ldr	r0, [pc, #336]	; (8000be0 <_vfiprintf_r+0x220>)
 8000a90:	f7ff fbae 	bl	80001f0 <memchr>
 8000a94:	9a04      	ldr	r2, [sp, #16]
 8000a96:	b9d8      	cbnz	r0, 8000ad0 <_vfiprintf_r+0x110>
 8000a98:	06d1      	lsls	r1, r2, #27
 8000a9a:	bf44      	itt	mi
 8000a9c:	2320      	movmi	r3, #32
 8000a9e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000aa2:	0713      	lsls	r3, r2, #28
 8000aa4:	bf44      	itt	mi
 8000aa6:	232b      	movmi	r3, #43	; 0x2b
 8000aa8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000aac:	f89a 3000 	ldrb.w	r3, [sl]
 8000ab0:	2b2a      	cmp	r3, #42	; 0x2a
 8000ab2:	d015      	beq.n	8000ae0 <_vfiprintf_r+0x120>
 8000ab4:	9a07      	ldr	r2, [sp, #28]
 8000ab6:	4654      	mov	r4, sl
 8000ab8:	2000      	movs	r0, #0
 8000aba:	f04f 0c0a 	mov.w	ip, #10
 8000abe:	4621      	mov	r1, r4
 8000ac0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000ac4:	3b30      	subs	r3, #48	; 0x30
 8000ac6:	2b09      	cmp	r3, #9
 8000ac8:	d94d      	bls.n	8000b66 <_vfiprintf_r+0x1a6>
 8000aca:	b1b0      	cbz	r0, 8000afa <_vfiprintf_r+0x13a>
 8000acc:	9207      	str	r2, [sp, #28]
 8000ace:	e014      	b.n	8000afa <_vfiprintf_r+0x13a>
 8000ad0:	eba0 0308 	sub.w	r3, r0, r8
 8000ad4:	fa09 f303 	lsl.w	r3, r9, r3
 8000ad8:	4313      	orrs	r3, r2
 8000ada:	9304      	str	r3, [sp, #16]
 8000adc:	46a2      	mov	sl, r4
 8000ade:	e7d2      	b.n	8000a86 <_vfiprintf_r+0xc6>
 8000ae0:	9b03      	ldr	r3, [sp, #12]
 8000ae2:	1d19      	adds	r1, r3, #4
 8000ae4:	681b      	ldr	r3, [r3, #0]
 8000ae6:	9103      	str	r1, [sp, #12]
 8000ae8:	2b00      	cmp	r3, #0
 8000aea:	bfbb      	ittet	lt
 8000aec:	425b      	neglt	r3, r3
 8000aee:	f042 0202 	orrlt.w	r2, r2, #2
 8000af2:	9307      	strge	r3, [sp, #28]
 8000af4:	9307      	strlt	r3, [sp, #28]
 8000af6:	bfb8      	it	lt
 8000af8:	9204      	strlt	r2, [sp, #16]
 8000afa:	7823      	ldrb	r3, [r4, #0]
 8000afc:	2b2e      	cmp	r3, #46	; 0x2e
 8000afe:	d10c      	bne.n	8000b1a <_vfiprintf_r+0x15a>
 8000b00:	7863      	ldrb	r3, [r4, #1]
 8000b02:	2b2a      	cmp	r3, #42	; 0x2a
 8000b04:	d134      	bne.n	8000b70 <_vfiprintf_r+0x1b0>
 8000b06:	9b03      	ldr	r3, [sp, #12]
 8000b08:	1d1a      	adds	r2, r3, #4
 8000b0a:	681b      	ldr	r3, [r3, #0]
 8000b0c:	9203      	str	r2, [sp, #12]
 8000b0e:	2b00      	cmp	r3, #0
 8000b10:	bfb8      	it	lt
 8000b12:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000b16:	3402      	adds	r4, #2
 8000b18:	9305      	str	r3, [sp, #20]
 8000b1a:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8000be4 <_vfiprintf_r+0x224>
 8000b1e:	7821      	ldrb	r1, [r4, #0]
 8000b20:	2203      	movs	r2, #3
 8000b22:	4650      	mov	r0, sl
 8000b24:	f7ff fb64 	bl	80001f0 <memchr>
 8000b28:	b138      	cbz	r0, 8000b3a <_vfiprintf_r+0x17a>
 8000b2a:	9b04      	ldr	r3, [sp, #16]
 8000b2c:	eba0 000a 	sub.w	r0, r0, sl
 8000b30:	2240      	movs	r2, #64	; 0x40
 8000b32:	4082      	lsls	r2, r0
 8000b34:	4313      	orrs	r3, r2
 8000b36:	3401      	adds	r4, #1
 8000b38:	9304      	str	r3, [sp, #16]
 8000b3a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b3e:	482a      	ldr	r0, [pc, #168]	; (8000be8 <_vfiprintf_r+0x228>)
 8000b40:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000b44:	2206      	movs	r2, #6
 8000b46:	f7ff fb53 	bl	80001f0 <memchr>
 8000b4a:	2800      	cmp	r0, #0
 8000b4c:	d03f      	beq.n	8000bce <_vfiprintf_r+0x20e>
 8000b4e:	4b27      	ldr	r3, [pc, #156]	; (8000bec <_vfiprintf_r+0x22c>)
 8000b50:	bb1b      	cbnz	r3, 8000b9a <_vfiprintf_r+0x1da>
 8000b52:	9b03      	ldr	r3, [sp, #12]
 8000b54:	3307      	adds	r3, #7
 8000b56:	f023 0307 	bic.w	r3, r3, #7
 8000b5a:	3308      	adds	r3, #8
 8000b5c:	9303      	str	r3, [sp, #12]
 8000b5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000b60:	443b      	add	r3, r7
 8000b62:	9309      	str	r3, [sp, #36]	; 0x24
 8000b64:	e768      	b.n	8000a38 <_vfiprintf_r+0x78>
 8000b66:	fb0c 3202 	mla	r2, ip, r2, r3
 8000b6a:	460c      	mov	r4, r1
 8000b6c:	2001      	movs	r0, #1
 8000b6e:	e7a6      	b.n	8000abe <_vfiprintf_r+0xfe>
 8000b70:	2300      	movs	r3, #0
 8000b72:	3401      	adds	r4, #1
 8000b74:	9305      	str	r3, [sp, #20]
 8000b76:	4619      	mov	r1, r3
 8000b78:	f04f 0c0a 	mov.w	ip, #10
 8000b7c:	4620      	mov	r0, r4
 8000b7e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000b82:	3a30      	subs	r2, #48	; 0x30
 8000b84:	2a09      	cmp	r2, #9
 8000b86:	d903      	bls.n	8000b90 <_vfiprintf_r+0x1d0>
 8000b88:	2b00      	cmp	r3, #0
 8000b8a:	d0c6      	beq.n	8000b1a <_vfiprintf_r+0x15a>
 8000b8c:	9105      	str	r1, [sp, #20]
 8000b8e:	e7c4      	b.n	8000b1a <_vfiprintf_r+0x15a>
 8000b90:	fb0c 2101 	mla	r1, ip, r1, r2
 8000b94:	4604      	mov	r4, r0
 8000b96:	2301      	movs	r3, #1
 8000b98:	e7f0      	b.n	8000b7c <_vfiprintf_r+0x1bc>
 8000b9a:	ab03      	add	r3, sp, #12
 8000b9c:	9300      	str	r3, [sp, #0]
 8000b9e:	462a      	mov	r2, r5
 8000ba0:	4b13      	ldr	r3, [pc, #76]	; (8000bf0 <_vfiprintf_r+0x230>)
 8000ba2:	a904      	add	r1, sp, #16
 8000ba4:	4630      	mov	r0, r6
 8000ba6:	f3af 8000 	nop.w
 8000baa:	4607      	mov	r7, r0
 8000bac:	1c78      	adds	r0, r7, #1
 8000bae:	d1d6      	bne.n	8000b5e <_vfiprintf_r+0x19e>
 8000bb0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000bb2:	07d9      	lsls	r1, r3, #31
 8000bb4:	d405      	bmi.n	8000bc2 <_vfiprintf_r+0x202>
 8000bb6:	89ab      	ldrh	r3, [r5, #12]
 8000bb8:	059a      	lsls	r2, r3, #22
 8000bba:	d402      	bmi.n	8000bc2 <_vfiprintf_r+0x202>
 8000bbc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000bbe:	f7ff fde0 	bl	8000782 <__retarget_lock_release_recursive>
 8000bc2:	89ab      	ldrh	r3, [r5, #12]
 8000bc4:	065b      	lsls	r3, r3, #25
 8000bc6:	f53f af1d 	bmi.w	8000a04 <_vfiprintf_r+0x44>
 8000bca:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000bcc:	e71c      	b.n	8000a08 <_vfiprintf_r+0x48>
 8000bce:	ab03      	add	r3, sp, #12
 8000bd0:	9300      	str	r3, [sp, #0]
 8000bd2:	462a      	mov	r2, r5
 8000bd4:	4b06      	ldr	r3, [pc, #24]	; (8000bf0 <_vfiprintf_r+0x230>)
 8000bd6:	a904      	add	r1, sp, #16
 8000bd8:	4630      	mov	r0, r6
 8000bda:	f000 f879 	bl	8000cd0 <_printf_i>
 8000bde:	e7e4      	b.n	8000baa <_vfiprintf_r+0x1ea>
 8000be0:	080012e1 	.word	0x080012e1
 8000be4:	080012e7 	.word	0x080012e7
 8000be8:	080012eb 	.word	0x080012eb
 8000bec:	00000000 	.word	0x00000000
 8000bf0:	0800099b 	.word	0x0800099b

08000bf4 <_printf_common>:
 8000bf4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bf8:	4616      	mov	r6, r2
 8000bfa:	4699      	mov	r9, r3
 8000bfc:	688a      	ldr	r2, [r1, #8]
 8000bfe:	690b      	ldr	r3, [r1, #16]
 8000c00:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000c04:	4293      	cmp	r3, r2
 8000c06:	bfb8      	it	lt
 8000c08:	4613      	movlt	r3, r2
 8000c0a:	6033      	str	r3, [r6, #0]
 8000c0c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000c10:	4607      	mov	r7, r0
 8000c12:	460c      	mov	r4, r1
 8000c14:	b10a      	cbz	r2, 8000c1a <_printf_common+0x26>
 8000c16:	3301      	adds	r3, #1
 8000c18:	6033      	str	r3, [r6, #0]
 8000c1a:	6823      	ldr	r3, [r4, #0]
 8000c1c:	0699      	lsls	r1, r3, #26
 8000c1e:	bf42      	ittt	mi
 8000c20:	6833      	ldrmi	r3, [r6, #0]
 8000c22:	3302      	addmi	r3, #2
 8000c24:	6033      	strmi	r3, [r6, #0]
 8000c26:	6825      	ldr	r5, [r4, #0]
 8000c28:	f015 0506 	ands.w	r5, r5, #6
 8000c2c:	d106      	bne.n	8000c3c <_printf_common+0x48>
 8000c2e:	f104 0a19 	add.w	sl, r4, #25
 8000c32:	68e3      	ldr	r3, [r4, #12]
 8000c34:	6832      	ldr	r2, [r6, #0]
 8000c36:	1a9b      	subs	r3, r3, r2
 8000c38:	42ab      	cmp	r3, r5
 8000c3a:	dc26      	bgt.n	8000c8a <_printf_common+0x96>
 8000c3c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000c40:	1e13      	subs	r3, r2, #0
 8000c42:	6822      	ldr	r2, [r4, #0]
 8000c44:	bf18      	it	ne
 8000c46:	2301      	movne	r3, #1
 8000c48:	0692      	lsls	r2, r2, #26
 8000c4a:	d42b      	bmi.n	8000ca4 <_printf_common+0xb0>
 8000c4c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000c50:	4649      	mov	r1, r9
 8000c52:	4638      	mov	r0, r7
 8000c54:	47c0      	blx	r8
 8000c56:	3001      	adds	r0, #1
 8000c58:	d01e      	beq.n	8000c98 <_printf_common+0xa4>
 8000c5a:	6823      	ldr	r3, [r4, #0]
 8000c5c:	6922      	ldr	r2, [r4, #16]
 8000c5e:	f003 0306 	and.w	r3, r3, #6
 8000c62:	2b04      	cmp	r3, #4
 8000c64:	bf02      	ittt	eq
 8000c66:	68e5      	ldreq	r5, [r4, #12]
 8000c68:	6833      	ldreq	r3, [r6, #0]
 8000c6a:	1aed      	subeq	r5, r5, r3
 8000c6c:	68a3      	ldr	r3, [r4, #8]
 8000c6e:	bf0c      	ite	eq
 8000c70:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c74:	2500      	movne	r5, #0
 8000c76:	4293      	cmp	r3, r2
 8000c78:	bfc4      	itt	gt
 8000c7a:	1a9b      	subgt	r3, r3, r2
 8000c7c:	18ed      	addgt	r5, r5, r3
 8000c7e:	2600      	movs	r6, #0
 8000c80:	341a      	adds	r4, #26
 8000c82:	42b5      	cmp	r5, r6
 8000c84:	d11a      	bne.n	8000cbc <_printf_common+0xc8>
 8000c86:	2000      	movs	r0, #0
 8000c88:	e008      	b.n	8000c9c <_printf_common+0xa8>
 8000c8a:	2301      	movs	r3, #1
 8000c8c:	4652      	mov	r2, sl
 8000c8e:	4649      	mov	r1, r9
 8000c90:	4638      	mov	r0, r7
 8000c92:	47c0      	blx	r8
 8000c94:	3001      	adds	r0, #1
 8000c96:	d103      	bne.n	8000ca0 <_printf_common+0xac>
 8000c98:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000c9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ca0:	3501      	adds	r5, #1
 8000ca2:	e7c6      	b.n	8000c32 <_printf_common+0x3e>
 8000ca4:	18e1      	adds	r1, r4, r3
 8000ca6:	1c5a      	adds	r2, r3, #1
 8000ca8:	2030      	movs	r0, #48	; 0x30
 8000caa:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000cae:	4422      	add	r2, r4
 8000cb0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000cb4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000cb8:	3302      	adds	r3, #2
 8000cba:	e7c7      	b.n	8000c4c <_printf_common+0x58>
 8000cbc:	2301      	movs	r3, #1
 8000cbe:	4622      	mov	r2, r4
 8000cc0:	4649      	mov	r1, r9
 8000cc2:	4638      	mov	r0, r7
 8000cc4:	47c0      	blx	r8
 8000cc6:	3001      	adds	r0, #1
 8000cc8:	d0e6      	beq.n	8000c98 <_printf_common+0xa4>
 8000cca:	3601      	adds	r6, #1
 8000ccc:	e7d9      	b.n	8000c82 <_printf_common+0x8e>
	...

08000cd0 <_printf_i>:
 8000cd0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000cd4:	7e0f      	ldrb	r7, [r1, #24]
 8000cd6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000cd8:	2f78      	cmp	r7, #120	; 0x78
 8000cda:	4691      	mov	r9, r2
 8000cdc:	4680      	mov	r8, r0
 8000cde:	460c      	mov	r4, r1
 8000ce0:	469a      	mov	sl, r3
 8000ce2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000ce6:	d807      	bhi.n	8000cf8 <_printf_i+0x28>
 8000ce8:	2f62      	cmp	r7, #98	; 0x62
 8000cea:	d80a      	bhi.n	8000d02 <_printf_i+0x32>
 8000cec:	2f00      	cmp	r7, #0
 8000cee:	f000 80d4 	beq.w	8000e9a <_printf_i+0x1ca>
 8000cf2:	2f58      	cmp	r7, #88	; 0x58
 8000cf4:	f000 80c0 	beq.w	8000e78 <_printf_i+0x1a8>
 8000cf8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000cfc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000d00:	e03a      	b.n	8000d78 <_printf_i+0xa8>
 8000d02:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000d06:	2b15      	cmp	r3, #21
 8000d08:	d8f6      	bhi.n	8000cf8 <_printf_i+0x28>
 8000d0a:	a101      	add	r1, pc, #4	; (adr r1, 8000d10 <_printf_i+0x40>)
 8000d0c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000d10:	08000d69 	.word	0x08000d69
 8000d14:	08000d7d 	.word	0x08000d7d
 8000d18:	08000cf9 	.word	0x08000cf9
 8000d1c:	08000cf9 	.word	0x08000cf9
 8000d20:	08000cf9 	.word	0x08000cf9
 8000d24:	08000cf9 	.word	0x08000cf9
 8000d28:	08000d7d 	.word	0x08000d7d
 8000d2c:	08000cf9 	.word	0x08000cf9
 8000d30:	08000cf9 	.word	0x08000cf9
 8000d34:	08000cf9 	.word	0x08000cf9
 8000d38:	08000cf9 	.word	0x08000cf9
 8000d3c:	08000e81 	.word	0x08000e81
 8000d40:	08000da9 	.word	0x08000da9
 8000d44:	08000e3b 	.word	0x08000e3b
 8000d48:	08000cf9 	.word	0x08000cf9
 8000d4c:	08000cf9 	.word	0x08000cf9
 8000d50:	08000ea3 	.word	0x08000ea3
 8000d54:	08000cf9 	.word	0x08000cf9
 8000d58:	08000da9 	.word	0x08000da9
 8000d5c:	08000cf9 	.word	0x08000cf9
 8000d60:	08000cf9 	.word	0x08000cf9
 8000d64:	08000e43 	.word	0x08000e43
 8000d68:	682b      	ldr	r3, [r5, #0]
 8000d6a:	1d1a      	adds	r2, r3, #4
 8000d6c:	681b      	ldr	r3, [r3, #0]
 8000d6e:	602a      	str	r2, [r5, #0]
 8000d70:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d74:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000d78:	2301      	movs	r3, #1
 8000d7a:	e09f      	b.n	8000ebc <_printf_i+0x1ec>
 8000d7c:	6820      	ldr	r0, [r4, #0]
 8000d7e:	682b      	ldr	r3, [r5, #0]
 8000d80:	0607      	lsls	r7, r0, #24
 8000d82:	f103 0104 	add.w	r1, r3, #4
 8000d86:	6029      	str	r1, [r5, #0]
 8000d88:	d501      	bpl.n	8000d8e <_printf_i+0xbe>
 8000d8a:	681e      	ldr	r6, [r3, #0]
 8000d8c:	e003      	b.n	8000d96 <_printf_i+0xc6>
 8000d8e:	0646      	lsls	r6, r0, #25
 8000d90:	d5fb      	bpl.n	8000d8a <_printf_i+0xba>
 8000d92:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000d96:	2e00      	cmp	r6, #0
 8000d98:	da03      	bge.n	8000da2 <_printf_i+0xd2>
 8000d9a:	232d      	movs	r3, #45	; 0x2d
 8000d9c:	4276      	negs	r6, r6
 8000d9e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000da2:	485a      	ldr	r0, [pc, #360]	; (8000f0c <_printf_i+0x23c>)
 8000da4:	230a      	movs	r3, #10
 8000da6:	e012      	b.n	8000dce <_printf_i+0xfe>
 8000da8:	682b      	ldr	r3, [r5, #0]
 8000daa:	6820      	ldr	r0, [r4, #0]
 8000dac:	1d19      	adds	r1, r3, #4
 8000dae:	6029      	str	r1, [r5, #0]
 8000db0:	0605      	lsls	r5, r0, #24
 8000db2:	d501      	bpl.n	8000db8 <_printf_i+0xe8>
 8000db4:	681e      	ldr	r6, [r3, #0]
 8000db6:	e002      	b.n	8000dbe <_printf_i+0xee>
 8000db8:	0641      	lsls	r1, r0, #25
 8000dba:	d5fb      	bpl.n	8000db4 <_printf_i+0xe4>
 8000dbc:	881e      	ldrh	r6, [r3, #0]
 8000dbe:	4853      	ldr	r0, [pc, #332]	; (8000f0c <_printf_i+0x23c>)
 8000dc0:	2f6f      	cmp	r7, #111	; 0x6f
 8000dc2:	bf0c      	ite	eq
 8000dc4:	2308      	moveq	r3, #8
 8000dc6:	230a      	movne	r3, #10
 8000dc8:	2100      	movs	r1, #0
 8000dca:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000dce:	6865      	ldr	r5, [r4, #4]
 8000dd0:	60a5      	str	r5, [r4, #8]
 8000dd2:	2d00      	cmp	r5, #0
 8000dd4:	bfa2      	ittt	ge
 8000dd6:	6821      	ldrge	r1, [r4, #0]
 8000dd8:	f021 0104 	bicge.w	r1, r1, #4
 8000ddc:	6021      	strge	r1, [r4, #0]
 8000dde:	b90e      	cbnz	r6, 8000de4 <_printf_i+0x114>
 8000de0:	2d00      	cmp	r5, #0
 8000de2:	d04b      	beq.n	8000e7c <_printf_i+0x1ac>
 8000de4:	4615      	mov	r5, r2
 8000de6:	fbb6 f1f3 	udiv	r1, r6, r3
 8000dea:	fb03 6711 	mls	r7, r3, r1, r6
 8000dee:	5dc7      	ldrb	r7, [r0, r7]
 8000df0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000df4:	4637      	mov	r7, r6
 8000df6:	42bb      	cmp	r3, r7
 8000df8:	460e      	mov	r6, r1
 8000dfa:	d9f4      	bls.n	8000de6 <_printf_i+0x116>
 8000dfc:	2b08      	cmp	r3, #8
 8000dfe:	d10b      	bne.n	8000e18 <_printf_i+0x148>
 8000e00:	6823      	ldr	r3, [r4, #0]
 8000e02:	07de      	lsls	r6, r3, #31
 8000e04:	d508      	bpl.n	8000e18 <_printf_i+0x148>
 8000e06:	6923      	ldr	r3, [r4, #16]
 8000e08:	6861      	ldr	r1, [r4, #4]
 8000e0a:	4299      	cmp	r1, r3
 8000e0c:	bfde      	ittt	le
 8000e0e:	2330      	movle	r3, #48	; 0x30
 8000e10:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000e14:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8000e18:	1b52      	subs	r2, r2, r5
 8000e1a:	6122      	str	r2, [r4, #16]
 8000e1c:	f8cd a000 	str.w	sl, [sp]
 8000e20:	464b      	mov	r3, r9
 8000e22:	aa03      	add	r2, sp, #12
 8000e24:	4621      	mov	r1, r4
 8000e26:	4640      	mov	r0, r8
 8000e28:	f7ff fee4 	bl	8000bf4 <_printf_common>
 8000e2c:	3001      	adds	r0, #1
 8000e2e:	d14a      	bne.n	8000ec6 <_printf_i+0x1f6>
 8000e30:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000e34:	b004      	add	sp, #16
 8000e36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e3a:	6823      	ldr	r3, [r4, #0]
 8000e3c:	f043 0320 	orr.w	r3, r3, #32
 8000e40:	6023      	str	r3, [r4, #0]
 8000e42:	4833      	ldr	r0, [pc, #204]	; (8000f10 <_printf_i+0x240>)
 8000e44:	2778      	movs	r7, #120	; 0x78
 8000e46:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000e4a:	6823      	ldr	r3, [r4, #0]
 8000e4c:	6829      	ldr	r1, [r5, #0]
 8000e4e:	061f      	lsls	r7, r3, #24
 8000e50:	f851 6b04 	ldr.w	r6, [r1], #4
 8000e54:	d402      	bmi.n	8000e5c <_printf_i+0x18c>
 8000e56:	065f      	lsls	r7, r3, #25
 8000e58:	bf48      	it	mi
 8000e5a:	b2b6      	uxthmi	r6, r6
 8000e5c:	07df      	lsls	r7, r3, #31
 8000e5e:	bf48      	it	mi
 8000e60:	f043 0320 	orrmi.w	r3, r3, #32
 8000e64:	6029      	str	r1, [r5, #0]
 8000e66:	bf48      	it	mi
 8000e68:	6023      	strmi	r3, [r4, #0]
 8000e6a:	b91e      	cbnz	r6, 8000e74 <_printf_i+0x1a4>
 8000e6c:	6823      	ldr	r3, [r4, #0]
 8000e6e:	f023 0320 	bic.w	r3, r3, #32
 8000e72:	6023      	str	r3, [r4, #0]
 8000e74:	2310      	movs	r3, #16
 8000e76:	e7a7      	b.n	8000dc8 <_printf_i+0xf8>
 8000e78:	4824      	ldr	r0, [pc, #144]	; (8000f0c <_printf_i+0x23c>)
 8000e7a:	e7e4      	b.n	8000e46 <_printf_i+0x176>
 8000e7c:	4615      	mov	r5, r2
 8000e7e:	e7bd      	b.n	8000dfc <_printf_i+0x12c>
 8000e80:	682b      	ldr	r3, [r5, #0]
 8000e82:	6826      	ldr	r6, [r4, #0]
 8000e84:	6961      	ldr	r1, [r4, #20]
 8000e86:	1d18      	adds	r0, r3, #4
 8000e88:	6028      	str	r0, [r5, #0]
 8000e8a:	0635      	lsls	r5, r6, #24
 8000e8c:	681b      	ldr	r3, [r3, #0]
 8000e8e:	d501      	bpl.n	8000e94 <_printf_i+0x1c4>
 8000e90:	6019      	str	r1, [r3, #0]
 8000e92:	e002      	b.n	8000e9a <_printf_i+0x1ca>
 8000e94:	0670      	lsls	r0, r6, #25
 8000e96:	d5fb      	bpl.n	8000e90 <_printf_i+0x1c0>
 8000e98:	8019      	strh	r1, [r3, #0]
 8000e9a:	2300      	movs	r3, #0
 8000e9c:	6123      	str	r3, [r4, #16]
 8000e9e:	4615      	mov	r5, r2
 8000ea0:	e7bc      	b.n	8000e1c <_printf_i+0x14c>
 8000ea2:	682b      	ldr	r3, [r5, #0]
 8000ea4:	1d1a      	adds	r2, r3, #4
 8000ea6:	602a      	str	r2, [r5, #0]
 8000ea8:	681d      	ldr	r5, [r3, #0]
 8000eaa:	6862      	ldr	r2, [r4, #4]
 8000eac:	2100      	movs	r1, #0
 8000eae:	4628      	mov	r0, r5
 8000eb0:	f7ff f99e 	bl	80001f0 <memchr>
 8000eb4:	b108      	cbz	r0, 8000eba <_printf_i+0x1ea>
 8000eb6:	1b40      	subs	r0, r0, r5
 8000eb8:	6060      	str	r0, [r4, #4]
 8000eba:	6863      	ldr	r3, [r4, #4]
 8000ebc:	6123      	str	r3, [r4, #16]
 8000ebe:	2300      	movs	r3, #0
 8000ec0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ec4:	e7aa      	b.n	8000e1c <_printf_i+0x14c>
 8000ec6:	6923      	ldr	r3, [r4, #16]
 8000ec8:	462a      	mov	r2, r5
 8000eca:	4649      	mov	r1, r9
 8000ecc:	4640      	mov	r0, r8
 8000ece:	47d0      	blx	sl
 8000ed0:	3001      	adds	r0, #1
 8000ed2:	d0ad      	beq.n	8000e30 <_printf_i+0x160>
 8000ed4:	6823      	ldr	r3, [r4, #0]
 8000ed6:	079b      	lsls	r3, r3, #30
 8000ed8:	d413      	bmi.n	8000f02 <_printf_i+0x232>
 8000eda:	68e0      	ldr	r0, [r4, #12]
 8000edc:	9b03      	ldr	r3, [sp, #12]
 8000ede:	4298      	cmp	r0, r3
 8000ee0:	bfb8      	it	lt
 8000ee2:	4618      	movlt	r0, r3
 8000ee4:	e7a6      	b.n	8000e34 <_printf_i+0x164>
 8000ee6:	2301      	movs	r3, #1
 8000ee8:	4632      	mov	r2, r6
 8000eea:	4649      	mov	r1, r9
 8000eec:	4640      	mov	r0, r8
 8000eee:	47d0      	blx	sl
 8000ef0:	3001      	adds	r0, #1
 8000ef2:	d09d      	beq.n	8000e30 <_printf_i+0x160>
 8000ef4:	3501      	adds	r5, #1
 8000ef6:	68e3      	ldr	r3, [r4, #12]
 8000ef8:	9903      	ldr	r1, [sp, #12]
 8000efa:	1a5b      	subs	r3, r3, r1
 8000efc:	42ab      	cmp	r3, r5
 8000efe:	dcf2      	bgt.n	8000ee6 <_printf_i+0x216>
 8000f00:	e7eb      	b.n	8000eda <_printf_i+0x20a>
 8000f02:	2500      	movs	r5, #0
 8000f04:	f104 0619 	add.w	r6, r4, #25
 8000f08:	e7f5      	b.n	8000ef6 <_printf_i+0x226>
 8000f0a:	bf00      	nop
 8000f0c:	080012f2 	.word	0x080012f2
 8000f10:	08001303 	.word	0x08001303

08000f14 <__sflush_r>:
 8000f14:	898a      	ldrh	r2, [r1, #12]
 8000f16:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f18:	4605      	mov	r5, r0
 8000f1a:	0710      	lsls	r0, r2, #28
 8000f1c:	460c      	mov	r4, r1
 8000f1e:	d457      	bmi.n	8000fd0 <__sflush_r+0xbc>
 8000f20:	684b      	ldr	r3, [r1, #4]
 8000f22:	2b00      	cmp	r3, #0
 8000f24:	dc04      	bgt.n	8000f30 <__sflush_r+0x1c>
 8000f26:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000f28:	2b00      	cmp	r3, #0
 8000f2a:	dc01      	bgt.n	8000f30 <__sflush_r+0x1c>
 8000f2c:	2000      	movs	r0, #0
 8000f2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f30:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f32:	2e00      	cmp	r6, #0
 8000f34:	d0fa      	beq.n	8000f2c <__sflush_r+0x18>
 8000f36:	2300      	movs	r3, #0
 8000f38:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000f3c:	682f      	ldr	r7, [r5, #0]
 8000f3e:	6a21      	ldr	r1, [r4, #32]
 8000f40:	602b      	str	r3, [r5, #0]
 8000f42:	d032      	beq.n	8000faa <__sflush_r+0x96>
 8000f44:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000f46:	89a3      	ldrh	r3, [r4, #12]
 8000f48:	075a      	lsls	r2, r3, #29
 8000f4a:	d505      	bpl.n	8000f58 <__sflush_r+0x44>
 8000f4c:	6863      	ldr	r3, [r4, #4]
 8000f4e:	1ac0      	subs	r0, r0, r3
 8000f50:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000f52:	b10b      	cbz	r3, 8000f58 <__sflush_r+0x44>
 8000f54:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000f56:	1ac0      	subs	r0, r0, r3
 8000f58:	2300      	movs	r3, #0
 8000f5a:	4602      	mov	r2, r0
 8000f5c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f5e:	6a21      	ldr	r1, [r4, #32]
 8000f60:	4628      	mov	r0, r5
 8000f62:	47b0      	blx	r6
 8000f64:	1c43      	adds	r3, r0, #1
 8000f66:	89a3      	ldrh	r3, [r4, #12]
 8000f68:	d106      	bne.n	8000f78 <__sflush_r+0x64>
 8000f6a:	6829      	ldr	r1, [r5, #0]
 8000f6c:	291d      	cmp	r1, #29
 8000f6e:	d82b      	bhi.n	8000fc8 <__sflush_r+0xb4>
 8000f70:	4a28      	ldr	r2, [pc, #160]	; (8001014 <__sflush_r+0x100>)
 8000f72:	410a      	asrs	r2, r1
 8000f74:	07d6      	lsls	r6, r2, #31
 8000f76:	d427      	bmi.n	8000fc8 <__sflush_r+0xb4>
 8000f78:	2200      	movs	r2, #0
 8000f7a:	6062      	str	r2, [r4, #4]
 8000f7c:	04d9      	lsls	r1, r3, #19
 8000f7e:	6922      	ldr	r2, [r4, #16]
 8000f80:	6022      	str	r2, [r4, #0]
 8000f82:	d504      	bpl.n	8000f8e <__sflush_r+0x7a>
 8000f84:	1c42      	adds	r2, r0, #1
 8000f86:	d101      	bne.n	8000f8c <__sflush_r+0x78>
 8000f88:	682b      	ldr	r3, [r5, #0]
 8000f8a:	b903      	cbnz	r3, 8000f8e <__sflush_r+0x7a>
 8000f8c:	6560      	str	r0, [r4, #84]	; 0x54
 8000f8e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000f90:	602f      	str	r7, [r5, #0]
 8000f92:	2900      	cmp	r1, #0
 8000f94:	d0ca      	beq.n	8000f2c <__sflush_r+0x18>
 8000f96:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000f9a:	4299      	cmp	r1, r3
 8000f9c:	d002      	beq.n	8000fa4 <__sflush_r+0x90>
 8000f9e:	4628      	mov	r0, r5
 8000fa0:	f7ff fbf0 	bl	8000784 <_free_r>
 8000fa4:	2000      	movs	r0, #0
 8000fa6:	6360      	str	r0, [r4, #52]	; 0x34
 8000fa8:	e7c1      	b.n	8000f2e <__sflush_r+0x1a>
 8000faa:	2301      	movs	r3, #1
 8000fac:	4628      	mov	r0, r5
 8000fae:	47b0      	blx	r6
 8000fb0:	1c41      	adds	r1, r0, #1
 8000fb2:	d1c8      	bne.n	8000f46 <__sflush_r+0x32>
 8000fb4:	682b      	ldr	r3, [r5, #0]
 8000fb6:	2b00      	cmp	r3, #0
 8000fb8:	d0c5      	beq.n	8000f46 <__sflush_r+0x32>
 8000fba:	2b1d      	cmp	r3, #29
 8000fbc:	d001      	beq.n	8000fc2 <__sflush_r+0xae>
 8000fbe:	2b16      	cmp	r3, #22
 8000fc0:	d101      	bne.n	8000fc6 <__sflush_r+0xb2>
 8000fc2:	602f      	str	r7, [r5, #0]
 8000fc4:	e7b2      	b.n	8000f2c <__sflush_r+0x18>
 8000fc6:	89a3      	ldrh	r3, [r4, #12]
 8000fc8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000fcc:	81a3      	strh	r3, [r4, #12]
 8000fce:	e7ae      	b.n	8000f2e <__sflush_r+0x1a>
 8000fd0:	690f      	ldr	r7, [r1, #16]
 8000fd2:	2f00      	cmp	r7, #0
 8000fd4:	d0aa      	beq.n	8000f2c <__sflush_r+0x18>
 8000fd6:	0793      	lsls	r3, r2, #30
 8000fd8:	680e      	ldr	r6, [r1, #0]
 8000fda:	bf08      	it	eq
 8000fdc:	694b      	ldreq	r3, [r1, #20]
 8000fde:	600f      	str	r7, [r1, #0]
 8000fe0:	bf18      	it	ne
 8000fe2:	2300      	movne	r3, #0
 8000fe4:	1bf6      	subs	r6, r6, r7
 8000fe6:	608b      	str	r3, [r1, #8]
 8000fe8:	2e00      	cmp	r6, #0
 8000fea:	dd9f      	ble.n	8000f2c <__sflush_r+0x18>
 8000fec:	6a21      	ldr	r1, [r4, #32]
 8000fee:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8000ff2:	4633      	mov	r3, r6
 8000ff4:	463a      	mov	r2, r7
 8000ff6:	4628      	mov	r0, r5
 8000ff8:	47e0      	blx	ip
 8000ffa:	2800      	cmp	r0, #0
 8000ffc:	dc06      	bgt.n	800100c <__sflush_r+0xf8>
 8000ffe:	89a3      	ldrh	r3, [r4, #12]
 8001000:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001004:	81a3      	strh	r3, [r4, #12]
 8001006:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800100a:	e790      	b.n	8000f2e <__sflush_r+0x1a>
 800100c:	4407      	add	r7, r0
 800100e:	1a36      	subs	r6, r6, r0
 8001010:	e7ea      	b.n	8000fe8 <__sflush_r+0xd4>
 8001012:	bf00      	nop
 8001014:	dfbffffe 	.word	0xdfbffffe

08001018 <_fflush_r>:
 8001018:	b538      	push	{r3, r4, r5, lr}
 800101a:	690b      	ldr	r3, [r1, #16]
 800101c:	4605      	mov	r5, r0
 800101e:	460c      	mov	r4, r1
 8001020:	b913      	cbnz	r3, 8001028 <_fflush_r+0x10>
 8001022:	2500      	movs	r5, #0
 8001024:	4628      	mov	r0, r5
 8001026:	bd38      	pop	{r3, r4, r5, pc}
 8001028:	b118      	cbz	r0, 8001032 <_fflush_r+0x1a>
 800102a:	6a03      	ldr	r3, [r0, #32]
 800102c:	b90b      	cbnz	r3, 8001032 <_fflush_r+0x1a>
 800102e:	f7ff faa3 	bl	8000578 <__sinit>
 8001032:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001036:	2b00      	cmp	r3, #0
 8001038:	d0f3      	beq.n	8001022 <_fflush_r+0xa>
 800103a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800103c:	07d0      	lsls	r0, r2, #31
 800103e:	d404      	bmi.n	800104a <_fflush_r+0x32>
 8001040:	0599      	lsls	r1, r3, #22
 8001042:	d402      	bmi.n	800104a <_fflush_r+0x32>
 8001044:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001046:	f7ff fb9b 	bl	8000780 <__retarget_lock_acquire_recursive>
 800104a:	4628      	mov	r0, r5
 800104c:	4621      	mov	r1, r4
 800104e:	f7ff ff61 	bl	8000f14 <__sflush_r>
 8001052:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001054:	07da      	lsls	r2, r3, #31
 8001056:	4605      	mov	r5, r0
 8001058:	d4e4      	bmi.n	8001024 <_fflush_r+0xc>
 800105a:	89a3      	ldrh	r3, [r4, #12]
 800105c:	059b      	lsls	r3, r3, #22
 800105e:	d4e1      	bmi.n	8001024 <_fflush_r+0xc>
 8001060:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001062:	f7ff fb8e 	bl	8000782 <__retarget_lock_release_recursive>
 8001066:	e7dd      	b.n	8001024 <_fflush_r+0xc>

08001068 <__swbuf_r>:
 8001068:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800106a:	460e      	mov	r6, r1
 800106c:	4614      	mov	r4, r2
 800106e:	4605      	mov	r5, r0
 8001070:	b118      	cbz	r0, 800107a <__swbuf_r+0x12>
 8001072:	6a03      	ldr	r3, [r0, #32]
 8001074:	b90b      	cbnz	r3, 800107a <__swbuf_r+0x12>
 8001076:	f7ff fa7f 	bl	8000578 <__sinit>
 800107a:	69a3      	ldr	r3, [r4, #24]
 800107c:	60a3      	str	r3, [r4, #8]
 800107e:	89a3      	ldrh	r3, [r4, #12]
 8001080:	071a      	lsls	r2, r3, #28
 8001082:	d525      	bpl.n	80010d0 <__swbuf_r+0x68>
 8001084:	6923      	ldr	r3, [r4, #16]
 8001086:	b31b      	cbz	r3, 80010d0 <__swbuf_r+0x68>
 8001088:	6823      	ldr	r3, [r4, #0]
 800108a:	6922      	ldr	r2, [r4, #16]
 800108c:	1a98      	subs	r0, r3, r2
 800108e:	6963      	ldr	r3, [r4, #20]
 8001090:	b2f6      	uxtb	r6, r6
 8001092:	4283      	cmp	r3, r0
 8001094:	4637      	mov	r7, r6
 8001096:	dc04      	bgt.n	80010a2 <__swbuf_r+0x3a>
 8001098:	4621      	mov	r1, r4
 800109a:	4628      	mov	r0, r5
 800109c:	f7ff ffbc 	bl	8001018 <_fflush_r>
 80010a0:	b9e0      	cbnz	r0, 80010dc <__swbuf_r+0x74>
 80010a2:	68a3      	ldr	r3, [r4, #8]
 80010a4:	3b01      	subs	r3, #1
 80010a6:	60a3      	str	r3, [r4, #8]
 80010a8:	6823      	ldr	r3, [r4, #0]
 80010aa:	1c5a      	adds	r2, r3, #1
 80010ac:	6022      	str	r2, [r4, #0]
 80010ae:	701e      	strb	r6, [r3, #0]
 80010b0:	6962      	ldr	r2, [r4, #20]
 80010b2:	1c43      	adds	r3, r0, #1
 80010b4:	429a      	cmp	r2, r3
 80010b6:	d004      	beq.n	80010c2 <__swbuf_r+0x5a>
 80010b8:	89a3      	ldrh	r3, [r4, #12]
 80010ba:	07db      	lsls	r3, r3, #31
 80010bc:	d506      	bpl.n	80010cc <__swbuf_r+0x64>
 80010be:	2e0a      	cmp	r6, #10
 80010c0:	d104      	bne.n	80010cc <__swbuf_r+0x64>
 80010c2:	4621      	mov	r1, r4
 80010c4:	4628      	mov	r0, r5
 80010c6:	f7ff ffa7 	bl	8001018 <_fflush_r>
 80010ca:	b938      	cbnz	r0, 80010dc <__swbuf_r+0x74>
 80010cc:	4638      	mov	r0, r7
 80010ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010d0:	4621      	mov	r1, r4
 80010d2:	4628      	mov	r0, r5
 80010d4:	f000 f806 	bl	80010e4 <__swsetup_r>
 80010d8:	2800      	cmp	r0, #0
 80010da:	d0d5      	beq.n	8001088 <__swbuf_r+0x20>
 80010dc:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 80010e0:	e7f4      	b.n	80010cc <__swbuf_r+0x64>
	...

080010e4 <__swsetup_r>:
 80010e4:	b538      	push	{r3, r4, r5, lr}
 80010e6:	4b2a      	ldr	r3, [pc, #168]	; (8001190 <__swsetup_r+0xac>)
 80010e8:	4605      	mov	r5, r0
 80010ea:	6818      	ldr	r0, [r3, #0]
 80010ec:	460c      	mov	r4, r1
 80010ee:	b118      	cbz	r0, 80010f8 <__swsetup_r+0x14>
 80010f0:	6a03      	ldr	r3, [r0, #32]
 80010f2:	b90b      	cbnz	r3, 80010f8 <__swsetup_r+0x14>
 80010f4:	f7ff fa40 	bl	8000578 <__sinit>
 80010f8:	89a3      	ldrh	r3, [r4, #12]
 80010fa:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80010fe:	0718      	lsls	r0, r3, #28
 8001100:	d422      	bmi.n	8001148 <__swsetup_r+0x64>
 8001102:	06d9      	lsls	r1, r3, #27
 8001104:	d407      	bmi.n	8001116 <__swsetup_r+0x32>
 8001106:	2309      	movs	r3, #9
 8001108:	602b      	str	r3, [r5, #0]
 800110a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800110e:	81a3      	strh	r3, [r4, #12]
 8001110:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001114:	e034      	b.n	8001180 <__swsetup_r+0x9c>
 8001116:	0758      	lsls	r0, r3, #29
 8001118:	d512      	bpl.n	8001140 <__swsetup_r+0x5c>
 800111a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800111c:	b141      	cbz	r1, 8001130 <__swsetup_r+0x4c>
 800111e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001122:	4299      	cmp	r1, r3
 8001124:	d002      	beq.n	800112c <__swsetup_r+0x48>
 8001126:	4628      	mov	r0, r5
 8001128:	f7ff fb2c 	bl	8000784 <_free_r>
 800112c:	2300      	movs	r3, #0
 800112e:	6363      	str	r3, [r4, #52]	; 0x34
 8001130:	89a3      	ldrh	r3, [r4, #12]
 8001132:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001136:	81a3      	strh	r3, [r4, #12]
 8001138:	2300      	movs	r3, #0
 800113a:	6063      	str	r3, [r4, #4]
 800113c:	6923      	ldr	r3, [r4, #16]
 800113e:	6023      	str	r3, [r4, #0]
 8001140:	89a3      	ldrh	r3, [r4, #12]
 8001142:	f043 0308 	orr.w	r3, r3, #8
 8001146:	81a3      	strh	r3, [r4, #12]
 8001148:	6923      	ldr	r3, [r4, #16]
 800114a:	b94b      	cbnz	r3, 8001160 <__swsetup_r+0x7c>
 800114c:	89a3      	ldrh	r3, [r4, #12]
 800114e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001152:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001156:	d003      	beq.n	8001160 <__swsetup_r+0x7c>
 8001158:	4621      	mov	r1, r4
 800115a:	4628      	mov	r0, r5
 800115c:	f000 f850 	bl	8001200 <__smakebuf_r>
 8001160:	89a0      	ldrh	r0, [r4, #12]
 8001162:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001166:	f010 0301 	ands.w	r3, r0, #1
 800116a:	d00a      	beq.n	8001182 <__swsetup_r+0x9e>
 800116c:	2300      	movs	r3, #0
 800116e:	60a3      	str	r3, [r4, #8]
 8001170:	6963      	ldr	r3, [r4, #20]
 8001172:	425b      	negs	r3, r3
 8001174:	61a3      	str	r3, [r4, #24]
 8001176:	6923      	ldr	r3, [r4, #16]
 8001178:	b943      	cbnz	r3, 800118c <__swsetup_r+0xa8>
 800117a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800117e:	d1c4      	bne.n	800110a <__swsetup_r+0x26>
 8001180:	bd38      	pop	{r3, r4, r5, pc}
 8001182:	0781      	lsls	r1, r0, #30
 8001184:	bf58      	it	pl
 8001186:	6963      	ldrpl	r3, [r4, #20]
 8001188:	60a3      	str	r3, [r4, #8]
 800118a:	e7f4      	b.n	8001176 <__swsetup_r+0x92>
 800118c:	2000      	movs	r0, #0
 800118e:	e7f7      	b.n	8001180 <__swsetup_r+0x9c>
 8001190:	20000058 	.word	0x20000058

08001194 <_sbrk_r>:
 8001194:	b538      	push	{r3, r4, r5, lr}
 8001196:	4d06      	ldr	r5, [pc, #24]	; (80011b0 <_sbrk_r+0x1c>)
 8001198:	2300      	movs	r3, #0
 800119a:	4604      	mov	r4, r0
 800119c:	4608      	mov	r0, r1
 800119e:	602b      	str	r3, [r5, #0]
 80011a0:	f7ff f910 	bl	80003c4 <_sbrk>
 80011a4:	1c43      	adds	r3, r0, #1
 80011a6:	d102      	bne.n	80011ae <_sbrk_r+0x1a>
 80011a8:	682b      	ldr	r3, [r5, #0]
 80011aa:	b103      	cbz	r3, 80011ae <_sbrk_r+0x1a>
 80011ac:	6023      	str	r3, [r4, #0]
 80011ae:	bd38      	pop	{r3, r4, r5, pc}
 80011b0:	200001b8 	.word	0x200001b8

080011b4 <__swhatbuf_r>:
 80011b4:	b570      	push	{r4, r5, r6, lr}
 80011b6:	460c      	mov	r4, r1
 80011b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011bc:	2900      	cmp	r1, #0
 80011be:	b096      	sub	sp, #88	; 0x58
 80011c0:	4615      	mov	r5, r2
 80011c2:	461e      	mov	r6, r3
 80011c4:	da0d      	bge.n	80011e2 <__swhatbuf_r+0x2e>
 80011c6:	89a3      	ldrh	r3, [r4, #12]
 80011c8:	f013 0f80 	tst.w	r3, #128	; 0x80
 80011cc:	f04f 0100 	mov.w	r1, #0
 80011d0:	bf0c      	ite	eq
 80011d2:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80011d6:	2340      	movne	r3, #64	; 0x40
 80011d8:	2000      	movs	r0, #0
 80011da:	6031      	str	r1, [r6, #0]
 80011dc:	602b      	str	r3, [r5, #0]
 80011de:	b016      	add	sp, #88	; 0x58
 80011e0:	bd70      	pop	{r4, r5, r6, pc}
 80011e2:	466a      	mov	r2, sp
 80011e4:	f000 f848 	bl	8001278 <_fstat_r>
 80011e8:	2800      	cmp	r0, #0
 80011ea:	dbec      	blt.n	80011c6 <__swhatbuf_r+0x12>
 80011ec:	9901      	ldr	r1, [sp, #4]
 80011ee:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80011f2:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80011f6:	4259      	negs	r1, r3
 80011f8:	4159      	adcs	r1, r3
 80011fa:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80011fe:	e7eb      	b.n	80011d8 <__swhatbuf_r+0x24>

08001200 <__smakebuf_r>:
 8001200:	898b      	ldrh	r3, [r1, #12]
 8001202:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001204:	079d      	lsls	r5, r3, #30
 8001206:	4606      	mov	r6, r0
 8001208:	460c      	mov	r4, r1
 800120a:	d507      	bpl.n	800121c <__smakebuf_r+0x1c>
 800120c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001210:	6023      	str	r3, [r4, #0]
 8001212:	6123      	str	r3, [r4, #16]
 8001214:	2301      	movs	r3, #1
 8001216:	6163      	str	r3, [r4, #20]
 8001218:	b002      	add	sp, #8
 800121a:	bd70      	pop	{r4, r5, r6, pc}
 800121c:	ab01      	add	r3, sp, #4
 800121e:	466a      	mov	r2, sp
 8001220:	f7ff ffc8 	bl	80011b4 <__swhatbuf_r>
 8001224:	9900      	ldr	r1, [sp, #0]
 8001226:	4605      	mov	r5, r0
 8001228:	4630      	mov	r0, r6
 800122a:	f7ff fb15 	bl	8000858 <_malloc_r>
 800122e:	b948      	cbnz	r0, 8001244 <__smakebuf_r+0x44>
 8001230:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001234:	059a      	lsls	r2, r3, #22
 8001236:	d4ef      	bmi.n	8001218 <__smakebuf_r+0x18>
 8001238:	f023 0303 	bic.w	r3, r3, #3
 800123c:	f043 0302 	orr.w	r3, r3, #2
 8001240:	81a3      	strh	r3, [r4, #12]
 8001242:	e7e3      	b.n	800120c <__smakebuf_r+0xc>
 8001244:	89a3      	ldrh	r3, [r4, #12]
 8001246:	6020      	str	r0, [r4, #0]
 8001248:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800124c:	81a3      	strh	r3, [r4, #12]
 800124e:	9b00      	ldr	r3, [sp, #0]
 8001250:	6163      	str	r3, [r4, #20]
 8001252:	9b01      	ldr	r3, [sp, #4]
 8001254:	6120      	str	r0, [r4, #16]
 8001256:	b15b      	cbz	r3, 8001270 <__smakebuf_r+0x70>
 8001258:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800125c:	4630      	mov	r0, r6
 800125e:	f000 f81d 	bl	800129c <_isatty_r>
 8001262:	b128      	cbz	r0, 8001270 <__smakebuf_r+0x70>
 8001264:	89a3      	ldrh	r3, [r4, #12]
 8001266:	f023 0303 	bic.w	r3, r3, #3
 800126a:	f043 0301 	orr.w	r3, r3, #1
 800126e:	81a3      	strh	r3, [r4, #12]
 8001270:	89a3      	ldrh	r3, [r4, #12]
 8001272:	431d      	orrs	r5, r3
 8001274:	81a5      	strh	r5, [r4, #12]
 8001276:	e7cf      	b.n	8001218 <__smakebuf_r+0x18>

08001278 <_fstat_r>:
 8001278:	b538      	push	{r3, r4, r5, lr}
 800127a:	4d07      	ldr	r5, [pc, #28]	; (8001298 <_fstat_r+0x20>)
 800127c:	2300      	movs	r3, #0
 800127e:	4604      	mov	r4, r0
 8001280:	4608      	mov	r0, r1
 8001282:	4611      	mov	r1, r2
 8001284:	602b      	str	r3, [r5, #0]
 8001286:	f7ff f877 	bl	8000378 <_fstat>
 800128a:	1c43      	adds	r3, r0, #1
 800128c:	d102      	bne.n	8001294 <_fstat_r+0x1c>
 800128e:	682b      	ldr	r3, [r5, #0]
 8001290:	b103      	cbz	r3, 8001294 <_fstat_r+0x1c>
 8001292:	6023      	str	r3, [r4, #0]
 8001294:	bd38      	pop	{r3, r4, r5, pc}
 8001296:	bf00      	nop
 8001298:	200001b8 	.word	0x200001b8

0800129c <_isatty_r>:
 800129c:	b538      	push	{r3, r4, r5, lr}
 800129e:	4d06      	ldr	r5, [pc, #24]	; (80012b8 <_isatty_r+0x1c>)
 80012a0:	2300      	movs	r3, #0
 80012a2:	4604      	mov	r4, r0
 80012a4:	4608      	mov	r0, r1
 80012a6:	602b      	str	r3, [r5, #0]
 80012a8:	f7ff f875 	bl	8000396 <_isatty>
 80012ac:	1c43      	adds	r3, r0, #1
 80012ae:	d102      	bne.n	80012b6 <_isatty_r+0x1a>
 80012b0:	682b      	ldr	r3, [r5, #0]
 80012b2:	b103      	cbz	r3, 80012b6 <_isatty_r+0x1a>
 80012b4:	6023      	str	r3, [r4, #0]
 80012b6:	bd38      	pop	{r3, r4, r5, pc}
 80012b8:	200001b8 	.word	0x200001b8

080012bc <_init>:
 80012bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012be:	bf00      	nop
 80012c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012c2:	bc08      	pop	{r3}
 80012c4:	469e      	mov	lr, r3
 80012c6:	4770      	bx	lr

080012c8 <_fini>:
 80012c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012ca:	bf00      	nop
 80012cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012ce:	bc08      	pop	{r3}
 80012d0:	469e      	mov	lr, r3
 80012d2:	4770      	bx	lr
