
operational_mode.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001228  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000a8  080013d8  080013d8  000113d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001480  08001480  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08001480  08001480  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001480  08001480  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001480  08001480  00011480  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001484  08001484  00011484  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08001488  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002005c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0002005c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0002005c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000964  00000000  00000000  000200cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 0000036e  00000000  00000000  00020a33  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000130  00000000  00000000  00020da8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 000000d0  00000000  00000000  00020ed8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00002b43  00000000  00000000  00020fa8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00001200  00000000  00000000  00023aeb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0000977f  00000000  00000000  00024ceb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000b94  00000000  00000000  0002e46c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000006b  00000000  00000000  0002f000  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000005c 	.word	0x2000005c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080013c0 	.word	0x080013c0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000060 	.word	0x20000060
 80001ec:	080013c0 	.word	0x080013c0

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <generate_interrupt>:
#include<stdio.h>
#include<stdint.h>

/* This function executes in THREAD MODE of the processor */
void generate_interrupt()
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
	uint32_t *pSTIR  = (uint32_t*)0xE000EF00;
 8000296:	4b09      	ldr	r3, [pc, #36]	; (80002bc <generate_interrupt+0x2c>)
 8000298:	607b      	str	r3, [r7, #4]
	uint32_t *pISER0 = (uint32_t*)0xE000E100;
 800029a:	4b09      	ldr	r3, [pc, #36]	; (80002c0 <generate_interrupt+0x30>)
 800029c:	603b      	str	r3, [r7, #0]

	//enable IRQ3 interrupt
	*pISER0 |= ( 1 << 3);
 800029e:	683b      	ldr	r3, [r7, #0]
 80002a0:	681b      	ldr	r3, [r3, #0]
 80002a2:	f043 0208 	orr.w	r2, r3, #8
 80002a6:	683b      	ldr	r3, [r7, #0]
 80002a8:	601a      	str	r2, [r3, #0]

	//generate an interrupt from software for IRQ3
	*pSTIR = (3 & 0x1FF);
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	2203      	movs	r2, #3
 80002ae:	601a      	str	r2, [r3, #0]

}
 80002b0:	bf00      	nop
 80002b2:	370c      	adds	r7, #12
 80002b4:	46bd      	mov	sp, r7
 80002b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ba:	4770      	bx	lr
 80002bc:	e000ef00 	.word	0xe000ef00
 80002c0:	e000e100 	.word	0xe000e100

080002c4 <change_access_level_unpriv>:

void change_access_level_unpriv(void)
{
 80002c4:	b480      	push	{r7}
 80002c6:	af00      	add	r7, sp, #0
	// Read
	__asm volatile("MRS R0,CONTROL");
 80002c8:	f3ef 8014 	mrs	r0, CONTROL
	// Modify
	__asm volatile("ORR R0,R0,#0x01");
 80002cc:	f040 0001 	orr.w	r0, r0, #1
	// Write
	__asm volatile("MSR CONTROL,R0");
 80002d0:	f380 8814 	msr	CONTROL, r0
}
 80002d4:	bf00      	nop
 80002d6:	46bd      	mov	sp, r7
 80002d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002dc:	4770      	bx	lr
	...

080002e0 <main>:

/* This function executes in THREAD MODE of the processor */
int main(void)
{
 80002e0:	b580      	push	{r7, lr}
 80002e2:	af00      	add	r7, sp, #0
	printf("In thread mode : before interrupt\n");
 80002e4:	4805      	ldr	r0, [pc, #20]	; (80002fc <main+0x1c>)
 80002e6:	f000 fa03 	bl	80006f0 <puts>

	change_access_level_unpriv();
 80002ea:	f7ff ffeb 	bl	80002c4 <change_access_level_unpriv>

	generate_interrupt();
 80002ee:	f7ff ffcf 	bl	8000290 <generate_interrupt>

	printf("In thread mode : after interrupt\n");
 80002f2:	4803      	ldr	r0, [pc, #12]	; (8000300 <main+0x20>)
 80002f4:	f000 f9fc 	bl	80006f0 <puts>

	for(;;);
 80002f8:	e7fe      	b.n	80002f8 <main+0x18>
 80002fa:	bf00      	nop
 80002fc:	080013d8 	.word	0x080013d8
 8000300:	080013fc 	.word	0x080013fc

08000304 <RTC_WKUP_IRQHandler>:
}

/* This function(ISR) executes in HANDLER MODE of the processor */
void RTC_WKUP_IRQHandler(void)
{
 8000304:	b580      	push	{r7, lr}
 8000306:	af00      	add	r7, sp, #0
	printf("In handler mode : ISR\n");
 8000308:	4802      	ldr	r0, [pc, #8]	; (8000314 <RTC_WKUP_IRQHandler+0x10>)
 800030a:	f000 f9f1 	bl	80006f0 <puts>
}
 800030e:	bf00      	nop
 8000310:	bd80      	pop	{r7, pc}
 8000312:	bf00      	nop
 8000314:	08001420 	.word	0x08001420

08000318 <HardFault_Handler>:

void HardFault_Handler(void)
{
 8000318:	b580      	push	{r7, lr}
 800031a:	af00      	add	r7, sp, #0
	printf("Hard Fault detected");
 800031c:	4801      	ldr	r0, [pc, #4]	; (8000324 <HardFault_Handler+0xc>)
 800031e:	f000 f981 	bl	8000624 <iprintf>
	while(1);
 8000322:	e7fe      	b.n	8000322 <HardFault_Handler+0xa>
 8000324:	08001438 	.word	0x08001438

08000328 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000328:	b580      	push	{r7, lr}
 800032a:	b086      	sub	sp, #24
 800032c:	af00      	add	r7, sp, #0
 800032e:	60f8      	str	r0, [r7, #12]
 8000330:	60b9      	str	r1, [r7, #8]
 8000332:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000334:	2300      	movs	r3, #0
 8000336:	617b      	str	r3, [r7, #20]
 8000338:	e00a      	b.n	8000350 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800033a:	f3af 8000 	nop.w
 800033e:	4601      	mov	r1, r0
 8000340:	68bb      	ldr	r3, [r7, #8]
 8000342:	1c5a      	adds	r2, r3, #1
 8000344:	60ba      	str	r2, [r7, #8]
 8000346:	b2ca      	uxtb	r2, r1
 8000348:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800034a:	697b      	ldr	r3, [r7, #20]
 800034c:	3301      	adds	r3, #1
 800034e:	617b      	str	r3, [r7, #20]
 8000350:	697a      	ldr	r2, [r7, #20]
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	429a      	cmp	r2, r3
 8000356:	dbf0      	blt.n	800033a <_read+0x12>
  }

  return len;
 8000358:	687b      	ldr	r3, [r7, #4]
}
 800035a:	4618      	mov	r0, r3
 800035c:	3718      	adds	r7, #24
 800035e:	46bd      	mov	sp, r7
 8000360:	bd80      	pop	{r7, pc}

08000362 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000362:	b580      	push	{r7, lr}
 8000364:	b086      	sub	sp, #24
 8000366:	af00      	add	r7, sp, #0
 8000368:	60f8      	str	r0, [r7, #12]
 800036a:	60b9      	str	r1, [r7, #8]
 800036c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800036e:	2300      	movs	r3, #0
 8000370:	617b      	str	r3, [r7, #20]
 8000372:	e009      	b.n	8000388 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000374:	68bb      	ldr	r3, [r7, #8]
 8000376:	1c5a      	adds	r2, r3, #1
 8000378:	60ba      	str	r2, [r7, #8]
 800037a:	781b      	ldrb	r3, [r3, #0]
 800037c:	4618      	mov	r0, r3
 800037e:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000382:	697b      	ldr	r3, [r7, #20]
 8000384:	3301      	adds	r3, #1
 8000386:	617b      	str	r3, [r7, #20]
 8000388:	697a      	ldr	r2, [r7, #20]
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	429a      	cmp	r2, r3
 800038e:	dbf1      	blt.n	8000374 <_write+0x12>
  }
  return len;
 8000390:	687b      	ldr	r3, [r7, #4]
}
 8000392:	4618      	mov	r0, r3
 8000394:	3718      	adds	r7, #24
 8000396:	46bd      	mov	sp, r7
 8000398:	bd80      	pop	{r7, pc}

0800039a <_close>:

int _close(int file)
{
 800039a:	b480      	push	{r7}
 800039c:	b083      	sub	sp, #12
 800039e:	af00      	add	r7, sp, #0
 80003a0:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80003a2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 80003a6:	4618      	mov	r0, r3
 80003a8:	370c      	adds	r7, #12
 80003aa:	46bd      	mov	sp, r7
 80003ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003b0:	4770      	bx	lr

080003b2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003b2:	b480      	push	{r7}
 80003b4:	b083      	sub	sp, #12
 80003b6:	af00      	add	r7, sp, #0
 80003b8:	6078      	str	r0, [r7, #4]
 80003ba:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003bc:	683b      	ldr	r3, [r7, #0]
 80003be:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003c2:	605a      	str	r2, [r3, #4]
  return 0;
 80003c4:	2300      	movs	r3, #0
}
 80003c6:	4618      	mov	r0, r3
 80003c8:	370c      	adds	r7, #12
 80003ca:	46bd      	mov	sp, r7
 80003cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003d0:	4770      	bx	lr

080003d2 <_isatty>:

int _isatty(int file)
{
 80003d2:	b480      	push	{r7}
 80003d4:	b083      	sub	sp, #12
 80003d6:	af00      	add	r7, sp, #0
 80003d8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003da:	2301      	movs	r3, #1
}
 80003dc:	4618      	mov	r0, r3
 80003de:	370c      	adds	r7, #12
 80003e0:	46bd      	mov	sp, r7
 80003e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003e6:	4770      	bx	lr

080003e8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003e8:	b480      	push	{r7}
 80003ea:	b085      	sub	sp, #20
 80003ec:	af00      	add	r7, sp, #0
 80003ee:	60f8      	str	r0, [r7, #12]
 80003f0:	60b9      	str	r1, [r7, #8]
 80003f2:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003f4:	2300      	movs	r3, #0
}
 80003f6:	4618      	mov	r0, r3
 80003f8:	3714      	adds	r7, #20
 80003fa:	46bd      	mov	sp, r7
 80003fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000400:	4770      	bx	lr
	...

08000404 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000404:	b580      	push	{r7, lr}
 8000406:	b086      	sub	sp, #24
 8000408:	af00      	add	r7, sp, #0
 800040a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800040c:	4a14      	ldr	r2, [pc, #80]	; (8000460 <_sbrk+0x5c>)
 800040e:	4b15      	ldr	r3, [pc, #84]	; (8000464 <_sbrk+0x60>)
 8000410:	1ad3      	subs	r3, r2, r3
 8000412:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000414:	697b      	ldr	r3, [r7, #20]
 8000416:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000418:	4b13      	ldr	r3, [pc, #76]	; (8000468 <_sbrk+0x64>)
 800041a:	681b      	ldr	r3, [r3, #0]
 800041c:	2b00      	cmp	r3, #0
 800041e:	d102      	bne.n	8000426 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000420:	4b11      	ldr	r3, [pc, #68]	; (8000468 <_sbrk+0x64>)
 8000422:	4a12      	ldr	r2, [pc, #72]	; (800046c <_sbrk+0x68>)
 8000424:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000426:	4b10      	ldr	r3, [pc, #64]	; (8000468 <_sbrk+0x64>)
 8000428:	681a      	ldr	r2, [r3, #0]
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	4413      	add	r3, r2
 800042e:	693a      	ldr	r2, [r7, #16]
 8000430:	429a      	cmp	r2, r3
 8000432:	d207      	bcs.n	8000444 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000434:	f000 fa8a 	bl	800094c <__errno>
 8000438:	4603      	mov	r3, r0
 800043a:	220c      	movs	r2, #12
 800043c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800043e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000442:	e009      	b.n	8000458 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000444:	4b08      	ldr	r3, [pc, #32]	; (8000468 <_sbrk+0x64>)
 8000446:	681b      	ldr	r3, [r3, #0]
 8000448:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800044a:	4b07      	ldr	r3, [pc, #28]	; (8000468 <_sbrk+0x64>)
 800044c:	681a      	ldr	r2, [r3, #0]
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	4413      	add	r3, r2
 8000452:	4a05      	ldr	r2, [pc, #20]	; (8000468 <_sbrk+0x64>)
 8000454:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000456:	68fb      	ldr	r3, [r7, #12]
}
 8000458:	4618      	mov	r0, r3
 800045a:	3718      	adds	r7, #24
 800045c:	46bd      	mov	sp, r7
 800045e:	bd80      	pop	{r7, pc}
 8000460:	20020000 	.word	0x20020000
 8000464:	00000400 	.word	0x00000400
 8000468:	20000078 	.word	0x20000078
 800046c:	200001c8 	.word	0x200001c8

08000470 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000470:	480d      	ldr	r0, [pc, #52]	; (80004a8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000472:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000474:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000478:	480c      	ldr	r0, [pc, #48]	; (80004ac <LoopForever+0x6>)
  ldr r1, =_edata
 800047a:	490d      	ldr	r1, [pc, #52]	; (80004b0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800047c:	4a0d      	ldr	r2, [pc, #52]	; (80004b4 <LoopForever+0xe>)
  movs r3, #0
 800047e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000480:	e002      	b.n	8000488 <LoopCopyDataInit>

08000482 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000482:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000484:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000486:	3304      	adds	r3, #4

08000488 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000488:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800048a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800048c:	d3f9      	bcc.n	8000482 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800048e:	4a0a      	ldr	r2, [pc, #40]	; (80004b8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000490:	4c0a      	ldr	r4, [pc, #40]	; (80004bc <LoopForever+0x16>)
  movs r3, #0
 8000492:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000494:	e001      	b.n	800049a <LoopFillZerobss>

08000496 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000496:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000498:	3204      	adds	r2, #4

0800049a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800049a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800049c:	d3fb      	bcc.n	8000496 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800049e:	f000 fa5b 	bl	8000958 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004a2:	f7ff ff1d 	bl	80002e0 <main>

080004a6 <LoopForever>:

LoopForever:
  b LoopForever
 80004a6:	e7fe      	b.n	80004a6 <LoopForever>
  ldr   r0, =_estack
 80004a8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004ac:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004b0:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80004b4:	08001488 	.word	0x08001488
  ldr r2, =_sbss
 80004b8:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80004bc:	200001c8 	.word	0x200001c8

080004c0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004c0:	e7fe      	b.n	80004c0 <ADC_IRQHandler>
	...

080004c4 <std>:
 80004c4:	2300      	movs	r3, #0
 80004c6:	b510      	push	{r4, lr}
 80004c8:	4604      	mov	r4, r0
 80004ca:	e9c0 3300 	strd	r3, r3, [r0]
 80004ce:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80004d2:	6083      	str	r3, [r0, #8]
 80004d4:	8181      	strh	r1, [r0, #12]
 80004d6:	6643      	str	r3, [r0, #100]	; 0x64
 80004d8:	81c2      	strh	r2, [r0, #14]
 80004da:	6183      	str	r3, [r0, #24]
 80004dc:	4619      	mov	r1, r3
 80004de:	2208      	movs	r2, #8
 80004e0:	305c      	adds	r0, #92	; 0x5c
 80004e2:	f000 f9e5 	bl	80008b0 <memset>
 80004e6:	4b05      	ldr	r3, [pc, #20]	; (80004fc <std+0x38>)
 80004e8:	6263      	str	r3, [r4, #36]	; 0x24
 80004ea:	4b05      	ldr	r3, [pc, #20]	; (8000500 <std+0x3c>)
 80004ec:	62a3      	str	r3, [r4, #40]	; 0x28
 80004ee:	4b05      	ldr	r3, [pc, #20]	; (8000504 <std+0x40>)
 80004f0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80004f2:	4b05      	ldr	r3, [pc, #20]	; (8000508 <std+0x44>)
 80004f4:	6224      	str	r4, [r4, #32]
 80004f6:	6323      	str	r3, [r4, #48]	; 0x30
 80004f8:	bd10      	pop	{r4, pc}
 80004fa:	bf00      	nop
 80004fc:	08000701 	.word	0x08000701
 8000500:	08000723 	.word	0x08000723
 8000504:	0800075b 	.word	0x0800075b
 8000508:	0800077f 	.word	0x0800077f

0800050c <stdio_exit_handler>:
 800050c:	4a02      	ldr	r2, [pc, #8]	; (8000518 <stdio_exit_handler+0xc>)
 800050e:	4903      	ldr	r1, [pc, #12]	; (800051c <stdio_exit_handler+0x10>)
 8000510:	4803      	ldr	r0, [pc, #12]	; (8000520 <stdio_exit_handler+0x14>)
 8000512:	f000 b869 	b.w	80005e8 <_fwalk_sglue>
 8000516:	bf00      	nop
 8000518:	20000000 	.word	0x20000000
 800051c:	08001249 	.word	0x08001249
 8000520:	2000000c 	.word	0x2000000c

08000524 <cleanup_stdio>:
 8000524:	6841      	ldr	r1, [r0, #4]
 8000526:	4b0c      	ldr	r3, [pc, #48]	; (8000558 <cleanup_stdio+0x34>)
 8000528:	4299      	cmp	r1, r3
 800052a:	b510      	push	{r4, lr}
 800052c:	4604      	mov	r4, r0
 800052e:	d001      	beq.n	8000534 <cleanup_stdio+0x10>
 8000530:	f000 fe8a 	bl	8001248 <_fflush_r>
 8000534:	68a1      	ldr	r1, [r4, #8]
 8000536:	4b09      	ldr	r3, [pc, #36]	; (800055c <cleanup_stdio+0x38>)
 8000538:	4299      	cmp	r1, r3
 800053a:	d002      	beq.n	8000542 <cleanup_stdio+0x1e>
 800053c:	4620      	mov	r0, r4
 800053e:	f000 fe83 	bl	8001248 <_fflush_r>
 8000542:	68e1      	ldr	r1, [r4, #12]
 8000544:	4b06      	ldr	r3, [pc, #24]	; (8000560 <cleanup_stdio+0x3c>)
 8000546:	4299      	cmp	r1, r3
 8000548:	d004      	beq.n	8000554 <cleanup_stdio+0x30>
 800054a:	4620      	mov	r0, r4
 800054c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000550:	f000 be7a 	b.w	8001248 <_fflush_r>
 8000554:	bd10      	pop	{r4, pc}
 8000556:	bf00      	nop
 8000558:	2000007c 	.word	0x2000007c
 800055c:	200000e4 	.word	0x200000e4
 8000560:	2000014c 	.word	0x2000014c

08000564 <global_stdio_init.part.0>:
 8000564:	b510      	push	{r4, lr}
 8000566:	4b0b      	ldr	r3, [pc, #44]	; (8000594 <global_stdio_init.part.0+0x30>)
 8000568:	4c0b      	ldr	r4, [pc, #44]	; (8000598 <global_stdio_init.part.0+0x34>)
 800056a:	4a0c      	ldr	r2, [pc, #48]	; (800059c <global_stdio_init.part.0+0x38>)
 800056c:	601a      	str	r2, [r3, #0]
 800056e:	4620      	mov	r0, r4
 8000570:	2200      	movs	r2, #0
 8000572:	2104      	movs	r1, #4
 8000574:	f7ff ffa6 	bl	80004c4 <std>
 8000578:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800057c:	2201      	movs	r2, #1
 800057e:	2109      	movs	r1, #9
 8000580:	f7ff ffa0 	bl	80004c4 <std>
 8000584:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000588:	2202      	movs	r2, #2
 800058a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800058e:	2112      	movs	r1, #18
 8000590:	f7ff bf98 	b.w	80004c4 <std>
 8000594:	200001b4 	.word	0x200001b4
 8000598:	2000007c 	.word	0x2000007c
 800059c:	0800050d 	.word	0x0800050d

080005a0 <__sfp_lock_acquire>:
 80005a0:	4801      	ldr	r0, [pc, #4]	; (80005a8 <__sfp_lock_acquire+0x8>)
 80005a2:	f000 b9fd 	b.w	80009a0 <__retarget_lock_acquire_recursive>
 80005a6:	bf00      	nop
 80005a8:	200001bd 	.word	0x200001bd

080005ac <__sfp_lock_release>:
 80005ac:	4801      	ldr	r0, [pc, #4]	; (80005b4 <__sfp_lock_release+0x8>)
 80005ae:	f000 b9f8 	b.w	80009a2 <__retarget_lock_release_recursive>
 80005b2:	bf00      	nop
 80005b4:	200001bd 	.word	0x200001bd

080005b8 <__sinit>:
 80005b8:	b510      	push	{r4, lr}
 80005ba:	4604      	mov	r4, r0
 80005bc:	f7ff fff0 	bl	80005a0 <__sfp_lock_acquire>
 80005c0:	6a23      	ldr	r3, [r4, #32]
 80005c2:	b11b      	cbz	r3, 80005cc <__sinit+0x14>
 80005c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005c8:	f7ff bff0 	b.w	80005ac <__sfp_lock_release>
 80005cc:	4b04      	ldr	r3, [pc, #16]	; (80005e0 <__sinit+0x28>)
 80005ce:	6223      	str	r3, [r4, #32]
 80005d0:	4b04      	ldr	r3, [pc, #16]	; (80005e4 <__sinit+0x2c>)
 80005d2:	681b      	ldr	r3, [r3, #0]
 80005d4:	2b00      	cmp	r3, #0
 80005d6:	d1f5      	bne.n	80005c4 <__sinit+0xc>
 80005d8:	f7ff ffc4 	bl	8000564 <global_stdio_init.part.0>
 80005dc:	e7f2      	b.n	80005c4 <__sinit+0xc>
 80005de:	bf00      	nop
 80005e0:	08000525 	.word	0x08000525
 80005e4:	200001b4 	.word	0x200001b4

080005e8 <_fwalk_sglue>:
 80005e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80005ec:	4607      	mov	r7, r0
 80005ee:	4688      	mov	r8, r1
 80005f0:	4614      	mov	r4, r2
 80005f2:	2600      	movs	r6, #0
 80005f4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80005f8:	f1b9 0901 	subs.w	r9, r9, #1
 80005fc:	d505      	bpl.n	800060a <_fwalk_sglue+0x22>
 80005fe:	6824      	ldr	r4, [r4, #0]
 8000600:	2c00      	cmp	r4, #0
 8000602:	d1f7      	bne.n	80005f4 <_fwalk_sglue+0xc>
 8000604:	4630      	mov	r0, r6
 8000606:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800060a:	89ab      	ldrh	r3, [r5, #12]
 800060c:	2b01      	cmp	r3, #1
 800060e:	d907      	bls.n	8000620 <_fwalk_sglue+0x38>
 8000610:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000614:	3301      	adds	r3, #1
 8000616:	d003      	beq.n	8000620 <_fwalk_sglue+0x38>
 8000618:	4629      	mov	r1, r5
 800061a:	4638      	mov	r0, r7
 800061c:	47c0      	blx	r8
 800061e:	4306      	orrs	r6, r0
 8000620:	3568      	adds	r5, #104	; 0x68
 8000622:	e7e9      	b.n	80005f8 <_fwalk_sglue+0x10>

08000624 <iprintf>:
 8000624:	b40f      	push	{r0, r1, r2, r3}
 8000626:	b507      	push	{r0, r1, r2, lr}
 8000628:	4906      	ldr	r1, [pc, #24]	; (8000644 <iprintf+0x20>)
 800062a:	ab04      	add	r3, sp, #16
 800062c:	6808      	ldr	r0, [r1, #0]
 800062e:	f853 2b04 	ldr.w	r2, [r3], #4
 8000632:	6881      	ldr	r1, [r0, #8]
 8000634:	9301      	str	r3, [sp, #4]
 8000636:	f000 fad7 	bl	8000be8 <_vfiprintf_r>
 800063a:	b003      	add	sp, #12
 800063c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000640:	b004      	add	sp, #16
 8000642:	4770      	bx	lr
 8000644:	20000058 	.word	0x20000058

08000648 <_puts_r>:
 8000648:	6a03      	ldr	r3, [r0, #32]
 800064a:	b570      	push	{r4, r5, r6, lr}
 800064c:	6884      	ldr	r4, [r0, #8]
 800064e:	4605      	mov	r5, r0
 8000650:	460e      	mov	r6, r1
 8000652:	b90b      	cbnz	r3, 8000658 <_puts_r+0x10>
 8000654:	f7ff ffb0 	bl	80005b8 <__sinit>
 8000658:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800065a:	07db      	lsls	r3, r3, #31
 800065c:	d405      	bmi.n	800066a <_puts_r+0x22>
 800065e:	89a3      	ldrh	r3, [r4, #12]
 8000660:	0598      	lsls	r0, r3, #22
 8000662:	d402      	bmi.n	800066a <_puts_r+0x22>
 8000664:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000666:	f000 f99b 	bl	80009a0 <__retarget_lock_acquire_recursive>
 800066a:	89a3      	ldrh	r3, [r4, #12]
 800066c:	0719      	lsls	r1, r3, #28
 800066e:	d513      	bpl.n	8000698 <_puts_r+0x50>
 8000670:	6923      	ldr	r3, [r4, #16]
 8000672:	b18b      	cbz	r3, 8000698 <_puts_r+0x50>
 8000674:	3e01      	subs	r6, #1
 8000676:	68a3      	ldr	r3, [r4, #8]
 8000678:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800067c:	3b01      	subs	r3, #1
 800067e:	60a3      	str	r3, [r4, #8]
 8000680:	b9e9      	cbnz	r1, 80006be <_puts_r+0x76>
 8000682:	2b00      	cmp	r3, #0
 8000684:	da2e      	bge.n	80006e4 <_puts_r+0x9c>
 8000686:	4622      	mov	r2, r4
 8000688:	210a      	movs	r1, #10
 800068a:	4628      	mov	r0, r5
 800068c:	f000 f87b 	bl	8000786 <__swbuf_r>
 8000690:	3001      	adds	r0, #1
 8000692:	d007      	beq.n	80006a4 <_puts_r+0x5c>
 8000694:	250a      	movs	r5, #10
 8000696:	e007      	b.n	80006a8 <_puts_r+0x60>
 8000698:	4621      	mov	r1, r4
 800069a:	4628      	mov	r0, r5
 800069c:	f000 f8b0 	bl	8000800 <__swsetup_r>
 80006a0:	2800      	cmp	r0, #0
 80006a2:	d0e7      	beq.n	8000674 <_puts_r+0x2c>
 80006a4:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 80006a8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80006aa:	07da      	lsls	r2, r3, #31
 80006ac:	d405      	bmi.n	80006ba <_puts_r+0x72>
 80006ae:	89a3      	ldrh	r3, [r4, #12]
 80006b0:	059b      	lsls	r3, r3, #22
 80006b2:	d402      	bmi.n	80006ba <_puts_r+0x72>
 80006b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80006b6:	f000 f974 	bl	80009a2 <__retarget_lock_release_recursive>
 80006ba:	4628      	mov	r0, r5
 80006bc:	bd70      	pop	{r4, r5, r6, pc}
 80006be:	2b00      	cmp	r3, #0
 80006c0:	da04      	bge.n	80006cc <_puts_r+0x84>
 80006c2:	69a2      	ldr	r2, [r4, #24]
 80006c4:	429a      	cmp	r2, r3
 80006c6:	dc06      	bgt.n	80006d6 <_puts_r+0x8e>
 80006c8:	290a      	cmp	r1, #10
 80006ca:	d004      	beq.n	80006d6 <_puts_r+0x8e>
 80006cc:	6823      	ldr	r3, [r4, #0]
 80006ce:	1c5a      	adds	r2, r3, #1
 80006d0:	6022      	str	r2, [r4, #0]
 80006d2:	7019      	strb	r1, [r3, #0]
 80006d4:	e7cf      	b.n	8000676 <_puts_r+0x2e>
 80006d6:	4622      	mov	r2, r4
 80006d8:	4628      	mov	r0, r5
 80006da:	f000 f854 	bl	8000786 <__swbuf_r>
 80006de:	3001      	adds	r0, #1
 80006e0:	d1c9      	bne.n	8000676 <_puts_r+0x2e>
 80006e2:	e7df      	b.n	80006a4 <_puts_r+0x5c>
 80006e4:	6823      	ldr	r3, [r4, #0]
 80006e6:	250a      	movs	r5, #10
 80006e8:	1c5a      	adds	r2, r3, #1
 80006ea:	6022      	str	r2, [r4, #0]
 80006ec:	701d      	strb	r5, [r3, #0]
 80006ee:	e7db      	b.n	80006a8 <_puts_r+0x60>

080006f0 <puts>:
 80006f0:	4b02      	ldr	r3, [pc, #8]	; (80006fc <puts+0xc>)
 80006f2:	4601      	mov	r1, r0
 80006f4:	6818      	ldr	r0, [r3, #0]
 80006f6:	f7ff bfa7 	b.w	8000648 <_puts_r>
 80006fa:	bf00      	nop
 80006fc:	20000058 	.word	0x20000058

08000700 <__sread>:
 8000700:	b510      	push	{r4, lr}
 8000702:	460c      	mov	r4, r1
 8000704:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000708:	f000 f8fc 	bl	8000904 <_read_r>
 800070c:	2800      	cmp	r0, #0
 800070e:	bfab      	itete	ge
 8000710:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000712:	89a3      	ldrhlt	r3, [r4, #12]
 8000714:	181b      	addge	r3, r3, r0
 8000716:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800071a:	bfac      	ite	ge
 800071c:	6563      	strge	r3, [r4, #84]	; 0x54
 800071e:	81a3      	strhlt	r3, [r4, #12]
 8000720:	bd10      	pop	{r4, pc}

08000722 <__swrite>:
 8000722:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000726:	461f      	mov	r7, r3
 8000728:	898b      	ldrh	r3, [r1, #12]
 800072a:	05db      	lsls	r3, r3, #23
 800072c:	4605      	mov	r5, r0
 800072e:	460c      	mov	r4, r1
 8000730:	4616      	mov	r6, r2
 8000732:	d505      	bpl.n	8000740 <__swrite+0x1e>
 8000734:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000738:	2302      	movs	r3, #2
 800073a:	2200      	movs	r2, #0
 800073c:	f000 f8d0 	bl	80008e0 <_lseek_r>
 8000740:	89a3      	ldrh	r3, [r4, #12]
 8000742:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000746:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800074a:	81a3      	strh	r3, [r4, #12]
 800074c:	4632      	mov	r2, r6
 800074e:	463b      	mov	r3, r7
 8000750:	4628      	mov	r0, r5
 8000752:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000756:	f000 b8e7 	b.w	8000928 <_write_r>

0800075a <__sseek>:
 800075a:	b510      	push	{r4, lr}
 800075c:	460c      	mov	r4, r1
 800075e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000762:	f000 f8bd 	bl	80008e0 <_lseek_r>
 8000766:	1c43      	adds	r3, r0, #1
 8000768:	89a3      	ldrh	r3, [r4, #12]
 800076a:	bf15      	itete	ne
 800076c:	6560      	strne	r0, [r4, #84]	; 0x54
 800076e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000772:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000776:	81a3      	strheq	r3, [r4, #12]
 8000778:	bf18      	it	ne
 800077a:	81a3      	strhne	r3, [r4, #12]
 800077c:	bd10      	pop	{r4, pc}

0800077e <__sclose>:
 800077e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000782:	f000 b89d 	b.w	80008c0 <_close_r>

08000786 <__swbuf_r>:
 8000786:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000788:	460e      	mov	r6, r1
 800078a:	4614      	mov	r4, r2
 800078c:	4605      	mov	r5, r0
 800078e:	b118      	cbz	r0, 8000798 <__swbuf_r+0x12>
 8000790:	6a03      	ldr	r3, [r0, #32]
 8000792:	b90b      	cbnz	r3, 8000798 <__swbuf_r+0x12>
 8000794:	f7ff ff10 	bl	80005b8 <__sinit>
 8000798:	69a3      	ldr	r3, [r4, #24]
 800079a:	60a3      	str	r3, [r4, #8]
 800079c:	89a3      	ldrh	r3, [r4, #12]
 800079e:	071a      	lsls	r2, r3, #28
 80007a0:	d525      	bpl.n	80007ee <__swbuf_r+0x68>
 80007a2:	6923      	ldr	r3, [r4, #16]
 80007a4:	b31b      	cbz	r3, 80007ee <__swbuf_r+0x68>
 80007a6:	6823      	ldr	r3, [r4, #0]
 80007a8:	6922      	ldr	r2, [r4, #16]
 80007aa:	1a98      	subs	r0, r3, r2
 80007ac:	6963      	ldr	r3, [r4, #20]
 80007ae:	b2f6      	uxtb	r6, r6
 80007b0:	4283      	cmp	r3, r0
 80007b2:	4637      	mov	r7, r6
 80007b4:	dc04      	bgt.n	80007c0 <__swbuf_r+0x3a>
 80007b6:	4621      	mov	r1, r4
 80007b8:	4628      	mov	r0, r5
 80007ba:	f000 fd45 	bl	8001248 <_fflush_r>
 80007be:	b9e0      	cbnz	r0, 80007fa <__swbuf_r+0x74>
 80007c0:	68a3      	ldr	r3, [r4, #8]
 80007c2:	3b01      	subs	r3, #1
 80007c4:	60a3      	str	r3, [r4, #8]
 80007c6:	6823      	ldr	r3, [r4, #0]
 80007c8:	1c5a      	adds	r2, r3, #1
 80007ca:	6022      	str	r2, [r4, #0]
 80007cc:	701e      	strb	r6, [r3, #0]
 80007ce:	6962      	ldr	r2, [r4, #20]
 80007d0:	1c43      	adds	r3, r0, #1
 80007d2:	429a      	cmp	r2, r3
 80007d4:	d004      	beq.n	80007e0 <__swbuf_r+0x5a>
 80007d6:	89a3      	ldrh	r3, [r4, #12]
 80007d8:	07db      	lsls	r3, r3, #31
 80007da:	d506      	bpl.n	80007ea <__swbuf_r+0x64>
 80007dc:	2e0a      	cmp	r6, #10
 80007de:	d104      	bne.n	80007ea <__swbuf_r+0x64>
 80007e0:	4621      	mov	r1, r4
 80007e2:	4628      	mov	r0, r5
 80007e4:	f000 fd30 	bl	8001248 <_fflush_r>
 80007e8:	b938      	cbnz	r0, 80007fa <__swbuf_r+0x74>
 80007ea:	4638      	mov	r0, r7
 80007ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007ee:	4621      	mov	r1, r4
 80007f0:	4628      	mov	r0, r5
 80007f2:	f000 f805 	bl	8000800 <__swsetup_r>
 80007f6:	2800      	cmp	r0, #0
 80007f8:	d0d5      	beq.n	80007a6 <__swbuf_r+0x20>
 80007fa:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 80007fe:	e7f4      	b.n	80007ea <__swbuf_r+0x64>

08000800 <__swsetup_r>:
 8000800:	b538      	push	{r3, r4, r5, lr}
 8000802:	4b2a      	ldr	r3, [pc, #168]	; (80008ac <__swsetup_r+0xac>)
 8000804:	4605      	mov	r5, r0
 8000806:	6818      	ldr	r0, [r3, #0]
 8000808:	460c      	mov	r4, r1
 800080a:	b118      	cbz	r0, 8000814 <__swsetup_r+0x14>
 800080c:	6a03      	ldr	r3, [r0, #32]
 800080e:	b90b      	cbnz	r3, 8000814 <__swsetup_r+0x14>
 8000810:	f7ff fed2 	bl	80005b8 <__sinit>
 8000814:	89a3      	ldrh	r3, [r4, #12]
 8000816:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800081a:	0718      	lsls	r0, r3, #28
 800081c:	d422      	bmi.n	8000864 <__swsetup_r+0x64>
 800081e:	06d9      	lsls	r1, r3, #27
 8000820:	d407      	bmi.n	8000832 <__swsetup_r+0x32>
 8000822:	2309      	movs	r3, #9
 8000824:	602b      	str	r3, [r5, #0]
 8000826:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800082a:	81a3      	strh	r3, [r4, #12]
 800082c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000830:	e034      	b.n	800089c <__swsetup_r+0x9c>
 8000832:	0758      	lsls	r0, r3, #29
 8000834:	d512      	bpl.n	800085c <__swsetup_r+0x5c>
 8000836:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000838:	b141      	cbz	r1, 800084c <__swsetup_r+0x4c>
 800083a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800083e:	4299      	cmp	r1, r3
 8000840:	d002      	beq.n	8000848 <__swsetup_r+0x48>
 8000842:	4628      	mov	r0, r5
 8000844:	f000 f8ae 	bl	80009a4 <_free_r>
 8000848:	2300      	movs	r3, #0
 800084a:	6363      	str	r3, [r4, #52]	; 0x34
 800084c:	89a3      	ldrh	r3, [r4, #12]
 800084e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000852:	81a3      	strh	r3, [r4, #12]
 8000854:	2300      	movs	r3, #0
 8000856:	6063      	str	r3, [r4, #4]
 8000858:	6923      	ldr	r3, [r4, #16]
 800085a:	6023      	str	r3, [r4, #0]
 800085c:	89a3      	ldrh	r3, [r4, #12]
 800085e:	f043 0308 	orr.w	r3, r3, #8
 8000862:	81a3      	strh	r3, [r4, #12]
 8000864:	6923      	ldr	r3, [r4, #16]
 8000866:	b94b      	cbnz	r3, 800087c <__swsetup_r+0x7c>
 8000868:	89a3      	ldrh	r3, [r4, #12]
 800086a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800086e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000872:	d003      	beq.n	800087c <__swsetup_r+0x7c>
 8000874:	4621      	mov	r1, r4
 8000876:	4628      	mov	r0, r5
 8000878:	f000 fd34 	bl	80012e4 <__smakebuf_r>
 800087c:	89a0      	ldrh	r0, [r4, #12]
 800087e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000882:	f010 0301 	ands.w	r3, r0, #1
 8000886:	d00a      	beq.n	800089e <__swsetup_r+0x9e>
 8000888:	2300      	movs	r3, #0
 800088a:	60a3      	str	r3, [r4, #8]
 800088c:	6963      	ldr	r3, [r4, #20]
 800088e:	425b      	negs	r3, r3
 8000890:	61a3      	str	r3, [r4, #24]
 8000892:	6923      	ldr	r3, [r4, #16]
 8000894:	b943      	cbnz	r3, 80008a8 <__swsetup_r+0xa8>
 8000896:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800089a:	d1c4      	bne.n	8000826 <__swsetup_r+0x26>
 800089c:	bd38      	pop	{r3, r4, r5, pc}
 800089e:	0781      	lsls	r1, r0, #30
 80008a0:	bf58      	it	pl
 80008a2:	6963      	ldrpl	r3, [r4, #20]
 80008a4:	60a3      	str	r3, [r4, #8]
 80008a6:	e7f4      	b.n	8000892 <__swsetup_r+0x92>
 80008a8:	2000      	movs	r0, #0
 80008aa:	e7f7      	b.n	800089c <__swsetup_r+0x9c>
 80008ac:	20000058 	.word	0x20000058

080008b0 <memset>:
 80008b0:	4402      	add	r2, r0
 80008b2:	4603      	mov	r3, r0
 80008b4:	4293      	cmp	r3, r2
 80008b6:	d100      	bne.n	80008ba <memset+0xa>
 80008b8:	4770      	bx	lr
 80008ba:	f803 1b01 	strb.w	r1, [r3], #1
 80008be:	e7f9      	b.n	80008b4 <memset+0x4>

080008c0 <_close_r>:
 80008c0:	b538      	push	{r3, r4, r5, lr}
 80008c2:	4d06      	ldr	r5, [pc, #24]	; (80008dc <_close_r+0x1c>)
 80008c4:	2300      	movs	r3, #0
 80008c6:	4604      	mov	r4, r0
 80008c8:	4608      	mov	r0, r1
 80008ca:	602b      	str	r3, [r5, #0]
 80008cc:	f7ff fd65 	bl	800039a <_close>
 80008d0:	1c43      	adds	r3, r0, #1
 80008d2:	d102      	bne.n	80008da <_close_r+0x1a>
 80008d4:	682b      	ldr	r3, [r5, #0]
 80008d6:	b103      	cbz	r3, 80008da <_close_r+0x1a>
 80008d8:	6023      	str	r3, [r4, #0]
 80008da:	bd38      	pop	{r3, r4, r5, pc}
 80008dc:	200001b8 	.word	0x200001b8

080008e0 <_lseek_r>:
 80008e0:	b538      	push	{r3, r4, r5, lr}
 80008e2:	4d07      	ldr	r5, [pc, #28]	; (8000900 <_lseek_r+0x20>)
 80008e4:	4604      	mov	r4, r0
 80008e6:	4608      	mov	r0, r1
 80008e8:	4611      	mov	r1, r2
 80008ea:	2200      	movs	r2, #0
 80008ec:	602a      	str	r2, [r5, #0]
 80008ee:	461a      	mov	r2, r3
 80008f0:	f7ff fd7a 	bl	80003e8 <_lseek>
 80008f4:	1c43      	adds	r3, r0, #1
 80008f6:	d102      	bne.n	80008fe <_lseek_r+0x1e>
 80008f8:	682b      	ldr	r3, [r5, #0]
 80008fa:	b103      	cbz	r3, 80008fe <_lseek_r+0x1e>
 80008fc:	6023      	str	r3, [r4, #0]
 80008fe:	bd38      	pop	{r3, r4, r5, pc}
 8000900:	200001b8 	.word	0x200001b8

08000904 <_read_r>:
 8000904:	b538      	push	{r3, r4, r5, lr}
 8000906:	4d07      	ldr	r5, [pc, #28]	; (8000924 <_read_r+0x20>)
 8000908:	4604      	mov	r4, r0
 800090a:	4608      	mov	r0, r1
 800090c:	4611      	mov	r1, r2
 800090e:	2200      	movs	r2, #0
 8000910:	602a      	str	r2, [r5, #0]
 8000912:	461a      	mov	r2, r3
 8000914:	f7ff fd08 	bl	8000328 <_read>
 8000918:	1c43      	adds	r3, r0, #1
 800091a:	d102      	bne.n	8000922 <_read_r+0x1e>
 800091c:	682b      	ldr	r3, [r5, #0]
 800091e:	b103      	cbz	r3, 8000922 <_read_r+0x1e>
 8000920:	6023      	str	r3, [r4, #0]
 8000922:	bd38      	pop	{r3, r4, r5, pc}
 8000924:	200001b8 	.word	0x200001b8

08000928 <_write_r>:
 8000928:	b538      	push	{r3, r4, r5, lr}
 800092a:	4d07      	ldr	r5, [pc, #28]	; (8000948 <_write_r+0x20>)
 800092c:	4604      	mov	r4, r0
 800092e:	4608      	mov	r0, r1
 8000930:	4611      	mov	r1, r2
 8000932:	2200      	movs	r2, #0
 8000934:	602a      	str	r2, [r5, #0]
 8000936:	461a      	mov	r2, r3
 8000938:	f7ff fd13 	bl	8000362 <_write>
 800093c:	1c43      	adds	r3, r0, #1
 800093e:	d102      	bne.n	8000946 <_write_r+0x1e>
 8000940:	682b      	ldr	r3, [r5, #0]
 8000942:	b103      	cbz	r3, 8000946 <_write_r+0x1e>
 8000944:	6023      	str	r3, [r4, #0]
 8000946:	bd38      	pop	{r3, r4, r5, pc}
 8000948:	200001b8 	.word	0x200001b8

0800094c <__errno>:
 800094c:	4b01      	ldr	r3, [pc, #4]	; (8000954 <__errno+0x8>)
 800094e:	6818      	ldr	r0, [r3, #0]
 8000950:	4770      	bx	lr
 8000952:	bf00      	nop
 8000954:	20000058 	.word	0x20000058

08000958 <__libc_init_array>:
 8000958:	b570      	push	{r4, r5, r6, lr}
 800095a:	4d0d      	ldr	r5, [pc, #52]	; (8000990 <__libc_init_array+0x38>)
 800095c:	4c0d      	ldr	r4, [pc, #52]	; (8000994 <__libc_init_array+0x3c>)
 800095e:	1b64      	subs	r4, r4, r5
 8000960:	10a4      	asrs	r4, r4, #2
 8000962:	2600      	movs	r6, #0
 8000964:	42a6      	cmp	r6, r4
 8000966:	d109      	bne.n	800097c <__libc_init_array+0x24>
 8000968:	4d0b      	ldr	r5, [pc, #44]	; (8000998 <__libc_init_array+0x40>)
 800096a:	4c0c      	ldr	r4, [pc, #48]	; (800099c <__libc_init_array+0x44>)
 800096c:	f000 fd28 	bl	80013c0 <_init>
 8000970:	1b64      	subs	r4, r4, r5
 8000972:	10a4      	asrs	r4, r4, #2
 8000974:	2600      	movs	r6, #0
 8000976:	42a6      	cmp	r6, r4
 8000978:	d105      	bne.n	8000986 <__libc_init_array+0x2e>
 800097a:	bd70      	pop	{r4, r5, r6, pc}
 800097c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000980:	4798      	blx	r3
 8000982:	3601      	adds	r6, #1
 8000984:	e7ee      	b.n	8000964 <__libc_init_array+0xc>
 8000986:	f855 3b04 	ldr.w	r3, [r5], #4
 800098a:	4798      	blx	r3
 800098c:	3601      	adds	r6, #1
 800098e:	e7f2      	b.n	8000976 <__libc_init_array+0x1e>
 8000990:	08001480 	.word	0x08001480
 8000994:	08001480 	.word	0x08001480
 8000998:	08001480 	.word	0x08001480
 800099c:	08001484 	.word	0x08001484

080009a0 <__retarget_lock_acquire_recursive>:
 80009a0:	4770      	bx	lr

080009a2 <__retarget_lock_release_recursive>:
 80009a2:	4770      	bx	lr

080009a4 <_free_r>:
 80009a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80009a6:	2900      	cmp	r1, #0
 80009a8:	d044      	beq.n	8000a34 <_free_r+0x90>
 80009aa:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80009ae:	9001      	str	r0, [sp, #4]
 80009b0:	2b00      	cmp	r3, #0
 80009b2:	f1a1 0404 	sub.w	r4, r1, #4
 80009b6:	bfb8      	it	lt
 80009b8:	18e4      	addlt	r4, r4, r3
 80009ba:	f000 f8df 	bl	8000b7c <__malloc_lock>
 80009be:	4a1e      	ldr	r2, [pc, #120]	; (8000a38 <_free_r+0x94>)
 80009c0:	9801      	ldr	r0, [sp, #4]
 80009c2:	6813      	ldr	r3, [r2, #0]
 80009c4:	b933      	cbnz	r3, 80009d4 <_free_r+0x30>
 80009c6:	6063      	str	r3, [r4, #4]
 80009c8:	6014      	str	r4, [r2, #0]
 80009ca:	b003      	add	sp, #12
 80009cc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80009d0:	f000 b8da 	b.w	8000b88 <__malloc_unlock>
 80009d4:	42a3      	cmp	r3, r4
 80009d6:	d908      	bls.n	80009ea <_free_r+0x46>
 80009d8:	6825      	ldr	r5, [r4, #0]
 80009da:	1961      	adds	r1, r4, r5
 80009dc:	428b      	cmp	r3, r1
 80009de:	bf01      	itttt	eq
 80009e0:	6819      	ldreq	r1, [r3, #0]
 80009e2:	685b      	ldreq	r3, [r3, #4]
 80009e4:	1949      	addeq	r1, r1, r5
 80009e6:	6021      	streq	r1, [r4, #0]
 80009e8:	e7ed      	b.n	80009c6 <_free_r+0x22>
 80009ea:	461a      	mov	r2, r3
 80009ec:	685b      	ldr	r3, [r3, #4]
 80009ee:	b10b      	cbz	r3, 80009f4 <_free_r+0x50>
 80009f0:	42a3      	cmp	r3, r4
 80009f2:	d9fa      	bls.n	80009ea <_free_r+0x46>
 80009f4:	6811      	ldr	r1, [r2, #0]
 80009f6:	1855      	adds	r5, r2, r1
 80009f8:	42a5      	cmp	r5, r4
 80009fa:	d10b      	bne.n	8000a14 <_free_r+0x70>
 80009fc:	6824      	ldr	r4, [r4, #0]
 80009fe:	4421      	add	r1, r4
 8000a00:	1854      	adds	r4, r2, r1
 8000a02:	42a3      	cmp	r3, r4
 8000a04:	6011      	str	r1, [r2, #0]
 8000a06:	d1e0      	bne.n	80009ca <_free_r+0x26>
 8000a08:	681c      	ldr	r4, [r3, #0]
 8000a0a:	685b      	ldr	r3, [r3, #4]
 8000a0c:	6053      	str	r3, [r2, #4]
 8000a0e:	440c      	add	r4, r1
 8000a10:	6014      	str	r4, [r2, #0]
 8000a12:	e7da      	b.n	80009ca <_free_r+0x26>
 8000a14:	d902      	bls.n	8000a1c <_free_r+0x78>
 8000a16:	230c      	movs	r3, #12
 8000a18:	6003      	str	r3, [r0, #0]
 8000a1a:	e7d6      	b.n	80009ca <_free_r+0x26>
 8000a1c:	6825      	ldr	r5, [r4, #0]
 8000a1e:	1961      	adds	r1, r4, r5
 8000a20:	428b      	cmp	r3, r1
 8000a22:	bf04      	itt	eq
 8000a24:	6819      	ldreq	r1, [r3, #0]
 8000a26:	685b      	ldreq	r3, [r3, #4]
 8000a28:	6063      	str	r3, [r4, #4]
 8000a2a:	bf04      	itt	eq
 8000a2c:	1949      	addeq	r1, r1, r5
 8000a2e:	6021      	streq	r1, [r4, #0]
 8000a30:	6054      	str	r4, [r2, #4]
 8000a32:	e7ca      	b.n	80009ca <_free_r+0x26>
 8000a34:	b003      	add	sp, #12
 8000a36:	bd30      	pop	{r4, r5, pc}
 8000a38:	200001c0 	.word	0x200001c0

08000a3c <sbrk_aligned>:
 8000a3c:	b570      	push	{r4, r5, r6, lr}
 8000a3e:	4e0e      	ldr	r6, [pc, #56]	; (8000a78 <sbrk_aligned+0x3c>)
 8000a40:	460c      	mov	r4, r1
 8000a42:	6831      	ldr	r1, [r6, #0]
 8000a44:	4605      	mov	r5, r0
 8000a46:	b911      	cbnz	r1, 8000a4e <sbrk_aligned+0x12>
 8000a48:	f000 fcaa 	bl	80013a0 <_sbrk_r>
 8000a4c:	6030      	str	r0, [r6, #0]
 8000a4e:	4621      	mov	r1, r4
 8000a50:	4628      	mov	r0, r5
 8000a52:	f000 fca5 	bl	80013a0 <_sbrk_r>
 8000a56:	1c43      	adds	r3, r0, #1
 8000a58:	d00a      	beq.n	8000a70 <sbrk_aligned+0x34>
 8000a5a:	1cc4      	adds	r4, r0, #3
 8000a5c:	f024 0403 	bic.w	r4, r4, #3
 8000a60:	42a0      	cmp	r0, r4
 8000a62:	d007      	beq.n	8000a74 <sbrk_aligned+0x38>
 8000a64:	1a21      	subs	r1, r4, r0
 8000a66:	4628      	mov	r0, r5
 8000a68:	f000 fc9a 	bl	80013a0 <_sbrk_r>
 8000a6c:	3001      	adds	r0, #1
 8000a6e:	d101      	bne.n	8000a74 <sbrk_aligned+0x38>
 8000a70:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000a74:	4620      	mov	r0, r4
 8000a76:	bd70      	pop	{r4, r5, r6, pc}
 8000a78:	200001c4 	.word	0x200001c4

08000a7c <_malloc_r>:
 8000a7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a80:	1ccd      	adds	r5, r1, #3
 8000a82:	f025 0503 	bic.w	r5, r5, #3
 8000a86:	3508      	adds	r5, #8
 8000a88:	2d0c      	cmp	r5, #12
 8000a8a:	bf38      	it	cc
 8000a8c:	250c      	movcc	r5, #12
 8000a8e:	2d00      	cmp	r5, #0
 8000a90:	4607      	mov	r7, r0
 8000a92:	db01      	blt.n	8000a98 <_malloc_r+0x1c>
 8000a94:	42a9      	cmp	r1, r5
 8000a96:	d905      	bls.n	8000aa4 <_malloc_r+0x28>
 8000a98:	230c      	movs	r3, #12
 8000a9a:	603b      	str	r3, [r7, #0]
 8000a9c:	2600      	movs	r6, #0
 8000a9e:	4630      	mov	r0, r6
 8000aa0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000aa4:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000b78 <_malloc_r+0xfc>
 8000aa8:	f000 f868 	bl	8000b7c <__malloc_lock>
 8000aac:	f8d8 3000 	ldr.w	r3, [r8]
 8000ab0:	461c      	mov	r4, r3
 8000ab2:	bb5c      	cbnz	r4, 8000b0c <_malloc_r+0x90>
 8000ab4:	4629      	mov	r1, r5
 8000ab6:	4638      	mov	r0, r7
 8000ab8:	f7ff ffc0 	bl	8000a3c <sbrk_aligned>
 8000abc:	1c43      	adds	r3, r0, #1
 8000abe:	4604      	mov	r4, r0
 8000ac0:	d155      	bne.n	8000b6e <_malloc_r+0xf2>
 8000ac2:	f8d8 4000 	ldr.w	r4, [r8]
 8000ac6:	4626      	mov	r6, r4
 8000ac8:	2e00      	cmp	r6, #0
 8000aca:	d145      	bne.n	8000b58 <_malloc_r+0xdc>
 8000acc:	2c00      	cmp	r4, #0
 8000ace:	d048      	beq.n	8000b62 <_malloc_r+0xe6>
 8000ad0:	6823      	ldr	r3, [r4, #0]
 8000ad2:	4631      	mov	r1, r6
 8000ad4:	4638      	mov	r0, r7
 8000ad6:	eb04 0903 	add.w	r9, r4, r3
 8000ada:	f000 fc61 	bl	80013a0 <_sbrk_r>
 8000ade:	4581      	cmp	r9, r0
 8000ae0:	d13f      	bne.n	8000b62 <_malloc_r+0xe6>
 8000ae2:	6821      	ldr	r1, [r4, #0]
 8000ae4:	1a6d      	subs	r5, r5, r1
 8000ae6:	4629      	mov	r1, r5
 8000ae8:	4638      	mov	r0, r7
 8000aea:	f7ff ffa7 	bl	8000a3c <sbrk_aligned>
 8000aee:	3001      	adds	r0, #1
 8000af0:	d037      	beq.n	8000b62 <_malloc_r+0xe6>
 8000af2:	6823      	ldr	r3, [r4, #0]
 8000af4:	442b      	add	r3, r5
 8000af6:	6023      	str	r3, [r4, #0]
 8000af8:	f8d8 3000 	ldr.w	r3, [r8]
 8000afc:	2b00      	cmp	r3, #0
 8000afe:	d038      	beq.n	8000b72 <_malloc_r+0xf6>
 8000b00:	685a      	ldr	r2, [r3, #4]
 8000b02:	42a2      	cmp	r2, r4
 8000b04:	d12b      	bne.n	8000b5e <_malloc_r+0xe2>
 8000b06:	2200      	movs	r2, #0
 8000b08:	605a      	str	r2, [r3, #4]
 8000b0a:	e00f      	b.n	8000b2c <_malloc_r+0xb0>
 8000b0c:	6822      	ldr	r2, [r4, #0]
 8000b0e:	1b52      	subs	r2, r2, r5
 8000b10:	d41f      	bmi.n	8000b52 <_malloc_r+0xd6>
 8000b12:	2a0b      	cmp	r2, #11
 8000b14:	d917      	bls.n	8000b46 <_malloc_r+0xca>
 8000b16:	1961      	adds	r1, r4, r5
 8000b18:	42a3      	cmp	r3, r4
 8000b1a:	6025      	str	r5, [r4, #0]
 8000b1c:	bf18      	it	ne
 8000b1e:	6059      	strne	r1, [r3, #4]
 8000b20:	6863      	ldr	r3, [r4, #4]
 8000b22:	bf08      	it	eq
 8000b24:	f8c8 1000 	streq.w	r1, [r8]
 8000b28:	5162      	str	r2, [r4, r5]
 8000b2a:	604b      	str	r3, [r1, #4]
 8000b2c:	4638      	mov	r0, r7
 8000b2e:	f104 060b 	add.w	r6, r4, #11
 8000b32:	f000 f829 	bl	8000b88 <__malloc_unlock>
 8000b36:	f026 0607 	bic.w	r6, r6, #7
 8000b3a:	1d23      	adds	r3, r4, #4
 8000b3c:	1af2      	subs	r2, r6, r3
 8000b3e:	d0ae      	beq.n	8000a9e <_malloc_r+0x22>
 8000b40:	1b9b      	subs	r3, r3, r6
 8000b42:	50a3      	str	r3, [r4, r2]
 8000b44:	e7ab      	b.n	8000a9e <_malloc_r+0x22>
 8000b46:	42a3      	cmp	r3, r4
 8000b48:	6862      	ldr	r2, [r4, #4]
 8000b4a:	d1dd      	bne.n	8000b08 <_malloc_r+0x8c>
 8000b4c:	f8c8 2000 	str.w	r2, [r8]
 8000b50:	e7ec      	b.n	8000b2c <_malloc_r+0xb0>
 8000b52:	4623      	mov	r3, r4
 8000b54:	6864      	ldr	r4, [r4, #4]
 8000b56:	e7ac      	b.n	8000ab2 <_malloc_r+0x36>
 8000b58:	4634      	mov	r4, r6
 8000b5a:	6876      	ldr	r6, [r6, #4]
 8000b5c:	e7b4      	b.n	8000ac8 <_malloc_r+0x4c>
 8000b5e:	4613      	mov	r3, r2
 8000b60:	e7cc      	b.n	8000afc <_malloc_r+0x80>
 8000b62:	230c      	movs	r3, #12
 8000b64:	603b      	str	r3, [r7, #0]
 8000b66:	4638      	mov	r0, r7
 8000b68:	f000 f80e 	bl	8000b88 <__malloc_unlock>
 8000b6c:	e797      	b.n	8000a9e <_malloc_r+0x22>
 8000b6e:	6025      	str	r5, [r4, #0]
 8000b70:	e7dc      	b.n	8000b2c <_malloc_r+0xb0>
 8000b72:	605b      	str	r3, [r3, #4]
 8000b74:	deff      	udf	#255	; 0xff
 8000b76:	bf00      	nop
 8000b78:	200001c0 	.word	0x200001c0

08000b7c <__malloc_lock>:
 8000b7c:	4801      	ldr	r0, [pc, #4]	; (8000b84 <__malloc_lock+0x8>)
 8000b7e:	f7ff bf0f 	b.w	80009a0 <__retarget_lock_acquire_recursive>
 8000b82:	bf00      	nop
 8000b84:	200001bc 	.word	0x200001bc

08000b88 <__malloc_unlock>:
 8000b88:	4801      	ldr	r0, [pc, #4]	; (8000b90 <__malloc_unlock+0x8>)
 8000b8a:	f7ff bf0a 	b.w	80009a2 <__retarget_lock_release_recursive>
 8000b8e:	bf00      	nop
 8000b90:	200001bc 	.word	0x200001bc

08000b94 <__sfputc_r>:
 8000b94:	6893      	ldr	r3, [r2, #8]
 8000b96:	3b01      	subs	r3, #1
 8000b98:	2b00      	cmp	r3, #0
 8000b9a:	b410      	push	{r4}
 8000b9c:	6093      	str	r3, [r2, #8]
 8000b9e:	da08      	bge.n	8000bb2 <__sfputc_r+0x1e>
 8000ba0:	6994      	ldr	r4, [r2, #24]
 8000ba2:	42a3      	cmp	r3, r4
 8000ba4:	db01      	blt.n	8000baa <__sfputc_r+0x16>
 8000ba6:	290a      	cmp	r1, #10
 8000ba8:	d103      	bne.n	8000bb2 <__sfputc_r+0x1e>
 8000baa:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000bae:	f7ff bdea 	b.w	8000786 <__swbuf_r>
 8000bb2:	6813      	ldr	r3, [r2, #0]
 8000bb4:	1c58      	adds	r0, r3, #1
 8000bb6:	6010      	str	r0, [r2, #0]
 8000bb8:	7019      	strb	r1, [r3, #0]
 8000bba:	4608      	mov	r0, r1
 8000bbc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000bc0:	4770      	bx	lr

08000bc2 <__sfputs_r>:
 8000bc2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bc4:	4606      	mov	r6, r0
 8000bc6:	460f      	mov	r7, r1
 8000bc8:	4614      	mov	r4, r2
 8000bca:	18d5      	adds	r5, r2, r3
 8000bcc:	42ac      	cmp	r4, r5
 8000bce:	d101      	bne.n	8000bd4 <__sfputs_r+0x12>
 8000bd0:	2000      	movs	r0, #0
 8000bd2:	e007      	b.n	8000be4 <__sfputs_r+0x22>
 8000bd4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bd8:	463a      	mov	r2, r7
 8000bda:	4630      	mov	r0, r6
 8000bdc:	f7ff ffda 	bl	8000b94 <__sfputc_r>
 8000be0:	1c43      	adds	r3, r0, #1
 8000be2:	d1f3      	bne.n	8000bcc <__sfputs_r+0xa>
 8000be4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000be8 <_vfiprintf_r>:
 8000be8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000bec:	460d      	mov	r5, r1
 8000bee:	b09d      	sub	sp, #116	; 0x74
 8000bf0:	4614      	mov	r4, r2
 8000bf2:	4698      	mov	r8, r3
 8000bf4:	4606      	mov	r6, r0
 8000bf6:	b118      	cbz	r0, 8000c00 <_vfiprintf_r+0x18>
 8000bf8:	6a03      	ldr	r3, [r0, #32]
 8000bfa:	b90b      	cbnz	r3, 8000c00 <_vfiprintf_r+0x18>
 8000bfc:	f7ff fcdc 	bl	80005b8 <__sinit>
 8000c00:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c02:	07d9      	lsls	r1, r3, #31
 8000c04:	d405      	bmi.n	8000c12 <_vfiprintf_r+0x2a>
 8000c06:	89ab      	ldrh	r3, [r5, #12]
 8000c08:	059a      	lsls	r2, r3, #22
 8000c0a:	d402      	bmi.n	8000c12 <_vfiprintf_r+0x2a>
 8000c0c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c0e:	f7ff fec7 	bl	80009a0 <__retarget_lock_acquire_recursive>
 8000c12:	89ab      	ldrh	r3, [r5, #12]
 8000c14:	071b      	lsls	r3, r3, #28
 8000c16:	d501      	bpl.n	8000c1c <_vfiprintf_r+0x34>
 8000c18:	692b      	ldr	r3, [r5, #16]
 8000c1a:	b99b      	cbnz	r3, 8000c44 <_vfiprintf_r+0x5c>
 8000c1c:	4629      	mov	r1, r5
 8000c1e:	4630      	mov	r0, r6
 8000c20:	f7ff fdee 	bl	8000800 <__swsetup_r>
 8000c24:	b170      	cbz	r0, 8000c44 <_vfiprintf_r+0x5c>
 8000c26:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c28:	07dc      	lsls	r4, r3, #31
 8000c2a:	d504      	bpl.n	8000c36 <_vfiprintf_r+0x4e>
 8000c2c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000c30:	b01d      	add	sp, #116	; 0x74
 8000c32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000c36:	89ab      	ldrh	r3, [r5, #12]
 8000c38:	0598      	lsls	r0, r3, #22
 8000c3a:	d4f7      	bmi.n	8000c2c <_vfiprintf_r+0x44>
 8000c3c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c3e:	f7ff feb0 	bl	80009a2 <__retarget_lock_release_recursive>
 8000c42:	e7f3      	b.n	8000c2c <_vfiprintf_r+0x44>
 8000c44:	2300      	movs	r3, #0
 8000c46:	9309      	str	r3, [sp, #36]	; 0x24
 8000c48:	2320      	movs	r3, #32
 8000c4a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000c4e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000c52:	2330      	movs	r3, #48	; 0x30
 8000c54:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000e08 <_vfiprintf_r+0x220>
 8000c58:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000c5c:	f04f 0901 	mov.w	r9, #1
 8000c60:	4623      	mov	r3, r4
 8000c62:	469a      	mov	sl, r3
 8000c64:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000c68:	b10a      	cbz	r2, 8000c6e <_vfiprintf_r+0x86>
 8000c6a:	2a25      	cmp	r2, #37	; 0x25
 8000c6c:	d1f9      	bne.n	8000c62 <_vfiprintf_r+0x7a>
 8000c6e:	ebba 0b04 	subs.w	fp, sl, r4
 8000c72:	d00b      	beq.n	8000c8c <_vfiprintf_r+0xa4>
 8000c74:	465b      	mov	r3, fp
 8000c76:	4622      	mov	r2, r4
 8000c78:	4629      	mov	r1, r5
 8000c7a:	4630      	mov	r0, r6
 8000c7c:	f7ff ffa1 	bl	8000bc2 <__sfputs_r>
 8000c80:	3001      	adds	r0, #1
 8000c82:	f000 80a9 	beq.w	8000dd8 <_vfiprintf_r+0x1f0>
 8000c86:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000c88:	445a      	add	r2, fp
 8000c8a:	9209      	str	r2, [sp, #36]	; 0x24
 8000c8c:	f89a 3000 	ldrb.w	r3, [sl]
 8000c90:	2b00      	cmp	r3, #0
 8000c92:	f000 80a1 	beq.w	8000dd8 <_vfiprintf_r+0x1f0>
 8000c96:	2300      	movs	r3, #0
 8000c98:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000c9c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000ca0:	f10a 0a01 	add.w	sl, sl, #1
 8000ca4:	9304      	str	r3, [sp, #16]
 8000ca6:	9307      	str	r3, [sp, #28]
 8000ca8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000cac:	931a      	str	r3, [sp, #104]	; 0x68
 8000cae:	4654      	mov	r4, sl
 8000cb0:	2205      	movs	r2, #5
 8000cb2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000cb6:	4854      	ldr	r0, [pc, #336]	; (8000e08 <_vfiprintf_r+0x220>)
 8000cb8:	f7ff fa9a 	bl	80001f0 <memchr>
 8000cbc:	9a04      	ldr	r2, [sp, #16]
 8000cbe:	b9d8      	cbnz	r0, 8000cf8 <_vfiprintf_r+0x110>
 8000cc0:	06d1      	lsls	r1, r2, #27
 8000cc2:	bf44      	itt	mi
 8000cc4:	2320      	movmi	r3, #32
 8000cc6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000cca:	0713      	lsls	r3, r2, #28
 8000ccc:	bf44      	itt	mi
 8000cce:	232b      	movmi	r3, #43	; 0x2b
 8000cd0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000cd4:	f89a 3000 	ldrb.w	r3, [sl]
 8000cd8:	2b2a      	cmp	r3, #42	; 0x2a
 8000cda:	d015      	beq.n	8000d08 <_vfiprintf_r+0x120>
 8000cdc:	9a07      	ldr	r2, [sp, #28]
 8000cde:	4654      	mov	r4, sl
 8000ce0:	2000      	movs	r0, #0
 8000ce2:	f04f 0c0a 	mov.w	ip, #10
 8000ce6:	4621      	mov	r1, r4
 8000ce8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000cec:	3b30      	subs	r3, #48	; 0x30
 8000cee:	2b09      	cmp	r3, #9
 8000cf0:	d94d      	bls.n	8000d8e <_vfiprintf_r+0x1a6>
 8000cf2:	b1b0      	cbz	r0, 8000d22 <_vfiprintf_r+0x13a>
 8000cf4:	9207      	str	r2, [sp, #28]
 8000cf6:	e014      	b.n	8000d22 <_vfiprintf_r+0x13a>
 8000cf8:	eba0 0308 	sub.w	r3, r0, r8
 8000cfc:	fa09 f303 	lsl.w	r3, r9, r3
 8000d00:	4313      	orrs	r3, r2
 8000d02:	9304      	str	r3, [sp, #16]
 8000d04:	46a2      	mov	sl, r4
 8000d06:	e7d2      	b.n	8000cae <_vfiprintf_r+0xc6>
 8000d08:	9b03      	ldr	r3, [sp, #12]
 8000d0a:	1d19      	adds	r1, r3, #4
 8000d0c:	681b      	ldr	r3, [r3, #0]
 8000d0e:	9103      	str	r1, [sp, #12]
 8000d10:	2b00      	cmp	r3, #0
 8000d12:	bfbb      	ittet	lt
 8000d14:	425b      	neglt	r3, r3
 8000d16:	f042 0202 	orrlt.w	r2, r2, #2
 8000d1a:	9307      	strge	r3, [sp, #28]
 8000d1c:	9307      	strlt	r3, [sp, #28]
 8000d1e:	bfb8      	it	lt
 8000d20:	9204      	strlt	r2, [sp, #16]
 8000d22:	7823      	ldrb	r3, [r4, #0]
 8000d24:	2b2e      	cmp	r3, #46	; 0x2e
 8000d26:	d10c      	bne.n	8000d42 <_vfiprintf_r+0x15a>
 8000d28:	7863      	ldrb	r3, [r4, #1]
 8000d2a:	2b2a      	cmp	r3, #42	; 0x2a
 8000d2c:	d134      	bne.n	8000d98 <_vfiprintf_r+0x1b0>
 8000d2e:	9b03      	ldr	r3, [sp, #12]
 8000d30:	1d1a      	adds	r2, r3, #4
 8000d32:	681b      	ldr	r3, [r3, #0]
 8000d34:	9203      	str	r2, [sp, #12]
 8000d36:	2b00      	cmp	r3, #0
 8000d38:	bfb8      	it	lt
 8000d3a:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000d3e:	3402      	adds	r4, #2
 8000d40:	9305      	str	r3, [sp, #20]
 8000d42:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000e18 <_vfiprintf_r+0x230>
 8000d46:	7821      	ldrb	r1, [r4, #0]
 8000d48:	2203      	movs	r2, #3
 8000d4a:	4650      	mov	r0, sl
 8000d4c:	f7ff fa50 	bl	80001f0 <memchr>
 8000d50:	b138      	cbz	r0, 8000d62 <_vfiprintf_r+0x17a>
 8000d52:	9b04      	ldr	r3, [sp, #16]
 8000d54:	eba0 000a 	sub.w	r0, r0, sl
 8000d58:	2240      	movs	r2, #64	; 0x40
 8000d5a:	4082      	lsls	r2, r0
 8000d5c:	4313      	orrs	r3, r2
 8000d5e:	3401      	adds	r4, #1
 8000d60:	9304      	str	r3, [sp, #16]
 8000d62:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d66:	4829      	ldr	r0, [pc, #164]	; (8000e0c <_vfiprintf_r+0x224>)
 8000d68:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000d6c:	2206      	movs	r2, #6
 8000d6e:	f7ff fa3f 	bl	80001f0 <memchr>
 8000d72:	2800      	cmp	r0, #0
 8000d74:	d03f      	beq.n	8000df6 <_vfiprintf_r+0x20e>
 8000d76:	4b26      	ldr	r3, [pc, #152]	; (8000e10 <_vfiprintf_r+0x228>)
 8000d78:	bb1b      	cbnz	r3, 8000dc2 <_vfiprintf_r+0x1da>
 8000d7a:	9b03      	ldr	r3, [sp, #12]
 8000d7c:	3307      	adds	r3, #7
 8000d7e:	f023 0307 	bic.w	r3, r3, #7
 8000d82:	3308      	adds	r3, #8
 8000d84:	9303      	str	r3, [sp, #12]
 8000d86:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000d88:	443b      	add	r3, r7
 8000d8a:	9309      	str	r3, [sp, #36]	; 0x24
 8000d8c:	e768      	b.n	8000c60 <_vfiprintf_r+0x78>
 8000d8e:	fb0c 3202 	mla	r2, ip, r2, r3
 8000d92:	460c      	mov	r4, r1
 8000d94:	2001      	movs	r0, #1
 8000d96:	e7a6      	b.n	8000ce6 <_vfiprintf_r+0xfe>
 8000d98:	2300      	movs	r3, #0
 8000d9a:	3401      	adds	r4, #1
 8000d9c:	9305      	str	r3, [sp, #20]
 8000d9e:	4619      	mov	r1, r3
 8000da0:	f04f 0c0a 	mov.w	ip, #10
 8000da4:	4620      	mov	r0, r4
 8000da6:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000daa:	3a30      	subs	r2, #48	; 0x30
 8000dac:	2a09      	cmp	r2, #9
 8000dae:	d903      	bls.n	8000db8 <_vfiprintf_r+0x1d0>
 8000db0:	2b00      	cmp	r3, #0
 8000db2:	d0c6      	beq.n	8000d42 <_vfiprintf_r+0x15a>
 8000db4:	9105      	str	r1, [sp, #20]
 8000db6:	e7c4      	b.n	8000d42 <_vfiprintf_r+0x15a>
 8000db8:	fb0c 2101 	mla	r1, ip, r1, r2
 8000dbc:	4604      	mov	r4, r0
 8000dbe:	2301      	movs	r3, #1
 8000dc0:	e7f0      	b.n	8000da4 <_vfiprintf_r+0x1bc>
 8000dc2:	ab03      	add	r3, sp, #12
 8000dc4:	9300      	str	r3, [sp, #0]
 8000dc6:	462a      	mov	r2, r5
 8000dc8:	4b12      	ldr	r3, [pc, #72]	; (8000e14 <_vfiprintf_r+0x22c>)
 8000dca:	a904      	add	r1, sp, #16
 8000dcc:	4630      	mov	r0, r6
 8000dce:	f3af 8000 	nop.w
 8000dd2:	4607      	mov	r7, r0
 8000dd4:	1c78      	adds	r0, r7, #1
 8000dd6:	d1d6      	bne.n	8000d86 <_vfiprintf_r+0x19e>
 8000dd8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000dda:	07d9      	lsls	r1, r3, #31
 8000ddc:	d405      	bmi.n	8000dea <_vfiprintf_r+0x202>
 8000dde:	89ab      	ldrh	r3, [r5, #12]
 8000de0:	059a      	lsls	r2, r3, #22
 8000de2:	d402      	bmi.n	8000dea <_vfiprintf_r+0x202>
 8000de4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000de6:	f7ff fddc 	bl	80009a2 <__retarget_lock_release_recursive>
 8000dea:	89ab      	ldrh	r3, [r5, #12]
 8000dec:	065b      	lsls	r3, r3, #25
 8000dee:	f53f af1d 	bmi.w	8000c2c <_vfiprintf_r+0x44>
 8000df2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000df4:	e71c      	b.n	8000c30 <_vfiprintf_r+0x48>
 8000df6:	ab03      	add	r3, sp, #12
 8000df8:	9300      	str	r3, [sp, #0]
 8000dfa:	462a      	mov	r2, r5
 8000dfc:	4b05      	ldr	r3, [pc, #20]	; (8000e14 <_vfiprintf_r+0x22c>)
 8000dfe:	a904      	add	r1, sp, #16
 8000e00:	4630      	mov	r0, r6
 8000e02:	f000 f879 	bl	8000ef8 <_printf_i>
 8000e06:	e7e4      	b.n	8000dd2 <_vfiprintf_r+0x1ea>
 8000e08:	0800144c 	.word	0x0800144c
 8000e0c:	08001456 	.word	0x08001456
 8000e10:	00000000 	.word	0x00000000
 8000e14:	08000bc3 	.word	0x08000bc3
 8000e18:	08001452 	.word	0x08001452

08000e1c <_printf_common>:
 8000e1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000e20:	4616      	mov	r6, r2
 8000e22:	4699      	mov	r9, r3
 8000e24:	688a      	ldr	r2, [r1, #8]
 8000e26:	690b      	ldr	r3, [r1, #16]
 8000e28:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000e2c:	4293      	cmp	r3, r2
 8000e2e:	bfb8      	it	lt
 8000e30:	4613      	movlt	r3, r2
 8000e32:	6033      	str	r3, [r6, #0]
 8000e34:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000e38:	4607      	mov	r7, r0
 8000e3a:	460c      	mov	r4, r1
 8000e3c:	b10a      	cbz	r2, 8000e42 <_printf_common+0x26>
 8000e3e:	3301      	adds	r3, #1
 8000e40:	6033      	str	r3, [r6, #0]
 8000e42:	6823      	ldr	r3, [r4, #0]
 8000e44:	0699      	lsls	r1, r3, #26
 8000e46:	bf42      	ittt	mi
 8000e48:	6833      	ldrmi	r3, [r6, #0]
 8000e4a:	3302      	addmi	r3, #2
 8000e4c:	6033      	strmi	r3, [r6, #0]
 8000e4e:	6825      	ldr	r5, [r4, #0]
 8000e50:	f015 0506 	ands.w	r5, r5, #6
 8000e54:	d106      	bne.n	8000e64 <_printf_common+0x48>
 8000e56:	f104 0a19 	add.w	sl, r4, #25
 8000e5a:	68e3      	ldr	r3, [r4, #12]
 8000e5c:	6832      	ldr	r2, [r6, #0]
 8000e5e:	1a9b      	subs	r3, r3, r2
 8000e60:	42ab      	cmp	r3, r5
 8000e62:	dc26      	bgt.n	8000eb2 <_printf_common+0x96>
 8000e64:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000e68:	1e13      	subs	r3, r2, #0
 8000e6a:	6822      	ldr	r2, [r4, #0]
 8000e6c:	bf18      	it	ne
 8000e6e:	2301      	movne	r3, #1
 8000e70:	0692      	lsls	r2, r2, #26
 8000e72:	d42b      	bmi.n	8000ecc <_printf_common+0xb0>
 8000e74:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000e78:	4649      	mov	r1, r9
 8000e7a:	4638      	mov	r0, r7
 8000e7c:	47c0      	blx	r8
 8000e7e:	3001      	adds	r0, #1
 8000e80:	d01e      	beq.n	8000ec0 <_printf_common+0xa4>
 8000e82:	6823      	ldr	r3, [r4, #0]
 8000e84:	6922      	ldr	r2, [r4, #16]
 8000e86:	f003 0306 	and.w	r3, r3, #6
 8000e8a:	2b04      	cmp	r3, #4
 8000e8c:	bf02      	ittt	eq
 8000e8e:	68e5      	ldreq	r5, [r4, #12]
 8000e90:	6833      	ldreq	r3, [r6, #0]
 8000e92:	1aed      	subeq	r5, r5, r3
 8000e94:	68a3      	ldr	r3, [r4, #8]
 8000e96:	bf0c      	ite	eq
 8000e98:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000e9c:	2500      	movne	r5, #0
 8000e9e:	4293      	cmp	r3, r2
 8000ea0:	bfc4      	itt	gt
 8000ea2:	1a9b      	subgt	r3, r3, r2
 8000ea4:	18ed      	addgt	r5, r5, r3
 8000ea6:	2600      	movs	r6, #0
 8000ea8:	341a      	adds	r4, #26
 8000eaa:	42b5      	cmp	r5, r6
 8000eac:	d11a      	bne.n	8000ee4 <_printf_common+0xc8>
 8000eae:	2000      	movs	r0, #0
 8000eb0:	e008      	b.n	8000ec4 <_printf_common+0xa8>
 8000eb2:	2301      	movs	r3, #1
 8000eb4:	4652      	mov	r2, sl
 8000eb6:	4649      	mov	r1, r9
 8000eb8:	4638      	mov	r0, r7
 8000eba:	47c0      	blx	r8
 8000ebc:	3001      	adds	r0, #1
 8000ebe:	d103      	bne.n	8000ec8 <_printf_common+0xac>
 8000ec0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000ec4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ec8:	3501      	adds	r5, #1
 8000eca:	e7c6      	b.n	8000e5a <_printf_common+0x3e>
 8000ecc:	18e1      	adds	r1, r4, r3
 8000ece:	1c5a      	adds	r2, r3, #1
 8000ed0:	2030      	movs	r0, #48	; 0x30
 8000ed2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000ed6:	4422      	add	r2, r4
 8000ed8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000edc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000ee0:	3302      	adds	r3, #2
 8000ee2:	e7c7      	b.n	8000e74 <_printf_common+0x58>
 8000ee4:	2301      	movs	r3, #1
 8000ee6:	4622      	mov	r2, r4
 8000ee8:	4649      	mov	r1, r9
 8000eea:	4638      	mov	r0, r7
 8000eec:	47c0      	blx	r8
 8000eee:	3001      	adds	r0, #1
 8000ef0:	d0e6      	beq.n	8000ec0 <_printf_common+0xa4>
 8000ef2:	3601      	adds	r6, #1
 8000ef4:	e7d9      	b.n	8000eaa <_printf_common+0x8e>
	...

08000ef8 <_printf_i>:
 8000ef8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000efc:	7e0f      	ldrb	r7, [r1, #24]
 8000efe:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000f00:	2f78      	cmp	r7, #120	; 0x78
 8000f02:	4691      	mov	r9, r2
 8000f04:	4680      	mov	r8, r0
 8000f06:	460c      	mov	r4, r1
 8000f08:	469a      	mov	sl, r3
 8000f0a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000f0e:	d807      	bhi.n	8000f20 <_printf_i+0x28>
 8000f10:	2f62      	cmp	r7, #98	; 0x62
 8000f12:	d80a      	bhi.n	8000f2a <_printf_i+0x32>
 8000f14:	2f00      	cmp	r7, #0
 8000f16:	f000 80d4 	beq.w	80010c2 <_printf_i+0x1ca>
 8000f1a:	2f58      	cmp	r7, #88	; 0x58
 8000f1c:	f000 80c0 	beq.w	80010a0 <_printf_i+0x1a8>
 8000f20:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000f24:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000f28:	e03a      	b.n	8000fa0 <_printf_i+0xa8>
 8000f2a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000f2e:	2b15      	cmp	r3, #21
 8000f30:	d8f6      	bhi.n	8000f20 <_printf_i+0x28>
 8000f32:	a101      	add	r1, pc, #4	; (adr r1, 8000f38 <_printf_i+0x40>)
 8000f34:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000f38:	08000f91 	.word	0x08000f91
 8000f3c:	08000fa5 	.word	0x08000fa5
 8000f40:	08000f21 	.word	0x08000f21
 8000f44:	08000f21 	.word	0x08000f21
 8000f48:	08000f21 	.word	0x08000f21
 8000f4c:	08000f21 	.word	0x08000f21
 8000f50:	08000fa5 	.word	0x08000fa5
 8000f54:	08000f21 	.word	0x08000f21
 8000f58:	08000f21 	.word	0x08000f21
 8000f5c:	08000f21 	.word	0x08000f21
 8000f60:	08000f21 	.word	0x08000f21
 8000f64:	080010a9 	.word	0x080010a9
 8000f68:	08000fd1 	.word	0x08000fd1
 8000f6c:	08001063 	.word	0x08001063
 8000f70:	08000f21 	.word	0x08000f21
 8000f74:	08000f21 	.word	0x08000f21
 8000f78:	080010cb 	.word	0x080010cb
 8000f7c:	08000f21 	.word	0x08000f21
 8000f80:	08000fd1 	.word	0x08000fd1
 8000f84:	08000f21 	.word	0x08000f21
 8000f88:	08000f21 	.word	0x08000f21
 8000f8c:	0800106b 	.word	0x0800106b
 8000f90:	682b      	ldr	r3, [r5, #0]
 8000f92:	1d1a      	adds	r2, r3, #4
 8000f94:	681b      	ldr	r3, [r3, #0]
 8000f96:	602a      	str	r2, [r5, #0]
 8000f98:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000f9c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000fa0:	2301      	movs	r3, #1
 8000fa2:	e09f      	b.n	80010e4 <_printf_i+0x1ec>
 8000fa4:	6820      	ldr	r0, [r4, #0]
 8000fa6:	682b      	ldr	r3, [r5, #0]
 8000fa8:	0607      	lsls	r7, r0, #24
 8000faa:	f103 0104 	add.w	r1, r3, #4
 8000fae:	6029      	str	r1, [r5, #0]
 8000fb0:	d501      	bpl.n	8000fb6 <_printf_i+0xbe>
 8000fb2:	681e      	ldr	r6, [r3, #0]
 8000fb4:	e003      	b.n	8000fbe <_printf_i+0xc6>
 8000fb6:	0646      	lsls	r6, r0, #25
 8000fb8:	d5fb      	bpl.n	8000fb2 <_printf_i+0xba>
 8000fba:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000fbe:	2e00      	cmp	r6, #0
 8000fc0:	da03      	bge.n	8000fca <_printf_i+0xd2>
 8000fc2:	232d      	movs	r3, #45	; 0x2d
 8000fc4:	4276      	negs	r6, r6
 8000fc6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000fca:	485a      	ldr	r0, [pc, #360]	; (8001134 <_printf_i+0x23c>)
 8000fcc:	230a      	movs	r3, #10
 8000fce:	e012      	b.n	8000ff6 <_printf_i+0xfe>
 8000fd0:	682b      	ldr	r3, [r5, #0]
 8000fd2:	6820      	ldr	r0, [r4, #0]
 8000fd4:	1d19      	adds	r1, r3, #4
 8000fd6:	6029      	str	r1, [r5, #0]
 8000fd8:	0605      	lsls	r5, r0, #24
 8000fda:	d501      	bpl.n	8000fe0 <_printf_i+0xe8>
 8000fdc:	681e      	ldr	r6, [r3, #0]
 8000fde:	e002      	b.n	8000fe6 <_printf_i+0xee>
 8000fe0:	0641      	lsls	r1, r0, #25
 8000fe2:	d5fb      	bpl.n	8000fdc <_printf_i+0xe4>
 8000fe4:	881e      	ldrh	r6, [r3, #0]
 8000fe6:	4853      	ldr	r0, [pc, #332]	; (8001134 <_printf_i+0x23c>)
 8000fe8:	2f6f      	cmp	r7, #111	; 0x6f
 8000fea:	bf0c      	ite	eq
 8000fec:	2308      	moveq	r3, #8
 8000fee:	230a      	movne	r3, #10
 8000ff0:	2100      	movs	r1, #0
 8000ff2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000ff6:	6865      	ldr	r5, [r4, #4]
 8000ff8:	60a5      	str	r5, [r4, #8]
 8000ffa:	2d00      	cmp	r5, #0
 8000ffc:	bfa2      	ittt	ge
 8000ffe:	6821      	ldrge	r1, [r4, #0]
 8001000:	f021 0104 	bicge.w	r1, r1, #4
 8001004:	6021      	strge	r1, [r4, #0]
 8001006:	b90e      	cbnz	r6, 800100c <_printf_i+0x114>
 8001008:	2d00      	cmp	r5, #0
 800100a:	d04b      	beq.n	80010a4 <_printf_i+0x1ac>
 800100c:	4615      	mov	r5, r2
 800100e:	fbb6 f1f3 	udiv	r1, r6, r3
 8001012:	fb03 6711 	mls	r7, r3, r1, r6
 8001016:	5dc7      	ldrb	r7, [r0, r7]
 8001018:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800101c:	4637      	mov	r7, r6
 800101e:	42bb      	cmp	r3, r7
 8001020:	460e      	mov	r6, r1
 8001022:	d9f4      	bls.n	800100e <_printf_i+0x116>
 8001024:	2b08      	cmp	r3, #8
 8001026:	d10b      	bne.n	8001040 <_printf_i+0x148>
 8001028:	6823      	ldr	r3, [r4, #0]
 800102a:	07de      	lsls	r6, r3, #31
 800102c:	d508      	bpl.n	8001040 <_printf_i+0x148>
 800102e:	6923      	ldr	r3, [r4, #16]
 8001030:	6861      	ldr	r1, [r4, #4]
 8001032:	4299      	cmp	r1, r3
 8001034:	bfde      	ittt	le
 8001036:	2330      	movle	r3, #48	; 0x30
 8001038:	f805 3c01 	strble.w	r3, [r5, #-1]
 800103c:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8001040:	1b52      	subs	r2, r2, r5
 8001042:	6122      	str	r2, [r4, #16]
 8001044:	f8cd a000 	str.w	sl, [sp]
 8001048:	464b      	mov	r3, r9
 800104a:	aa03      	add	r2, sp, #12
 800104c:	4621      	mov	r1, r4
 800104e:	4640      	mov	r0, r8
 8001050:	f7ff fee4 	bl	8000e1c <_printf_common>
 8001054:	3001      	adds	r0, #1
 8001056:	d14a      	bne.n	80010ee <_printf_i+0x1f6>
 8001058:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800105c:	b004      	add	sp, #16
 800105e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001062:	6823      	ldr	r3, [r4, #0]
 8001064:	f043 0320 	orr.w	r3, r3, #32
 8001068:	6023      	str	r3, [r4, #0]
 800106a:	4833      	ldr	r0, [pc, #204]	; (8001138 <_printf_i+0x240>)
 800106c:	2778      	movs	r7, #120	; 0x78
 800106e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8001072:	6823      	ldr	r3, [r4, #0]
 8001074:	6829      	ldr	r1, [r5, #0]
 8001076:	061f      	lsls	r7, r3, #24
 8001078:	f851 6b04 	ldr.w	r6, [r1], #4
 800107c:	d402      	bmi.n	8001084 <_printf_i+0x18c>
 800107e:	065f      	lsls	r7, r3, #25
 8001080:	bf48      	it	mi
 8001082:	b2b6      	uxthmi	r6, r6
 8001084:	07df      	lsls	r7, r3, #31
 8001086:	bf48      	it	mi
 8001088:	f043 0320 	orrmi.w	r3, r3, #32
 800108c:	6029      	str	r1, [r5, #0]
 800108e:	bf48      	it	mi
 8001090:	6023      	strmi	r3, [r4, #0]
 8001092:	b91e      	cbnz	r6, 800109c <_printf_i+0x1a4>
 8001094:	6823      	ldr	r3, [r4, #0]
 8001096:	f023 0320 	bic.w	r3, r3, #32
 800109a:	6023      	str	r3, [r4, #0]
 800109c:	2310      	movs	r3, #16
 800109e:	e7a7      	b.n	8000ff0 <_printf_i+0xf8>
 80010a0:	4824      	ldr	r0, [pc, #144]	; (8001134 <_printf_i+0x23c>)
 80010a2:	e7e4      	b.n	800106e <_printf_i+0x176>
 80010a4:	4615      	mov	r5, r2
 80010a6:	e7bd      	b.n	8001024 <_printf_i+0x12c>
 80010a8:	682b      	ldr	r3, [r5, #0]
 80010aa:	6826      	ldr	r6, [r4, #0]
 80010ac:	6961      	ldr	r1, [r4, #20]
 80010ae:	1d18      	adds	r0, r3, #4
 80010b0:	6028      	str	r0, [r5, #0]
 80010b2:	0635      	lsls	r5, r6, #24
 80010b4:	681b      	ldr	r3, [r3, #0]
 80010b6:	d501      	bpl.n	80010bc <_printf_i+0x1c4>
 80010b8:	6019      	str	r1, [r3, #0]
 80010ba:	e002      	b.n	80010c2 <_printf_i+0x1ca>
 80010bc:	0670      	lsls	r0, r6, #25
 80010be:	d5fb      	bpl.n	80010b8 <_printf_i+0x1c0>
 80010c0:	8019      	strh	r1, [r3, #0]
 80010c2:	2300      	movs	r3, #0
 80010c4:	6123      	str	r3, [r4, #16]
 80010c6:	4615      	mov	r5, r2
 80010c8:	e7bc      	b.n	8001044 <_printf_i+0x14c>
 80010ca:	682b      	ldr	r3, [r5, #0]
 80010cc:	1d1a      	adds	r2, r3, #4
 80010ce:	602a      	str	r2, [r5, #0]
 80010d0:	681d      	ldr	r5, [r3, #0]
 80010d2:	6862      	ldr	r2, [r4, #4]
 80010d4:	2100      	movs	r1, #0
 80010d6:	4628      	mov	r0, r5
 80010d8:	f7ff f88a 	bl	80001f0 <memchr>
 80010dc:	b108      	cbz	r0, 80010e2 <_printf_i+0x1ea>
 80010de:	1b40      	subs	r0, r0, r5
 80010e0:	6060      	str	r0, [r4, #4]
 80010e2:	6863      	ldr	r3, [r4, #4]
 80010e4:	6123      	str	r3, [r4, #16]
 80010e6:	2300      	movs	r3, #0
 80010e8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80010ec:	e7aa      	b.n	8001044 <_printf_i+0x14c>
 80010ee:	6923      	ldr	r3, [r4, #16]
 80010f0:	462a      	mov	r2, r5
 80010f2:	4649      	mov	r1, r9
 80010f4:	4640      	mov	r0, r8
 80010f6:	47d0      	blx	sl
 80010f8:	3001      	adds	r0, #1
 80010fa:	d0ad      	beq.n	8001058 <_printf_i+0x160>
 80010fc:	6823      	ldr	r3, [r4, #0]
 80010fe:	079b      	lsls	r3, r3, #30
 8001100:	d413      	bmi.n	800112a <_printf_i+0x232>
 8001102:	68e0      	ldr	r0, [r4, #12]
 8001104:	9b03      	ldr	r3, [sp, #12]
 8001106:	4298      	cmp	r0, r3
 8001108:	bfb8      	it	lt
 800110a:	4618      	movlt	r0, r3
 800110c:	e7a6      	b.n	800105c <_printf_i+0x164>
 800110e:	2301      	movs	r3, #1
 8001110:	4632      	mov	r2, r6
 8001112:	4649      	mov	r1, r9
 8001114:	4640      	mov	r0, r8
 8001116:	47d0      	blx	sl
 8001118:	3001      	adds	r0, #1
 800111a:	d09d      	beq.n	8001058 <_printf_i+0x160>
 800111c:	3501      	adds	r5, #1
 800111e:	68e3      	ldr	r3, [r4, #12]
 8001120:	9903      	ldr	r1, [sp, #12]
 8001122:	1a5b      	subs	r3, r3, r1
 8001124:	42ab      	cmp	r3, r5
 8001126:	dcf2      	bgt.n	800110e <_printf_i+0x216>
 8001128:	e7eb      	b.n	8001102 <_printf_i+0x20a>
 800112a:	2500      	movs	r5, #0
 800112c:	f104 0619 	add.w	r6, r4, #25
 8001130:	e7f5      	b.n	800111e <_printf_i+0x226>
 8001132:	bf00      	nop
 8001134:	0800145d 	.word	0x0800145d
 8001138:	0800146e 	.word	0x0800146e

0800113c <__sflush_r>:
 800113c:	898a      	ldrh	r2, [r1, #12]
 800113e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001142:	4605      	mov	r5, r0
 8001144:	0710      	lsls	r0, r2, #28
 8001146:	460c      	mov	r4, r1
 8001148:	d458      	bmi.n	80011fc <__sflush_r+0xc0>
 800114a:	684b      	ldr	r3, [r1, #4]
 800114c:	2b00      	cmp	r3, #0
 800114e:	dc05      	bgt.n	800115c <__sflush_r+0x20>
 8001150:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001152:	2b00      	cmp	r3, #0
 8001154:	dc02      	bgt.n	800115c <__sflush_r+0x20>
 8001156:	2000      	movs	r0, #0
 8001158:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800115c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800115e:	2e00      	cmp	r6, #0
 8001160:	d0f9      	beq.n	8001156 <__sflush_r+0x1a>
 8001162:	2300      	movs	r3, #0
 8001164:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001168:	682f      	ldr	r7, [r5, #0]
 800116a:	6a21      	ldr	r1, [r4, #32]
 800116c:	602b      	str	r3, [r5, #0]
 800116e:	d032      	beq.n	80011d6 <__sflush_r+0x9a>
 8001170:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001172:	89a3      	ldrh	r3, [r4, #12]
 8001174:	075a      	lsls	r2, r3, #29
 8001176:	d505      	bpl.n	8001184 <__sflush_r+0x48>
 8001178:	6863      	ldr	r3, [r4, #4]
 800117a:	1ac0      	subs	r0, r0, r3
 800117c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800117e:	b10b      	cbz	r3, 8001184 <__sflush_r+0x48>
 8001180:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001182:	1ac0      	subs	r0, r0, r3
 8001184:	2300      	movs	r3, #0
 8001186:	4602      	mov	r2, r0
 8001188:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800118a:	6a21      	ldr	r1, [r4, #32]
 800118c:	4628      	mov	r0, r5
 800118e:	47b0      	blx	r6
 8001190:	1c43      	adds	r3, r0, #1
 8001192:	89a3      	ldrh	r3, [r4, #12]
 8001194:	d106      	bne.n	80011a4 <__sflush_r+0x68>
 8001196:	6829      	ldr	r1, [r5, #0]
 8001198:	291d      	cmp	r1, #29
 800119a:	d82b      	bhi.n	80011f4 <__sflush_r+0xb8>
 800119c:	4a29      	ldr	r2, [pc, #164]	; (8001244 <__sflush_r+0x108>)
 800119e:	410a      	asrs	r2, r1
 80011a0:	07d6      	lsls	r6, r2, #31
 80011a2:	d427      	bmi.n	80011f4 <__sflush_r+0xb8>
 80011a4:	2200      	movs	r2, #0
 80011a6:	6062      	str	r2, [r4, #4]
 80011a8:	04d9      	lsls	r1, r3, #19
 80011aa:	6922      	ldr	r2, [r4, #16]
 80011ac:	6022      	str	r2, [r4, #0]
 80011ae:	d504      	bpl.n	80011ba <__sflush_r+0x7e>
 80011b0:	1c42      	adds	r2, r0, #1
 80011b2:	d101      	bne.n	80011b8 <__sflush_r+0x7c>
 80011b4:	682b      	ldr	r3, [r5, #0]
 80011b6:	b903      	cbnz	r3, 80011ba <__sflush_r+0x7e>
 80011b8:	6560      	str	r0, [r4, #84]	; 0x54
 80011ba:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80011bc:	602f      	str	r7, [r5, #0]
 80011be:	2900      	cmp	r1, #0
 80011c0:	d0c9      	beq.n	8001156 <__sflush_r+0x1a>
 80011c2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80011c6:	4299      	cmp	r1, r3
 80011c8:	d002      	beq.n	80011d0 <__sflush_r+0x94>
 80011ca:	4628      	mov	r0, r5
 80011cc:	f7ff fbea 	bl	80009a4 <_free_r>
 80011d0:	2000      	movs	r0, #0
 80011d2:	6360      	str	r0, [r4, #52]	; 0x34
 80011d4:	e7c0      	b.n	8001158 <__sflush_r+0x1c>
 80011d6:	2301      	movs	r3, #1
 80011d8:	4628      	mov	r0, r5
 80011da:	47b0      	blx	r6
 80011dc:	1c41      	adds	r1, r0, #1
 80011de:	d1c8      	bne.n	8001172 <__sflush_r+0x36>
 80011e0:	682b      	ldr	r3, [r5, #0]
 80011e2:	2b00      	cmp	r3, #0
 80011e4:	d0c5      	beq.n	8001172 <__sflush_r+0x36>
 80011e6:	2b1d      	cmp	r3, #29
 80011e8:	d001      	beq.n	80011ee <__sflush_r+0xb2>
 80011ea:	2b16      	cmp	r3, #22
 80011ec:	d101      	bne.n	80011f2 <__sflush_r+0xb6>
 80011ee:	602f      	str	r7, [r5, #0]
 80011f0:	e7b1      	b.n	8001156 <__sflush_r+0x1a>
 80011f2:	89a3      	ldrh	r3, [r4, #12]
 80011f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80011f8:	81a3      	strh	r3, [r4, #12]
 80011fa:	e7ad      	b.n	8001158 <__sflush_r+0x1c>
 80011fc:	690f      	ldr	r7, [r1, #16]
 80011fe:	2f00      	cmp	r7, #0
 8001200:	d0a9      	beq.n	8001156 <__sflush_r+0x1a>
 8001202:	0793      	lsls	r3, r2, #30
 8001204:	680e      	ldr	r6, [r1, #0]
 8001206:	bf08      	it	eq
 8001208:	694b      	ldreq	r3, [r1, #20]
 800120a:	600f      	str	r7, [r1, #0]
 800120c:	bf18      	it	ne
 800120e:	2300      	movne	r3, #0
 8001210:	eba6 0807 	sub.w	r8, r6, r7
 8001214:	608b      	str	r3, [r1, #8]
 8001216:	f1b8 0f00 	cmp.w	r8, #0
 800121a:	dd9c      	ble.n	8001156 <__sflush_r+0x1a>
 800121c:	6a21      	ldr	r1, [r4, #32]
 800121e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001220:	4643      	mov	r3, r8
 8001222:	463a      	mov	r2, r7
 8001224:	4628      	mov	r0, r5
 8001226:	47b0      	blx	r6
 8001228:	2800      	cmp	r0, #0
 800122a:	dc06      	bgt.n	800123a <__sflush_r+0xfe>
 800122c:	89a3      	ldrh	r3, [r4, #12]
 800122e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001232:	81a3      	strh	r3, [r4, #12]
 8001234:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001238:	e78e      	b.n	8001158 <__sflush_r+0x1c>
 800123a:	4407      	add	r7, r0
 800123c:	eba8 0800 	sub.w	r8, r8, r0
 8001240:	e7e9      	b.n	8001216 <__sflush_r+0xda>
 8001242:	bf00      	nop
 8001244:	dfbffffe 	.word	0xdfbffffe

08001248 <_fflush_r>:
 8001248:	b538      	push	{r3, r4, r5, lr}
 800124a:	690b      	ldr	r3, [r1, #16]
 800124c:	4605      	mov	r5, r0
 800124e:	460c      	mov	r4, r1
 8001250:	b913      	cbnz	r3, 8001258 <_fflush_r+0x10>
 8001252:	2500      	movs	r5, #0
 8001254:	4628      	mov	r0, r5
 8001256:	bd38      	pop	{r3, r4, r5, pc}
 8001258:	b118      	cbz	r0, 8001262 <_fflush_r+0x1a>
 800125a:	6a03      	ldr	r3, [r0, #32]
 800125c:	b90b      	cbnz	r3, 8001262 <_fflush_r+0x1a>
 800125e:	f7ff f9ab 	bl	80005b8 <__sinit>
 8001262:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001266:	2b00      	cmp	r3, #0
 8001268:	d0f3      	beq.n	8001252 <_fflush_r+0xa>
 800126a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800126c:	07d0      	lsls	r0, r2, #31
 800126e:	d404      	bmi.n	800127a <_fflush_r+0x32>
 8001270:	0599      	lsls	r1, r3, #22
 8001272:	d402      	bmi.n	800127a <_fflush_r+0x32>
 8001274:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001276:	f7ff fb93 	bl	80009a0 <__retarget_lock_acquire_recursive>
 800127a:	4628      	mov	r0, r5
 800127c:	4621      	mov	r1, r4
 800127e:	f7ff ff5d 	bl	800113c <__sflush_r>
 8001282:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001284:	07da      	lsls	r2, r3, #31
 8001286:	4605      	mov	r5, r0
 8001288:	d4e4      	bmi.n	8001254 <_fflush_r+0xc>
 800128a:	89a3      	ldrh	r3, [r4, #12]
 800128c:	059b      	lsls	r3, r3, #22
 800128e:	d4e1      	bmi.n	8001254 <_fflush_r+0xc>
 8001290:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001292:	f7ff fb86 	bl	80009a2 <__retarget_lock_release_recursive>
 8001296:	e7dd      	b.n	8001254 <_fflush_r+0xc>

08001298 <__swhatbuf_r>:
 8001298:	b570      	push	{r4, r5, r6, lr}
 800129a:	460c      	mov	r4, r1
 800129c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012a0:	2900      	cmp	r1, #0
 80012a2:	b096      	sub	sp, #88	; 0x58
 80012a4:	4615      	mov	r5, r2
 80012a6:	461e      	mov	r6, r3
 80012a8:	da0d      	bge.n	80012c6 <__swhatbuf_r+0x2e>
 80012aa:	89a3      	ldrh	r3, [r4, #12]
 80012ac:	f013 0f80 	tst.w	r3, #128	; 0x80
 80012b0:	f04f 0100 	mov.w	r1, #0
 80012b4:	bf0c      	ite	eq
 80012b6:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80012ba:	2340      	movne	r3, #64	; 0x40
 80012bc:	2000      	movs	r0, #0
 80012be:	6031      	str	r1, [r6, #0]
 80012c0:	602b      	str	r3, [r5, #0]
 80012c2:	b016      	add	sp, #88	; 0x58
 80012c4:	bd70      	pop	{r4, r5, r6, pc}
 80012c6:	466a      	mov	r2, sp
 80012c8:	f000 f848 	bl	800135c <_fstat_r>
 80012cc:	2800      	cmp	r0, #0
 80012ce:	dbec      	blt.n	80012aa <__swhatbuf_r+0x12>
 80012d0:	9901      	ldr	r1, [sp, #4]
 80012d2:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80012d6:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80012da:	4259      	negs	r1, r3
 80012dc:	4159      	adcs	r1, r3
 80012de:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80012e2:	e7eb      	b.n	80012bc <__swhatbuf_r+0x24>

080012e4 <__smakebuf_r>:
 80012e4:	898b      	ldrh	r3, [r1, #12]
 80012e6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80012e8:	079d      	lsls	r5, r3, #30
 80012ea:	4606      	mov	r6, r0
 80012ec:	460c      	mov	r4, r1
 80012ee:	d507      	bpl.n	8001300 <__smakebuf_r+0x1c>
 80012f0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80012f4:	6023      	str	r3, [r4, #0]
 80012f6:	6123      	str	r3, [r4, #16]
 80012f8:	2301      	movs	r3, #1
 80012fa:	6163      	str	r3, [r4, #20]
 80012fc:	b002      	add	sp, #8
 80012fe:	bd70      	pop	{r4, r5, r6, pc}
 8001300:	ab01      	add	r3, sp, #4
 8001302:	466a      	mov	r2, sp
 8001304:	f7ff ffc8 	bl	8001298 <__swhatbuf_r>
 8001308:	9900      	ldr	r1, [sp, #0]
 800130a:	4605      	mov	r5, r0
 800130c:	4630      	mov	r0, r6
 800130e:	f7ff fbb5 	bl	8000a7c <_malloc_r>
 8001312:	b948      	cbnz	r0, 8001328 <__smakebuf_r+0x44>
 8001314:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001318:	059a      	lsls	r2, r3, #22
 800131a:	d4ef      	bmi.n	80012fc <__smakebuf_r+0x18>
 800131c:	f023 0303 	bic.w	r3, r3, #3
 8001320:	f043 0302 	orr.w	r3, r3, #2
 8001324:	81a3      	strh	r3, [r4, #12]
 8001326:	e7e3      	b.n	80012f0 <__smakebuf_r+0xc>
 8001328:	89a3      	ldrh	r3, [r4, #12]
 800132a:	6020      	str	r0, [r4, #0]
 800132c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001330:	81a3      	strh	r3, [r4, #12]
 8001332:	9b00      	ldr	r3, [sp, #0]
 8001334:	6163      	str	r3, [r4, #20]
 8001336:	9b01      	ldr	r3, [sp, #4]
 8001338:	6120      	str	r0, [r4, #16]
 800133a:	b15b      	cbz	r3, 8001354 <__smakebuf_r+0x70>
 800133c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001340:	4630      	mov	r0, r6
 8001342:	f000 f81d 	bl	8001380 <_isatty_r>
 8001346:	b128      	cbz	r0, 8001354 <__smakebuf_r+0x70>
 8001348:	89a3      	ldrh	r3, [r4, #12]
 800134a:	f023 0303 	bic.w	r3, r3, #3
 800134e:	f043 0301 	orr.w	r3, r3, #1
 8001352:	81a3      	strh	r3, [r4, #12]
 8001354:	89a3      	ldrh	r3, [r4, #12]
 8001356:	431d      	orrs	r5, r3
 8001358:	81a5      	strh	r5, [r4, #12]
 800135a:	e7cf      	b.n	80012fc <__smakebuf_r+0x18>

0800135c <_fstat_r>:
 800135c:	b538      	push	{r3, r4, r5, lr}
 800135e:	4d07      	ldr	r5, [pc, #28]	; (800137c <_fstat_r+0x20>)
 8001360:	2300      	movs	r3, #0
 8001362:	4604      	mov	r4, r0
 8001364:	4608      	mov	r0, r1
 8001366:	4611      	mov	r1, r2
 8001368:	602b      	str	r3, [r5, #0]
 800136a:	f7ff f822 	bl	80003b2 <_fstat>
 800136e:	1c43      	adds	r3, r0, #1
 8001370:	d102      	bne.n	8001378 <_fstat_r+0x1c>
 8001372:	682b      	ldr	r3, [r5, #0]
 8001374:	b103      	cbz	r3, 8001378 <_fstat_r+0x1c>
 8001376:	6023      	str	r3, [r4, #0]
 8001378:	bd38      	pop	{r3, r4, r5, pc}
 800137a:	bf00      	nop
 800137c:	200001b8 	.word	0x200001b8

08001380 <_isatty_r>:
 8001380:	b538      	push	{r3, r4, r5, lr}
 8001382:	4d06      	ldr	r5, [pc, #24]	; (800139c <_isatty_r+0x1c>)
 8001384:	2300      	movs	r3, #0
 8001386:	4604      	mov	r4, r0
 8001388:	4608      	mov	r0, r1
 800138a:	602b      	str	r3, [r5, #0]
 800138c:	f7ff f821 	bl	80003d2 <_isatty>
 8001390:	1c43      	adds	r3, r0, #1
 8001392:	d102      	bne.n	800139a <_isatty_r+0x1a>
 8001394:	682b      	ldr	r3, [r5, #0]
 8001396:	b103      	cbz	r3, 800139a <_isatty_r+0x1a>
 8001398:	6023      	str	r3, [r4, #0]
 800139a:	bd38      	pop	{r3, r4, r5, pc}
 800139c:	200001b8 	.word	0x200001b8

080013a0 <_sbrk_r>:
 80013a0:	b538      	push	{r3, r4, r5, lr}
 80013a2:	4d06      	ldr	r5, [pc, #24]	; (80013bc <_sbrk_r+0x1c>)
 80013a4:	2300      	movs	r3, #0
 80013a6:	4604      	mov	r4, r0
 80013a8:	4608      	mov	r0, r1
 80013aa:	602b      	str	r3, [r5, #0]
 80013ac:	f7ff f82a 	bl	8000404 <_sbrk>
 80013b0:	1c43      	adds	r3, r0, #1
 80013b2:	d102      	bne.n	80013ba <_sbrk_r+0x1a>
 80013b4:	682b      	ldr	r3, [r5, #0]
 80013b6:	b103      	cbz	r3, 80013ba <_sbrk_r+0x1a>
 80013b8:	6023      	str	r3, [r4, #0]
 80013ba:	bd38      	pop	{r3, r4, r5, pc}
 80013bc:	200001b8 	.word	0x200001b8

080013c0 <_init>:
 80013c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013c2:	bf00      	nop
 80013c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013c6:	bc08      	pop	{r3}
 80013c8:	469e      	mov	lr, r3
 80013ca:	4770      	bx	lr

080013cc <_fini>:
 80013cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013ce:	bf00      	nop
 80013d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013d2:	bc08      	pop	{r3}
 80013d4:	469e      	mov	lr, r3
 80013d6:	4770      	bx	lr
