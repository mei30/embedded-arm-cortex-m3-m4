
USART3_in_pend.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001120  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000040  080012d0  080012d0  000112d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001310  08001310  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08001310  08001310  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001310  08001310  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001310  08001310  00011310  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001314  08001314  00011314  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08001318  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002005c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0002005c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0002005c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000932  00000000  00000000  000200cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 0000033c  00000000  00000000  00020a01  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000118  00000000  00000000  00020d40  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 000000be  00000000  00000000  00020e58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00002c8f  00000000  00000000  00020f16  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   000011b6  00000000  00000000  00023ba5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0000974c  00000000  00000000  00024d5b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000af4  00000000  00000000  0002e4a8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000069  00000000  00000000  0002ef9c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000005c 	.word	0x2000005c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080012b8 	.word	0x080012b8

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000060 	.word	0x20000060
 80001ec:	080012b8 	.word	0x080012b8

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
	uint32_t* pISPR1 = (uint32_t*)0XE000E204;
 8000296:	4b08      	ldr	r3, [pc, #32]	; (80002b8 <main+0x28>)
 8000298:	607b      	str	r3, [r7, #4]

	*pISPR1 |= (1 << (USART3_IRQNO % 32 ));
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	601a      	str	r2, [r3, #0]

	uint32_t* pISER1 = (uint32_t*)0XE000E104;
 80002a6:	4b05      	ldr	r3, [pc, #20]	; (80002bc <main+0x2c>)
 80002a8:	603b      	str	r3, [r7, #0]

	*pISER1 |= (1 << (USART3_IRQNO % 32 ));
 80002aa:	683b      	ldr	r3, [r7, #0]
 80002ac:	681b      	ldr	r3, [r3, #0]
 80002ae:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 80002b2:	683b      	ldr	r3, [r7, #0]
 80002b4:	601a      	str	r2, [r3, #0]


    /* Loop forever */
	for(;;);
 80002b6:	e7fe      	b.n	80002b6 <main+0x26>
 80002b8:	e000e204 	.word	0xe000e204
 80002bc:	e000e104 	.word	0xe000e104

080002c0 <USART3_IRQHandler>:
}

void USART3_IRQHandler(void)
{
 80002c0:	b580      	push	{r7, lr}
 80002c2:	af00      	add	r7, sp, #0
	printf("is USART isr");
 80002c4:	4802      	ldr	r0, [pc, #8]	; (80002d0 <USART3_IRQHandler+0x10>)
 80002c6:	f000 f983 	bl	80005d0 <iprintf>
}
 80002ca:	bf00      	nop
 80002cc:	bd80      	pop	{r7, pc}
 80002ce:	bf00      	nop
 80002d0:	080012d0 	.word	0x080012d0

080002d4 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002d4:	b580      	push	{r7, lr}
 80002d6:	b086      	sub	sp, #24
 80002d8:	af00      	add	r7, sp, #0
 80002da:	60f8      	str	r0, [r7, #12]
 80002dc:	60b9      	str	r1, [r7, #8]
 80002de:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002e0:	2300      	movs	r3, #0
 80002e2:	617b      	str	r3, [r7, #20]
 80002e4:	e00a      	b.n	80002fc <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80002e6:	f3af 8000 	nop.w
 80002ea:	4601      	mov	r1, r0
 80002ec:	68bb      	ldr	r3, [r7, #8]
 80002ee:	1c5a      	adds	r2, r3, #1
 80002f0:	60ba      	str	r2, [r7, #8]
 80002f2:	b2ca      	uxtb	r2, r1
 80002f4:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002f6:	697b      	ldr	r3, [r7, #20]
 80002f8:	3301      	adds	r3, #1
 80002fa:	617b      	str	r3, [r7, #20]
 80002fc:	697a      	ldr	r2, [r7, #20]
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	429a      	cmp	r2, r3
 8000302:	dbf0      	blt.n	80002e6 <_read+0x12>
  }

  return len;
 8000304:	687b      	ldr	r3, [r7, #4]
}
 8000306:	4618      	mov	r0, r3
 8000308:	3718      	adds	r7, #24
 800030a:	46bd      	mov	sp, r7
 800030c:	bd80      	pop	{r7, pc}

0800030e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800030e:	b580      	push	{r7, lr}
 8000310:	b086      	sub	sp, #24
 8000312:	af00      	add	r7, sp, #0
 8000314:	60f8      	str	r0, [r7, #12]
 8000316:	60b9      	str	r1, [r7, #8]
 8000318:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800031a:	2300      	movs	r3, #0
 800031c:	617b      	str	r3, [r7, #20]
 800031e:	e009      	b.n	8000334 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000320:	68bb      	ldr	r3, [r7, #8]
 8000322:	1c5a      	adds	r2, r3, #1
 8000324:	60ba      	str	r2, [r7, #8]
 8000326:	781b      	ldrb	r3, [r3, #0]
 8000328:	4618      	mov	r0, r3
 800032a:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800032e:	697b      	ldr	r3, [r7, #20]
 8000330:	3301      	adds	r3, #1
 8000332:	617b      	str	r3, [r7, #20]
 8000334:	697a      	ldr	r2, [r7, #20]
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	429a      	cmp	r2, r3
 800033a:	dbf1      	blt.n	8000320 <_write+0x12>
  }
  return len;
 800033c:	687b      	ldr	r3, [r7, #4]
}
 800033e:	4618      	mov	r0, r3
 8000340:	3718      	adds	r7, #24
 8000342:	46bd      	mov	sp, r7
 8000344:	bd80      	pop	{r7, pc}

08000346 <_close>:

int _close(int file)
{
 8000346:	b480      	push	{r7}
 8000348:	b083      	sub	sp, #12
 800034a:	af00      	add	r7, sp, #0
 800034c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800034e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8000352:	4618      	mov	r0, r3
 8000354:	370c      	adds	r7, #12
 8000356:	46bd      	mov	sp, r7
 8000358:	f85d 7b04 	ldr.w	r7, [sp], #4
 800035c:	4770      	bx	lr

0800035e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800035e:	b480      	push	{r7}
 8000360:	b083      	sub	sp, #12
 8000362:	af00      	add	r7, sp, #0
 8000364:	6078      	str	r0, [r7, #4]
 8000366:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000368:	683b      	ldr	r3, [r7, #0]
 800036a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800036e:	605a      	str	r2, [r3, #4]
  return 0;
 8000370:	2300      	movs	r3, #0
}
 8000372:	4618      	mov	r0, r3
 8000374:	370c      	adds	r7, #12
 8000376:	46bd      	mov	sp, r7
 8000378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800037c:	4770      	bx	lr

0800037e <_isatty>:

int _isatty(int file)
{
 800037e:	b480      	push	{r7}
 8000380:	b083      	sub	sp, #12
 8000382:	af00      	add	r7, sp, #0
 8000384:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000386:	2301      	movs	r3, #1
}
 8000388:	4618      	mov	r0, r3
 800038a:	370c      	adds	r7, #12
 800038c:	46bd      	mov	sp, r7
 800038e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000392:	4770      	bx	lr

08000394 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000394:	b480      	push	{r7}
 8000396:	b085      	sub	sp, #20
 8000398:	af00      	add	r7, sp, #0
 800039a:	60f8      	str	r0, [r7, #12]
 800039c:	60b9      	str	r1, [r7, #8]
 800039e:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003a0:	2300      	movs	r3, #0
}
 80003a2:	4618      	mov	r0, r3
 80003a4:	3714      	adds	r7, #20
 80003a6:	46bd      	mov	sp, r7
 80003a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ac:	4770      	bx	lr
	...

080003b0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003b0:	b580      	push	{r7, lr}
 80003b2:	b086      	sub	sp, #24
 80003b4:	af00      	add	r7, sp, #0
 80003b6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003b8:	4a14      	ldr	r2, [pc, #80]	; (800040c <_sbrk+0x5c>)
 80003ba:	4b15      	ldr	r3, [pc, #84]	; (8000410 <_sbrk+0x60>)
 80003bc:	1ad3      	subs	r3, r2, r3
 80003be:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003c0:	697b      	ldr	r3, [r7, #20]
 80003c2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003c4:	4b13      	ldr	r3, [pc, #76]	; (8000414 <_sbrk+0x64>)
 80003c6:	681b      	ldr	r3, [r3, #0]
 80003c8:	2b00      	cmp	r3, #0
 80003ca:	d102      	bne.n	80003d2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003cc:	4b11      	ldr	r3, [pc, #68]	; (8000414 <_sbrk+0x64>)
 80003ce:	4a12      	ldr	r2, [pc, #72]	; (8000418 <_sbrk+0x68>)
 80003d0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003d2:	4b10      	ldr	r3, [pc, #64]	; (8000414 <_sbrk+0x64>)
 80003d4:	681a      	ldr	r2, [r3, #0]
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	4413      	add	r3, r2
 80003da:	693a      	ldr	r2, [r7, #16]
 80003dc:	429a      	cmp	r2, r3
 80003de:	d207      	bcs.n	80003f0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003e0:	f000 f99a 	bl	8000718 <__errno>
 80003e4:	4603      	mov	r3, r0
 80003e6:	220c      	movs	r2, #12
 80003e8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003ea:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80003ee:	e009      	b.n	8000404 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003f0:	4b08      	ldr	r3, [pc, #32]	; (8000414 <_sbrk+0x64>)
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003f6:	4b07      	ldr	r3, [pc, #28]	; (8000414 <_sbrk+0x64>)
 80003f8:	681a      	ldr	r2, [r3, #0]
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	4413      	add	r3, r2
 80003fe:	4a05      	ldr	r2, [pc, #20]	; (8000414 <_sbrk+0x64>)
 8000400:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000402:	68fb      	ldr	r3, [r7, #12]
}
 8000404:	4618      	mov	r0, r3
 8000406:	3718      	adds	r7, #24
 8000408:	46bd      	mov	sp, r7
 800040a:	bd80      	pop	{r7, pc}
 800040c:	20020000 	.word	0x20020000
 8000410:	00000400 	.word	0x00000400
 8000414:	20000078 	.word	0x20000078
 8000418:	200001c8 	.word	0x200001c8

0800041c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800041c:	480d      	ldr	r0, [pc, #52]	; (8000454 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800041e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000420:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000424:	480c      	ldr	r0, [pc, #48]	; (8000458 <LoopForever+0x6>)
  ldr r1, =_edata
 8000426:	490d      	ldr	r1, [pc, #52]	; (800045c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000428:	4a0d      	ldr	r2, [pc, #52]	; (8000460 <LoopForever+0xe>)
  movs r3, #0
 800042a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800042c:	e002      	b.n	8000434 <LoopCopyDataInit>

0800042e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800042e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000430:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000432:	3304      	adds	r3, #4

08000434 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000434:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000436:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000438:	d3f9      	bcc.n	800042e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800043a:	4a0a      	ldr	r2, [pc, #40]	; (8000464 <LoopForever+0x12>)
  ldr r4, =_ebss
 800043c:	4c0a      	ldr	r4, [pc, #40]	; (8000468 <LoopForever+0x16>)
  movs r3, #0
 800043e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000440:	e001      	b.n	8000446 <LoopFillZerobss>

08000442 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000442:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000444:	3204      	adds	r2, #4

08000446 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000446:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000448:	d3fb      	bcc.n	8000442 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800044a:	f000 f96b 	bl	8000724 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800044e:	f7ff ff1f 	bl	8000290 <main>

08000452 <LoopForever>:

LoopForever:
  b LoopForever
 8000452:	e7fe      	b.n	8000452 <LoopForever>
  ldr   r0, =_estack
 8000454:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000458:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800045c:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000460:	08001318 	.word	0x08001318
  ldr r2, =_sbss
 8000464:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000468:	200001c8 	.word	0x200001c8

0800046c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800046c:	e7fe      	b.n	800046c <ADC_IRQHandler>
	...

08000470 <std>:
 8000470:	2300      	movs	r3, #0
 8000472:	b510      	push	{r4, lr}
 8000474:	4604      	mov	r4, r0
 8000476:	e9c0 3300 	strd	r3, r3, [r0]
 800047a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800047e:	6083      	str	r3, [r0, #8]
 8000480:	8181      	strh	r1, [r0, #12]
 8000482:	6643      	str	r3, [r0, #100]	; 0x64
 8000484:	81c2      	strh	r2, [r0, #14]
 8000486:	6183      	str	r3, [r0, #24]
 8000488:	4619      	mov	r1, r3
 800048a:	2208      	movs	r2, #8
 800048c:	305c      	adds	r0, #92	; 0x5c
 800048e:	f000 f8f4 	bl	800067a <memset>
 8000492:	4b05      	ldr	r3, [pc, #20]	; (80004a8 <std+0x38>)
 8000494:	6263      	str	r3, [r4, #36]	; 0x24
 8000496:	4b05      	ldr	r3, [pc, #20]	; (80004ac <std+0x3c>)
 8000498:	62a3      	str	r3, [r4, #40]	; 0x28
 800049a:	4b05      	ldr	r3, [pc, #20]	; (80004b0 <std+0x40>)
 800049c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800049e:	4b05      	ldr	r3, [pc, #20]	; (80004b4 <std+0x44>)
 80004a0:	6224      	str	r4, [r4, #32]
 80004a2:	6323      	str	r3, [r4, #48]	; 0x30
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	bf00      	nop
 80004a8:	080005f5 	.word	0x080005f5
 80004ac:	08000617 	.word	0x08000617
 80004b0:	0800064f 	.word	0x0800064f
 80004b4:	08000673 	.word	0x08000673

080004b8 <stdio_exit_handler>:
 80004b8:	4a02      	ldr	r2, [pc, #8]	; (80004c4 <stdio_exit_handler+0xc>)
 80004ba:	4903      	ldr	r1, [pc, #12]	; (80004c8 <stdio_exit_handler+0x10>)
 80004bc:	4803      	ldr	r0, [pc, #12]	; (80004cc <stdio_exit_handler+0x14>)
 80004be:	f000 b869 	b.w	8000594 <_fwalk_sglue>
 80004c2:	bf00      	nop
 80004c4:	20000000 	.word	0x20000000
 80004c8:	08001015 	.word	0x08001015
 80004cc:	2000000c 	.word	0x2000000c

080004d0 <cleanup_stdio>:
 80004d0:	6841      	ldr	r1, [r0, #4]
 80004d2:	4b0c      	ldr	r3, [pc, #48]	; (8000504 <cleanup_stdio+0x34>)
 80004d4:	4299      	cmp	r1, r3
 80004d6:	b510      	push	{r4, lr}
 80004d8:	4604      	mov	r4, r0
 80004da:	d001      	beq.n	80004e0 <cleanup_stdio+0x10>
 80004dc:	f000 fd9a 	bl	8001014 <_fflush_r>
 80004e0:	68a1      	ldr	r1, [r4, #8]
 80004e2:	4b09      	ldr	r3, [pc, #36]	; (8000508 <cleanup_stdio+0x38>)
 80004e4:	4299      	cmp	r1, r3
 80004e6:	d002      	beq.n	80004ee <cleanup_stdio+0x1e>
 80004e8:	4620      	mov	r0, r4
 80004ea:	f000 fd93 	bl	8001014 <_fflush_r>
 80004ee:	68e1      	ldr	r1, [r4, #12]
 80004f0:	4b06      	ldr	r3, [pc, #24]	; (800050c <cleanup_stdio+0x3c>)
 80004f2:	4299      	cmp	r1, r3
 80004f4:	d004      	beq.n	8000500 <cleanup_stdio+0x30>
 80004f6:	4620      	mov	r0, r4
 80004f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004fc:	f000 bd8a 	b.w	8001014 <_fflush_r>
 8000500:	bd10      	pop	{r4, pc}
 8000502:	bf00      	nop
 8000504:	2000007c 	.word	0x2000007c
 8000508:	200000e4 	.word	0x200000e4
 800050c:	2000014c 	.word	0x2000014c

08000510 <global_stdio_init.part.0>:
 8000510:	b510      	push	{r4, lr}
 8000512:	4b0b      	ldr	r3, [pc, #44]	; (8000540 <global_stdio_init.part.0+0x30>)
 8000514:	4c0b      	ldr	r4, [pc, #44]	; (8000544 <global_stdio_init.part.0+0x34>)
 8000516:	4a0c      	ldr	r2, [pc, #48]	; (8000548 <global_stdio_init.part.0+0x38>)
 8000518:	601a      	str	r2, [r3, #0]
 800051a:	4620      	mov	r0, r4
 800051c:	2200      	movs	r2, #0
 800051e:	2104      	movs	r1, #4
 8000520:	f7ff ffa6 	bl	8000470 <std>
 8000524:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000528:	2201      	movs	r2, #1
 800052a:	2109      	movs	r1, #9
 800052c:	f7ff ffa0 	bl	8000470 <std>
 8000530:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000534:	2202      	movs	r2, #2
 8000536:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800053a:	2112      	movs	r1, #18
 800053c:	f7ff bf98 	b.w	8000470 <std>
 8000540:	200001b4 	.word	0x200001b4
 8000544:	2000007c 	.word	0x2000007c
 8000548:	080004b9 	.word	0x080004b9

0800054c <__sfp_lock_acquire>:
 800054c:	4801      	ldr	r0, [pc, #4]	; (8000554 <__sfp_lock_acquire+0x8>)
 800054e:	f000 b90d 	b.w	800076c <__retarget_lock_acquire_recursive>
 8000552:	bf00      	nop
 8000554:	200001bd 	.word	0x200001bd

08000558 <__sfp_lock_release>:
 8000558:	4801      	ldr	r0, [pc, #4]	; (8000560 <__sfp_lock_release+0x8>)
 800055a:	f000 b908 	b.w	800076e <__retarget_lock_release_recursive>
 800055e:	bf00      	nop
 8000560:	200001bd 	.word	0x200001bd

08000564 <__sinit>:
 8000564:	b510      	push	{r4, lr}
 8000566:	4604      	mov	r4, r0
 8000568:	f7ff fff0 	bl	800054c <__sfp_lock_acquire>
 800056c:	6a23      	ldr	r3, [r4, #32]
 800056e:	b11b      	cbz	r3, 8000578 <__sinit+0x14>
 8000570:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000574:	f7ff bff0 	b.w	8000558 <__sfp_lock_release>
 8000578:	4b04      	ldr	r3, [pc, #16]	; (800058c <__sinit+0x28>)
 800057a:	6223      	str	r3, [r4, #32]
 800057c:	4b04      	ldr	r3, [pc, #16]	; (8000590 <__sinit+0x2c>)
 800057e:	681b      	ldr	r3, [r3, #0]
 8000580:	2b00      	cmp	r3, #0
 8000582:	d1f5      	bne.n	8000570 <__sinit+0xc>
 8000584:	f7ff ffc4 	bl	8000510 <global_stdio_init.part.0>
 8000588:	e7f2      	b.n	8000570 <__sinit+0xc>
 800058a:	bf00      	nop
 800058c:	080004d1 	.word	0x080004d1
 8000590:	200001b4 	.word	0x200001b4

08000594 <_fwalk_sglue>:
 8000594:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000598:	4607      	mov	r7, r0
 800059a:	4688      	mov	r8, r1
 800059c:	4614      	mov	r4, r2
 800059e:	2600      	movs	r6, #0
 80005a0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80005a4:	f1b9 0901 	subs.w	r9, r9, #1
 80005a8:	d505      	bpl.n	80005b6 <_fwalk_sglue+0x22>
 80005aa:	6824      	ldr	r4, [r4, #0]
 80005ac:	2c00      	cmp	r4, #0
 80005ae:	d1f7      	bne.n	80005a0 <_fwalk_sglue+0xc>
 80005b0:	4630      	mov	r0, r6
 80005b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80005b6:	89ab      	ldrh	r3, [r5, #12]
 80005b8:	2b01      	cmp	r3, #1
 80005ba:	d907      	bls.n	80005cc <_fwalk_sglue+0x38>
 80005bc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80005c0:	3301      	adds	r3, #1
 80005c2:	d003      	beq.n	80005cc <_fwalk_sglue+0x38>
 80005c4:	4629      	mov	r1, r5
 80005c6:	4638      	mov	r0, r7
 80005c8:	47c0      	blx	r8
 80005ca:	4306      	orrs	r6, r0
 80005cc:	3568      	adds	r5, #104	; 0x68
 80005ce:	e7e9      	b.n	80005a4 <_fwalk_sglue+0x10>

080005d0 <iprintf>:
 80005d0:	b40f      	push	{r0, r1, r2, r3}
 80005d2:	b507      	push	{r0, r1, r2, lr}
 80005d4:	4906      	ldr	r1, [pc, #24]	; (80005f0 <iprintf+0x20>)
 80005d6:	ab04      	add	r3, sp, #16
 80005d8:	6808      	ldr	r0, [r1, #0]
 80005da:	f853 2b04 	ldr.w	r2, [r3], #4
 80005de:	6881      	ldr	r1, [r0, #8]
 80005e0:	9301      	str	r3, [sp, #4]
 80005e2:	f000 f9e7 	bl	80009b4 <_vfiprintf_r>
 80005e6:	b003      	add	sp, #12
 80005e8:	f85d eb04 	ldr.w	lr, [sp], #4
 80005ec:	b004      	add	sp, #16
 80005ee:	4770      	bx	lr
 80005f0:	20000058 	.word	0x20000058

080005f4 <__sread>:
 80005f4:	b510      	push	{r4, lr}
 80005f6:	460c      	mov	r4, r1
 80005f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005fc:	f000 f868 	bl	80006d0 <_read_r>
 8000600:	2800      	cmp	r0, #0
 8000602:	bfab      	itete	ge
 8000604:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000606:	89a3      	ldrhlt	r3, [r4, #12]
 8000608:	181b      	addge	r3, r3, r0
 800060a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800060e:	bfac      	ite	ge
 8000610:	6563      	strge	r3, [r4, #84]	; 0x54
 8000612:	81a3      	strhlt	r3, [r4, #12]
 8000614:	bd10      	pop	{r4, pc}

08000616 <__swrite>:
 8000616:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800061a:	461f      	mov	r7, r3
 800061c:	898b      	ldrh	r3, [r1, #12]
 800061e:	05db      	lsls	r3, r3, #23
 8000620:	4605      	mov	r5, r0
 8000622:	460c      	mov	r4, r1
 8000624:	4616      	mov	r6, r2
 8000626:	d505      	bpl.n	8000634 <__swrite+0x1e>
 8000628:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800062c:	2302      	movs	r3, #2
 800062e:	2200      	movs	r2, #0
 8000630:	f000 f83c 	bl	80006ac <_lseek_r>
 8000634:	89a3      	ldrh	r3, [r4, #12]
 8000636:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800063a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800063e:	81a3      	strh	r3, [r4, #12]
 8000640:	4632      	mov	r2, r6
 8000642:	463b      	mov	r3, r7
 8000644:	4628      	mov	r0, r5
 8000646:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800064a:	f000 b853 	b.w	80006f4 <_write_r>

0800064e <__sseek>:
 800064e:	b510      	push	{r4, lr}
 8000650:	460c      	mov	r4, r1
 8000652:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000656:	f000 f829 	bl	80006ac <_lseek_r>
 800065a:	1c43      	adds	r3, r0, #1
 800065c:	89a3      	ldrh	r3, [r4, #12]
 800065e:	bf15      	itete	ne
 8000660:	6560      	strne	r0, [r4, #84]	; 0x54
 8000662:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000666:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800066a:	81a3      	strheq	r3, [r4, #12]
 800066c:	bf18      	it	ne
 800066e:	81a3      	strhne	r3, [r4, #12]
 8000670:	bd10      	pop	{r4, pc}

08000672 <__sclose>:
 8000672:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000676:	f000 b809 	b.w	800068c <_close_r>

0800067a <memset>:
 800067a:	4402      	add	r2, r0
 800067c:	4603      	mov	r3, r0
 800067e:	4293      	cmp	r3, r2
 8000680:	d100      	bne.n	8000684 <memset+0xa>
 8000682:	4770      	bx	lr
 8000684:	f803 1b01 	strb.w	r1, [r3], #1
 8000688:	e7f9      	b.n	800067e <memset+0x4>
	...

0800068c <_close_r>:
 800068c:	b538      	push	{r3, r4, r5, lr}
 800068e:	4d06      	ldr	r5, [pc, #24]	; (80006a8 <_close_r+0x1c>)
 8000690:	2300      	movs	r3, #0
 8000692:	4604      	mov	r4, r0
 8000694:	4608      	mov	r0, r1
 8000696:	602b      	str	r3, [r5, #0]
 8000698:	f7ff fe55 	bl	8000346 <_close>
 800069c:	1c43      	adds	r3, r0, #1
 800069e:	d102      	bne.n	80006a6 <_close_r+0x1a>
 80006a0:	682b      	ldr	r3, [r5, #0]
 80006a2:	b103      	cbz	r3, 80006a6 <_close_r+0x1a>
 80006a4:	6023      	str	r3, [r4, #0]
 80006a6:	bd38      	pop	{r3, r4, r5, pc}
 80006a8:	200001b8 	.word	0x200001b8

080006ac <_lseek_r>:
 80006ac:	b538      	push	{r3, r4, r5, lr}
 80006ae:	4d07      	ldr	r5, [pc, #28]	; (80006cc <_lseek_r+0x20>)
 80006b0:	4604      	mov	r4, r0
 80006b2:	4608      	mov	r0, r1
 80006b4:	4611      	mov	r1, r2
 80006b6:	2200      	movs	r2, #0
 80006b8:	602a      	str	r2, [r5, #0]
 80006ba:	461a      	mov	r2, r3
 80006bc:	f7ff fe6a 	bl	8000394 <_lseek>
 80006c0:	1c43      	adds	r3, r0, #1
 80006c2:	d102      	bne.n	80006ca <_lseek_r+0x1e>
 80006c4:	682b      	ldr	r3, [r5, #0]
 80006c6:	b103      	cbz	r3, 80006ca <_lseek_r+0x1e>
 80006c8:	6023      	str	r3, [r4, #0]
 80006ca:	bd38      	pop	{r3, r4, r5, pc}
 80006cc:	200001b8 	.word	0x200001b8

080006d0 <_read_r>:
 80006d0:	b538      	push	{r3, r4, r5, lr}
 80006d2:	4d07      	ldr	r5, [pc, #28]	; (80006f0 <_read_r+0x20>)
 80006d4:	4604      	mov	r4, r0
 80006d6:	4608      	mov	r0, r1
 80006d8:	4611      	mov	r1, r2
 80006da:	2200      	movs	r2, #0
 80006dc:	602a      	str	r2, [r5, #0]
 80006de:	461a      	mov	r2, r3
 80006e0:	f7ff fdf8 	bl	80002d4 <_read>
 80006e4:	1c43      	adds	r3, r0, #1
 80006e6:	d102      	bne.n	80006ee <_read_r+0x1e>
 80006e8:	682b      	ldr	r3, [r5, #0]
 80006ea:	b103      	cbz	r3, 80006ee <_read_r+0x1e>
 80006ec:	6023      	str	r3, [r4, #0]
 80006ee:	bd38      	pop	{r3, r4, r5, pc}
 80006f0:	200001b8 	.word	0x200001b8

080006f4 <_write_r>:
 80006f4:	b538      	push	{r3, r4, r5, lr}
 80006f6:	4d07      	ldr	r5, [pc, #28]	; (8000714 <_write_r+0x20>)
 80006f8:	4604      	mov	r4, r0
 80006fa:	4608      	mov	r0, r1
 80006fc:	4611      	mov	r1, r2
 80006fe:	2200      	movs	r2, #0
 8000700:	602a      	str	r2, [r5, #0]
 8000702:	461a      	mov	r2, r3
 8000704:	f7ff fe03 	bl	800030e <_write>
 8000708:	1c43      	adds	r3, r0, #1
 800070a:	d102      	bne.n	8000712 <_write_r+0x1e>
 800070c:	682b      	ldr	r3, [r5, #0]
 800070e:	b103      	cbz	r3, 8000712 <_write_r+0x1e>
 8000710:	6023      	str	r3, [r4, #0]
 8000712:	bd38      	pop	{r3, r4, r5, pc}
 8000714:	200001b8 	.word	0x200001b8

08000718 <__errno>:
 8000718:	4b01      	ldr	r3, [pc, #4]	; (8000720 <__errno+0x8>)
 800071a:	6818      	ldr	r0, [r3, #0]
 800071c:	4770      	bx	lr
 800071e:	bf00      	nop
 8000720:	20000058 	.word	0x20000058

08000724 <__libc_init_array>:
 8000724:	b570      	push	{r4, r5, r6, lr}
 8000726:	4d0d      	ldr	r5, [pc, #52]	; (800075c <__libc_init_array+0x38>)
 8000728:	4c0d      	ldr	r4, [pc, #52]	; (8000760 <__libc_init_array+0x3c>)
 800072a:	1b64      	subs	r4, r4, r5
 800072c:	10a4      	asrs	r4, r4, #2
 800072e:	2600      	movs	r6, #0
 8000730:	42a6      	cmp	r6, r4
 8000732:	d109      	bne.n	8000748 <__libc_init_array+0x24>
 8000734:	4d0b      	ldr	r5, [pc, #44]	; (8000764 <__libc_init_array+0x40>)
 8000736:	4c0c      	ldr	r4, [pc, #48]	; (8000768 <__libc_init_array+0x44>)
 8000738:	f000 fdbe 	bl	80012b8 <_init>
 800073c:	1b64      	subs	r4, r4, r5
 800073e:	10a4      	asrs	r4, r4, #2
 8000740:	2600      	movs	r6, #0
 8000742:	42a6      	cmp	r6, r4
 8000744:	d105      	bne.n	8000752 <__libc_init_array+0x2e>
 8000746:	bd70      	pop	{r4, r5, r6, pc}
 8000748:	f855 3b04 	ldr.w	r3, [r5], #4
 800074c:	4798      	blx	r3
 800074e:	3601      	adds	r6, #1
 8000750:	e7ee      	b.n	8000730 <__libc_init_array+0xc>
 8000752:	f855 3b04 	ldr.w	r3, [r5], #4
 8000756:	4798      	blx	r3
 8000758:	3601      	adds	r6, #1
 800075a:	e7f2      	b.n	8000742 <__libc_init_array+0x1e>
 800075c:	08001310 	.word	0x08001310
 8000760:	08001310 	.word	0x08001310
 8000764:	08001310 	.word	0x08001310
 8000768:	08001314 	.word	0x08001314

0800076c <__retarget_lock_acquire_recursive>:
 800076c:	4770      	bx	lr

0800076e <__retarget_lock_release_recursive>:
 800076e:	4770      	bx	lr

08000770 <_free_r>:
 8000770:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000772:	2900      	cmp	r1, #0
 8000774:	d044      	beq.n	8000800 <_free_r+0x90>
 8000776:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800077a:	9001      	str	r0, [sp, #4]
 800077c:	2b00      	cmp	r3, #0
 800077e:	f1a1 0404 	sub.w	r4, r1, #4
 8000782:	bfb8      	it	lt
 8000784:	18e4      	addlt	r4, r4, r3
 8000786:	f000 f8df 	bl	8000948 <__malloc_lock>
 800078a:	4a1e      	ldr	r2, [pc, #120]	; (8000804 <_free_r+0x94>)
 800078c:	9801      	ldr	r0, [sp, #4]
 800078e:	6813      	ldr	r3, [r2, #0]
 8000790:	b933      	cbnz	r3, 80007a0 <_free_r+0x30>
 8000792:	6063      	str	r3, [r4, #4]
 8000794:	6014      	str	r4, [r2, #0]
 8000796:	b003      	add	sp, #12
 8000798:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800079c:	f000 b8da 	b.w	8000954 <__malloc_unlock>
 80007a0:	42a3      	cmp	r3, r4
 80007a2:	d908      	bls.n	80007b6 <_free_r+0x46>
 80007a4:	6825      	ldr	r5, [r4, #0]
 80007a6:	1961      	adds	r1, r4, r5
 80007a8:	428b      	cmp	r3, r1
 80007aa:	bf01      	itttt	eq
 80007ac:	6819      	ldreq	r1, [r3, #0]
 80007ae:	685b      	ldreq	r3, [r3, #4]
 80007b0:	1949      	addeq	r1, r1, r5
 80007b2:	6021      	streq	r1, [r4, #0]
 80007b4:	e7ed      	b.n	8000792 <_free_r+0x22>
 80007b6:	461a      	mov	r2, r3
 80007b8:	685b      	ldr	r3, [r3, #4]
 80007ba:	b10b      	cbz	r3, 80007c0 <_free_r+0x50>
 80007bc:	42a3      	cmp	r3, r4
 80007be:	d9fa      	bls.n	80007b6 <_free_r+0x46>
 80007c0:	6811      	ldr	r1, [r2, #0]
 80007c2:	1855      	adds	r5, r2, r1
 80007c4:	42a5      	cmp	r5, r4
 80007c6:	d10b      	bne.n	80007e0 <_free_r+0x70>
 80007c8:	6824      	ldr	r4, [r4, #0]
 80007ca:	4421      	add	r1, r4
 80007cc:	1854      	adds	r4, r2, r1
 80007ce:	42a3      	cmp	r3, r4
 80007d0:	6011      	str	r1, [r2, #0]
 80007d2:	d1e0      	bne.n	8000796 <_free_r+0x26>
 80007d4:	681c      	ldr	r4, [r3, #0]
 80007d6:	685b      	ldr	r3, [r3, #4]
 80007d8:	6053      	str	r3, [r2, #4]
 80007da:	440c      	add	r4, r1
 80007dc:	6014      	str	r4, [r2, #0]
 80007de:	e7da      	b.n	8000796 <_free_r+0x26>
 80007e0:	d902      	bls.n	80007e8 <_free_r+0x78>
 80007e2:	230c      	movs	r3, #12
 80007e4:	6003      	str	r3, [r0, #0]
 80007e6:	e7d6      	b.n	8000796 <_free_r+0x26>
 80007e8:	6825      	ldr	r5, [r4, #0]
 80007ea:	1961      	adds	r1, r4, r5
 80007ec:	428b      	cmp	r3, r1
 80007ee:	bf04      	itt	eq
 80007f0:	6819      	ldreq	r1, [r3, #0]
 80007f2:	685b      	ldreq	r3, [r3, #4]
 80007f4:	6063      	str	r3, [r4, #4]
 80007f6:	bf04      	itt	eq
 80007f8:	1949      	addeq	r1, r1, r5
 80007fa:	6021      	streq	r1, [r4, #0]
 80007fc:	6054      	str	r4, [r2, #4]
 80007fe:	e7ca      	b.n	8000796 <_free_r+0x26>
 8000800:	b003      	add	sp, #12
 8000802:	bd30      	pop	{r4, r5, pc}
 8000804:	200001c0 	.word	0x200001c0

08000808 <sbrk_aligned>:
 8000808:	b570      	push	{r4, r5, r6, lr}
 800080a:	4e0e      	ldr	r6, [pc, #56]	; (8000844 <sbrk_aligned+0x3c>)
 800080c:	460c      	mov	r4, r1
 800080e:	6831      	ldr	r1, [r6, #0]
 8000810:	4605      	mov	r5, r0
 8000812:	b911      	cbnz	r1, 800081a <sbrk_aligned+0x12>
 8000814:	f000 fcbc 	bl	8001190 <_sbrk_r>
 8000818:	6030      	str	r0, [r6, #0]
 800081a:	4621      	mov	r1, r4
 800081c:	4628      	mov	r0, r5
 800081e:	f000 fcb7 	bl	8001190 <_sbrk_r>
 8000822:	1c43      	adds	r3, r0, #1
 8000824:	d00a      	beq.n	800083c <sbrk_aligned+0x34>
 8000826:	1cc4      	adds	r4, r0, #3
 8000828:	f024 0403 	bic.w	r4, r4, #3
 800082c:	42a0      	cmp	r0, r4
 800082e:	d007      	beq.n	8000840 <sbrk_aligned+0x38>
 8000830:	1a21      	subs	r1, r4, r0
 8000832:	4628      	mov	r0, r5
 8000834:	f000 fcac 	bl	8001190 <_sbrk_r>
 8000838:	3001      	adds	r0, #1
 800083a:	d101      	bne.n	8000840 <sbrk_aligned+0x38>
 800083c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000840:	4620      	mov	r0, r4
 8000842:	bd70      	pop	{r4, r5, r6, pc}
 8000844:	200001c4 	.word	0x200001c4

08000848 <_malloc_r>:
 8000848:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800084c:	1ccd      	adds	r5, r1, #3
 800084e:	f025 0503 	bic.w	r5, r5, #3
 8000852:	3508      	adds	r5, #8
 8000854:	2d0c      	cmp	r5, #12
 8000856:	bf38      	it	cc
 8000858:	250c      	movcc	r5, #12
 800085a:	2d00      	cmp	r5, #0
 800085c:	4607      	mov	r7, r0
 800085e:	db01      	blt.n	8000864 <_malloc_r+0x1c>
 8000860:	42a9      	cmp	r1, r5
 8000862:	d905      	bls.n	8000870 <_malloc_r+0x28>
 8000864:	230c      	movs	r3, #12
 8000866:	603b      	str	r3, [r7, #0]
 8000868:	2600      	movs	r6, #0
 800086a:	4630      	mov	r0, r6
 800086c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000870:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000944 <_malloc_r+0xfc>
 8000874:	f000 f868 	bl	8000948 <__malloc_lock>
 8000878:	f8d8 3000 	ldr.w	r3, [r8]
 800087c:	461c      	mov	r4, r3
 800087e:	bb5c      	cbnz	r4, 80008d8 <_malloc_r+0x90>
 8000880:	4629      	mov	r1, r5
 8000882:	4638      	mov	r0, r7
 8000884:	f7ff ffc0 	bl	8000808 <sbrk_aligned>
 8000888:	1c43      	adds	r3, r0, #1
 800088a:	4604      	mov	r4, r0
 800088c:	d155      	bne.n	800093a <_malloc_r+0xf2>
 800088e:	f8d8 4000 	ldr.w	r4, [r8]
 8000892:	4626      	mov	r6, r4
 8000894:	2e00      	cmp	r6, #0
 8000896:	d145      	bne.n	8000924 <_malloc_r+0xdc>
 8000898:	2c00      	cmp	r4, #0
 800089a:	d048      	beq.n	800092e <_malloc_r+0xe6>
 800089c:	6823      	ldr	r3, [r4, #0]
 800089e:	4631      	mov	r1, r6
 80008a0:	4638      	mov	r0, r7
 80008a2:	eb04 0903 	add.w	r9, r4, r3
 80008a6:	f000 fc73 	bl	8001190 <_sbrk_r>
 80008aa:	4581      	cmp	r9, r0
 80008ac:	d13f      	bne.n	800092e <_malloc_r+0xe6>
 80008ae:	6821      	ldr	r1, [r4, #0]
 80008b0:	1a6d      	subs	r5, r5, r1
 80008b2:	4629      	mov	r1, r5
 80008b4:	4638      	mov	r0, r7
 80008b6:	f7ff ffa7 	bl	8000808 <sbrk_aligned>
 80008ba:	3001      	adds	r0, #1
 80008bc:	d037      	beq.n	800092e <_malloc_r+0xe6>
 80008be:	6823      	ldr	r3, [r4, #0]
 80008c0:	442b      	add	r3, r5
 80008c2:	6023      	str	r3, [r4, #0]
 80008c4:	f8d8 3000 	ldr.w	r3, [r8]
 80008c8:	2b00      	cmp	r3, #0
 80008ca:	d038      	beq.n	800093e <_malloc_r+0xf6>
 80008cc:	685a      	ldr	r2, [r3, #4]
 80008ce:	42a2      	cmp	r2, r4
 80008d0:	d12b      	bne.n	800092a <_malloc_r+0xe2>
 80008d2:	2200      	movs	r2, #0
 80008d4:	605a      	str	r2, [r3, #4]
 80008d6:	e00f      	b.n	80008f8 <_malloc_r+0xb0>
 80008d8:	6822      	ldr	r2, [r4, #0]
 80008da:	1b52      	subs	r2, r2, r5
 80008dc:	d41f      	bmi.n	800091e <_malloc_r+0xd6>
 80008de:	2a0b      	cmp	r2, #11
 80008e0:	d917      	bls.n	8000912 <_malloc_r+0xca>
 80008e2:	1961      	adds	r1, r4, r5
 80008e4:	42a3      	cmp	r3, r4
 80008e6:	6025      	str	r5, [r4, #0]
 80008e8:	bf18      	it	ne
 80008ea:	6059      	strne	r1, [r3, #4]
 80008ec:	6863      	ldr	r3, [r4, #4]
 80008ee:	bf08      	it	eq
 80008f0:	f8c8 1000 	streq.w	r1, [r8]
 80008f4:	5162      	str	r2, [r4, r5]
 80008f6:	604b      	str	r3, [r1, #4]
 80008f8:	4638      	mov	r0, r7
 80008fa:	f104 060b 	add.w	r6, r4, #11
 80008fe:	f000 f829 	bl	8000954 <__malloc_unlock>
 8000902:	f026 0607 	bic.w	r6, r6, #7
 8000906:	1d23      	adds	r3, r4, #4
 8000908:	1af2      	subs	r2, r6, r3
 800090a:	d0ae      	beq.n	800086a <_malloc_r+0x22>
 800090c:	1b9b      	subs	r3, r3, r6
 800090e:	50a3      	str	r3, [r4, r2]
 8000910:	e7ab      	b.n	800086a <_malloc_r+0x22>
 8000912:	42a3      	cmp	r3, r4
 8000914:	6862      	ldr	r2, [r4, #4]
 8000916:	d1dd      	bne.n	80008d4 <_malloc_r+0x8c>
 8000918:	f8c8 2000 	str.w	r2, [r8]
 800091c:	e7ec      	b.n	80008f8 <_malloc_r+0xb0>
 800091e:	4623      	mov	r3, r4
 8000920:	6864      	ldr	r4, [r4, #4]
 8000922:	e7ac      	b.n	800087e <_malloc_r+0x36>
 8000924:	4634      	mov	r4, r6
 8000926:	6876      	ldr	r6, [r6, #4]
 8000928:	e7b4      	b.n	8000894 <_malloc_r+0x4c>
 800092a:	4613      	mov	r3, r2
 800092c:	e7cc      	b.n	80008c8 <_malloc_r+0x80>
 800092e:	230c      	movs	r3, #12
 8000930:	603b      	str	r3, [r7, #0]
 8000932:	4638      	mov	r0, r7
 8000934:	f000 f80e 	bl	8000954 <__malloc_unlock>
 8000938:	e797      	b.n	800086a <_malloc_r+0x22>
 800093a:	6025      	str	r5, [r4, #0]
 800093c:	e7dc      	b.n	80008f8 <_malloc_r+0xb0>
 800093e:	605b      	str	r3, [r3, #4]
 8000940:	deff      	udf	#255	; 0xff
 8000942:	bf00      	nop
 8000944:	200001c0 	.word	0x200001c0

08000948 <__malloc_lock>:
 8000948:	4801      	ldr	r0, [pc, #4]	; (8000950 <__malloc_lock+0x8>)
 800094a:	f7ff bf0f 	b.w	800076c <__retarget_lock_acquire_recursive>
 800094e:	bf00      	nop
 8000950:	200001bc 	.word	0x200001bc

08000954 <__malloc_unlock>:
 8000954:	4801      	ldr	r0, [pc, #4]	; (800095c <__malloc_unlock+0x8>)
 8000956:	f7ff bf0a 	b.w	800076e <__retarget_lock_release_recursive>
 800095a:	bf00      	nop
 800095c:	200001bc 	.word	0x200001bc

08000960 <__sfputc_r>:
 8000960:	6893      	ldr	r3, [r2, #8]
 8000962:	3b01      	subs	r3, #1
 8000964:	2b00      	cmp	r3, #0
 8000966:	b410      	push	{r4}
 8000968:	6093      	str	r3, [r2, #8]
 800096a:	da08      	bge.n	800097e <__sfputc_r+0x1e>
 800096c:	6994      	ldr	r4, [r2, #24]
 800096e:	42a3      	cmp	r3, r4
 8000970:	db01      	blt.n	8000976 <__sfputc_r+0x16>
 8000972:	290a      	cmp	r1, #10
 8000974:	d103      	bne.n	800097e <__sfputc_r+0x1e>
 8000976:	f85d 4b04 	ldr.w	r4, [sp], #4
 800097a:	f000 bb73 	b.w	8001064 <__swbuf_r>
 800097e:	6813      	ldr	r3, [r2, #0]
 8000980:	1c58      	adds	r0, r3, #1
 8000982:	6010      	str	r0, [r2, #0]
 8000984:	7019      	strb	r1, [r3, #0]
 8000986:	4608      	mov	r0, r1
 8000988:	f85d 4b04 	ldr.w	r4, [sp], #4
 800098c:	4770      	bx	lr

0800098e <__sfputs_r>:
 800098e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000990:	4606      	mov	r6, r0
 8000992:	460f      	mov	r7, r1
 8000994:	4614      	mov	r4, r2
 8000996:	18d5      	adds	r5, r2, r3
 8000998:	42ac      	cmp	r4, r5
 800099a:	d101      	bne.n	80009a0 <__sfputs_r+0x12>
 800099c:	2000      	movs	r0, #0
 800099e:	e007      	b.n	80009b0 <__sfputs_r+0x22>
 80009a0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009a4:	463a      	mov	r2, r7
 80009a6:	4630      	mov	r0, r6
 80009a8:	f7ff ffda 	bl	8000960 <__sfputc_r>
 80009ac:	1c43      	adds	r3, r0, #1
 80009ae:	d1f3      	bne.n	8000998 <__sfputs_r+0xa>
 80009b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080009b4 <_vfiprintf_r>:
 80009b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80009b8:	460d      	mov	r5, r1
 80009ba:	b09d      	sub	sp, #116	; 0x74
 80009bc:	4614      	mov	r4, r2
 80009be:	4698      	mov	r8, r3
 80009c0:	4606      	mov	r6, r0
 80009c2:	b118      	cbz	r0, 80009cc <_vfiprintf_r+0x18>
 80009c4:	6a03      	ldr	r3, [r0, #32]
 80009c6:	b90b      	cbnz	r3, 80009cc <_vfiprintf_r+0x18>
 80009c8:	f7ff fdcc 	bl	8000564 <__sinit>
 80009cc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80009ce:	07d9      	lsls	r1, r3, #31
 80009d0:	d405      	bmi.n	80009de <_vfiprintf_r+0x2a>
 80009d2:	89ab      	ldrh	r3, [r5, #12]
 80009d4:	059a      	lsls	r2, r3, #22
 80009d6:	d402      	bmi.n	80009de <_vfiprintf_r+0x2a>
 80009d8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80009da:	f7ff fec7 	bl	800076c <__retarget_lock_acquire_recursive>
 80009de:	89ab      	ldrh	r3, [r5, #12]
 80009e0:	071b      	lsls	r3, r3, #28
 80009e2:	d501      	bpl.n	80009e8 <_vfiprintf_r+0x34>
 80009e4:	692b      	ldr	r3, [r5, #16]
 80009e6:	b99b      	cbnz	r3, 8000a10 <_vfiprintf_r+0x5c>
 80009e8:	4629      	mov	r1, r5
 80009ea:	4630      	mov	r0, r6
 80009ec:	f000 fb78 	bl	80010e0 <__swsetup_r>
 80009f0:	b170      	cbz	r0, 8000a10 <_vfiprintf_r+0x5c>
 80009f2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80009f4:	07dc      	lsls	r4, r3, #31
 80009f6:	d504      	bpl.n	8000a02 <_vfiprintf_r+0x4e>
 80009f8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80009fc:	b01d      	add	sp, #116	; 0x74
 80009fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a02:	89ab      	ldrh	r3, [r5, #12]
 8000a04:	0598      	lsls	r0, r3, #22
 8000a06:	d4f7      	bmi.n	80009f8 <_vfiprintf_r+0x44>
 8000a08:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a0a:	f7ff feb0 	bl	800076e <__retarget_lock_release_recursive>
 8000a0e:	e7f3      	b.n	80009f8 <_vfiprintf_r+0x44>
 8000a10:	2300      	movs	r3, #0
 8000a12:	9309      	str	r3, [sp, #36]	; 0x24
 8000a14:	2320      	movs	r3, #32
 8000a16:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000a1a:	f8cd 800c 	str.w	r8, [sp, #12]
 8000a1e:	2330      	movs	r3, #48	; 0x30
 8000a20:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000bd4 <_vfiprintf_r+0x220>
 8000a24:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000a28:	f04f 0901 	mov.w	r9, #1
 8000a2c:	4623      	mov	r3, r4
 8000a2e:	469a      	mov	sl, r3
 8000a30:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a34:	b10a      	cbz	r2, 8000a3a <_vfiprintf_r+0x86>
 8000a36:	2a25      	cmp	r2, #37	; 0x25
 8000a38:	d1f9      	bne.n	8000a2e <_vfiprintf_r+0x7a>
 8000a3a:	ebba 0b04 	subs.w	fp, sl, r4
 8000a3e:	d00b      	beq.n	8000a58 <_vfiprintf_r+0xa4>
 8000a40:	465b      	mov	r3, fp
 8000a42:	4622      	mov	r2, r4
 8000a44:	4629      	mov	r1, r5
 8000a46:	4630      	mov	r0, r6
 8000a48:	f7ff ffa1 	bl	800098e <__sfputs_r>
 8000a4c:	3001      	adds	r0, #1
 8000a4e:	f000 80a9 	beq.w	8000ba4 <_vfiprintf_r+0x1f0>
 8000a52:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000a54:	445a      	add	r2, fp
 8000a56:	9209      	str	r2, [sp, #36]	; 0x24
 8000a58:	f89a 3000 	ldrb.w	r3, [sl]
 8000a5c:	2b00      	cmp	r3, #0
 8000a5e:	f000 80a1 	beq.w	8000ba4 <_vfiprintf_r+0x1f0>
 8000a62:	2300      	movs	r3, #0
 8000a64:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000a68:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000a6c:	f10a 0a01 	add.w	sl, sl, #1
 8000a70:	9304      	str	r3, [sp, #16]
 8000a72:	9307      	str	r3, [sp, #28]
 8000a74:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000a78:	931a      	str	r3, [sp, #104]	; 0x68
 8000a7a:	4654      	mov	r4, sl
 8000a7c:	2205      	movs	r2, #5
 8000a7e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a82:	4854      	ldr	r0, [pc, #336]	; (8000bd4 <_vfiprintf_r+0x220>)
 8000a84:	f7ff fbb4 	bl	80001f0 <memchr>
 8000a88:	9a04      	ldr	r2, [sp, #16]
 8000a8a:	b9d8      	cbnz	r0, 8000ac4 <_vfiprintf_r+0x110>
 8000a8c:	06d1      	lsls	r1, r2, #27
 8000a8e:	bf44      	itt	mi
 8000a90:	2320      	movmi	r3, #32
 8000a92:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a96:	0713      	lsls	r3, r2, #28
 8000a98:	bf44      	itt	mi
 8000a9a:	232b      	movmi	r3, #43	; 0x2b
 8000a9c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000aa0:	f89a 3000 	ldrb.w	r3, [sl]
 8000aa4:	2b2a      	cmp	r3, #42	; 0x2a
 8000aa6:	d015      	beq.n	8000ad4 <_vfiprintf_r+0x120>
 8000aa8:	9a07      	ldr	r2, [sp, #28]
 8000aaa:	4654      	mov	r4, sl
 8000aac:	2000      	movs	r0, #0
 8000aae:	f04f 0c0a 	mov.w	ip, #10
 8000ab2:	4621      	mov	r1, r4
 8000ab4:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000ab8:	3b30      	subs	r3, #48	; 0x30
 8000aba:	2b09      	cmp	r3, #9
 8000abc:	d94d      	bls.n	8000b5a <_vfiprintf_r+0x1a6>
 8000abe:	b1b0      	cbz	r0, 8000aee <_vfiprintf_r+0x13a>
 8000ac0:	9207      	str	r2, [sp, #28]
 8000ac2:	e014      	b.n	8000aee <_vfiprintf_r+0x13a>
 8000ac4:	eba0 0308 	sub.w	r3, r0, r8
 8000ac8:	fa09 f303 	lsl.w	r3, r9, r3
 8000acc:	4313      	orrs	r3, r2
 8000ace:	9304      	str	r3, [sp, #16]
 8000ad0:	46a2      	mov	sl, r4
 8000ad2:	e7d2      	b.n	8000a7a <_vfiprintf_r+0xc6>
 8000ad4:	9b03      	ldr	r3, [sp, #12]
 8000ad6:	1d19      	adds	r1, r3, #4
 8000ad8:	681b      	ldr	r3, [r3, #0]
 8000ada:	9103      	str	r1, [sp, #12]
 8000adc:	2b00      	cmp	r3, #0
 8000ade:	bfbb      	ittet	lt
 8000ae0:	425b      	neglt	r3, r3
 8000ae2:	f042 0202 	orrlt.w	r2, r2, #2
 8000ae6:	9307      	strge	r3, [sp, #28]
 8000ae8:	9307      	strlt	r3, [sp, #28]
 8000aea:	bfb8      	it	lt
 8000aec:	9204      	strlt	r2, [sp, #16]
 8000aee:	7823      	ldrb	r3, [r4, #0]
 8000af0:	2b2e      	cmp	r3, #46	; 0x2e
 8000af2:	d10c      	bne.n	8000b0e <_vfiprintf_r+0x15a>
 8000af4:	7863      	ldrb	r3, [r4, #1]
 8000af6:	2b2a      	cmp	r3, #42	; 0x2a
 8000af8:	d134      	bne.n	8000b64 <_vfiprintf_r+0x1b0>
 8000afa:	9b03      	ldr	r3, [sp, #12]
 8000afc:	1d1a      	adds	r2, r3, #4
 8000afe:	681b      	ldr	r3, [r3, #0]
 8000b00:	9203      	str	r2, [sp, #12]
 8000b02:	2b00      	cmp	r3, #0
 8000b04:	bfb8      	it	lt
 8000b06:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000b0a:	3402      	adds	r4, #2
 8000b0c:	9305      	str	r3, [sp, #20]
 8000b0e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000be4 <_vfiprintf_r+0x230>
 8000b12:	7821      	ldrb	r1, [r4, #0]
 8000b14:	2203      	movs	r2, #3
 8000b16:	4650      	mov	r0, sl
 8000b18:	f7ff fb6a 	bl	80001f0 <memchr>
 8000b1c:	b138      	cbz	r0, 8000b2e <_vfiprintf_r+0x17a>
 8000b1e:	9b04      	ldr	r3, [sp, #16]
 8000b20:	eba0 000a 	sub.w	r0, r0, sl
 8000b24:	2240      	movs	r2, #64	; 0x40
 8000b26:	4082      	lsls	r2, r0
 8000b28:	4313      	orrs	r3, r2
 8000b2a:	3401      	adds	r4, #1
 8000b2c:	9304      	str	r3, [sp, #16]
 8000b2e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b32:	4829      	ldr	r0, [pc, #164]	; (8000bd8 <_vfiprintf_r+0x224>)
 8000b34:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000b38:	2206      	movs	r2, #6
 8000b3a:	f7ff fb59 	bl	80001f0 <memchr>
 8000b3e:	2800      	cmp	r0, #0
 8000b40:	d03f      	beq.n	8000bc2 <_vfiprintf_r+0x20e>
 8000b42:	4b26      	ldr	r3, [pc, #152]	; (8000bdc <_vfiprintf_r+0x228>)
 8000b44:	bb1b      	cbnz	r3, 8000b8e <_vfiprintf_r+0x1da>
 8000b46:	9b03      	ldr	r3, [sp, #12]
 8000b48:	3307      	adds	r3, #7
 8000b4a:	f023 0307 	bic.w	r3, r3, #7
 8000b4e:	3308      	adds	r3, #8
 8000b50:	9303      	str	r3, [sp, #12]
 8000b52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000b54:	443b      	add	r3, r7
 8000b56:	9309      	str	r3, [sp, #36]	; 0x24
 8000b58:	e768      	b.n	8000a2c <_vfiprintf_r+0x78>
 8000b5a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000b5e:	460c      	mov	r4, r1
 8000b60:	2001      	movs	r0, #1
 8000b62:	e7a6      	b.n	8000ab2 <_vfiprintf_r+0xfe>
 8000b64:	2300      	movs	r3, #0
 8000b66:	3401      	adds	r4, #1
 8000b68:	9305      	str	r3, [sp, #20]
 8000b6a:	4619      	mov	r1, r3
 8000b6c:	f04f 0c0a 	mov.w	ip, #10
 8000b70:	4620      	mov	r0, r4
 8000b72:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000b76:	3a30      	subs	r2, #48	; 0x30
 8000b78:	2a09      	cmp	r2, #9
 8000b7a:	d903      	bls.n	8000b84 <_vfiprintf_r+0x1d0>
 8000b7c:	2b00      	cmp	r3, #0
 8000b7e:	d0c6      	beq.n	8000b0e <_vfiprintf_r+0x15a>
 8000b80:	9105      	str	r1, [sp, #20]
 8000b82:	e7c4      	b.n	8000b0e <_vfiprintf_r+0x15a>
 8000b84:	fb0c 2101 	mla	r1, ip, r1, r2
 8000b88:	4604      	mov	r4, r0
 8000b8a:	2301      	movs	r3, #1
 8000b8c:	e7f0      	b.n	8000b70 <_vfiprintf_r+0x1bc>
 8000b8e:	ab03      	add	r3, sp, #12
 8000b90:	9300      	str	r3, [sp, #0]
 8000b92:	462a      	mov	r2, r5
 8000b94:	4b12      	ldr	r3, [pc, #72]	; (8000be0 <_vfiprintf_r+0x22c>)
 8000b96:	a904      	add	r1, sp, #16
 8000b98:	4630      	mov	r0, r6
 8000b9a:	f3af 8000 	nop.w
 8000b9e:	4607      	mov	r7, r0
 8000ba0:	1c78      	adds	r0, r7, #1
 8000ba2:	d1d6      	bne.n	8000b52 <_vfiprintf_r+0x19e>
 8000ba4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ba6:	07d9      	lsls	r1, r3, #31
 8000ba8:	d405      	bmi.n	8000bb6 <_vfiprintf_r+0x202>
 8000baa:	89ab      	ldrh	r3, [r5, #12]
 8000bac:	059a      	lsls	r2, r3, #22
 8000bae:	d402      	bmi.n	8000bb6 <_vfiprintf_r+0x202>
 8000bb0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000bb2:	f7ff fddc 	bl	800076e <__retarget_lock_release_recursive>
 8000bb6:	89ab      	ldrh	r3, [r5, #12]
 8000bb8:	065b      	lsls	r3, r3, #25
 8000bba:	f53f af1d 	bmi.w	80009f8 <_vfiprintf_r+0x44>
 8000bbe:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000bc0:	e71c      	b.n	80009fc <_vfiprintf_r+0x48>
 8000bc2:	ab03      	add	r3, sp, #12
 8000bc4:	9300      	str	r3, [sp, #0]
 8000bc6:	462a      	mov	r2, r5
 8000bc8:	4b05      	ldr	r3, [pc, #20]	; (8000be0 <_vfiprintf_r+0x22c>)
 8000bca:	a904      	add	r1, sp, #16
 8000bcc:	4630      	mov	r0, r6
 8000bce:	f000 f879 	bl	8000cc4 <_printf_i>
 8000bd2:	e7e4      	b.n	8000b9e <_vfiprintf_r+0x1ea>
 8000bd4:	080012dd 	.word	0x080012dd
 8000bd8:	080012e7 	.word	0x080012e7
 8000bdc:	00000000 	.word	0x00000000
 8000be0:	0800098f 	.word	0x0800098f
 8000be4:	080012e3 	.word	0x080012e3

08000be8 <_printf_common>:
 8000be8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bec:	4616      	mov	r6, r2
 8000bee:	4699      	mov	r9, r3
 8000bf0:	688a      	ldr	r2, [r1, #8]
 8000bf2:	690b      	ldr	r3, [r1, #16]
 8000bf4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000bf8:	4293      	cmp	r3, r2
 8000bfa:	bfb8      	it	lt
 8000bfc:	4613      	movlt	r3, r2
 8000bfe:	6033      	str	r3, [r6, #0]
 8000c00:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000c04:	4607      	mov	r7, r0
 8000c06:	460c      	mov	r4, r1
 8000c08:	b10a      	cbz	r2, 8000c0e <_printf_common+0x26>
 8000c0a:	3301      	adds	r3, #1
 8000c0c:	6033      	str	r3, [r6, #0]
 8000c0e:	6823      	ldr	r3, [r4, #0]
 8000c10:	0699      	lsls	r1, r3, #26
 8000c12:	bf42      	ittt	mi
 8000c14:	6833      	ldrmi	r3, [r6, #0]
 8000c16:	3302      	addmi	r3, #2
 8000c18:	6033      	strmi	r3, [r6, #0]
 8000c1a:	6825      	ldr	r5, [r4, #0]
 8000c1c:	f015 0506 	ands.w	r5, r5, #6
 8000c20:	d106      	bne.n	8000c30 <_printf_common+0x48>
 8000c22:	f104 0a19 	add.w	sl, r4, #25
 8000c26:	68e3      	ldr	r3, [r4, #12]
 8000c28:	6832      	ldr	r2, [r6, #0]
 8000c2a:	1a9b      	subs	r3, r3, r2
 8000c2c:	42ab      	cmp	r3, r5
 8000c2e:	dc26      	bgt.n	8000c7e <_printf_common+0x96>
 8000c30:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000c34:	1e13      	subs	r3, r2, #0
 8000c36:	6822      	ldr	r2, [r4, #0]
 8000c38:	bf18      	it	ne
 8000c3a:	2301      	movne	r3, #1
 8000c3c:	0692      	lsls	r2, r2, #26
 8000c3e:	d42b      	bmi.n	8000c98 <_printf_common+0xb0>
 8000c40:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000c44:	4649      	mov	r1, r9
 8000c46:	4638      	mov	r0, r7
 8000c48:	47c0      	blx	r8
 8000c4a:	3001      	adds	r0, #1
 8000c4c:	d01e      	beq.n	8000c8c <_printf_common+0xa4>
 8000c4e:	6823      	ldr	r3, [r4, #0]
 8000c50:	6922      	ldr	r2, [r4, #16]
 8000c52:	f003 0306 	and.w	r3, r3, #6
 8000c56:	2b04      	cmp	r3, #4
 8000c58:	bf02      	ittt	eq
 8000c5a:	68e5      	ldreq	r5, [r4, #12]
 8000c5c:	6833      	ldreq	r3, [r6, #0]
 8000c5e:	1aed      	subeq	r5, r5, r3
 8000c60:	68a3      	ldr	r3, [r4, #8]
 8000c62:	bf0c      	ite	eq
 8000c64:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c68:	2500      	movne	r5, #0
 8000c6a:	4293      	cmp	r3, r2
 8000c6c:	bfc4      	itt	gt
 8000c6e:	1a9b      	subgt	r3, r3, r2
 8000c70:	18ed      	addgt	r5, r5, r3
 8000c72:	2600      	movs	r6, #0
 8000c74:	341a      	adds	r4, #26
 8000c76:	42b5      	cmp	r5, r6
 8000c78:	d11a      	bne.n	8000cb0 <_printf_common+0xc8>
 8000c7a:	2000      	movs	r0, #0
 8000c7c:	e008      	b.n	8000c90 <_printf_common+0xa8>
 8000c7e:	2301      	movs	r3, #1
 8000c80:	4652      	mov	r2, sl
 8000c82:	4649      	mov	r1, r9
 8000c84:	4638      	mov	r0, r7
 8000c86:	47c0      	blx	r8
 8000c88:	3001      	adds	r0, #1
 8000c8a:	d103      	bne.n	8000c94 <_printf_common+0xac>
 8000c8c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000c90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c94:	3501      	adds	r5, #1
 8000c96:	e7c6      	b.n	8000c26 <_printf_common+0x3e>
 8000c98:	18e1      	adds	r1, r4, r3
 8000c9a:	1c5a      	adds	r2, r3, #1
 8000c9c:	2030      	movs	r0, #48	; 0x30
 8000c9e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000ca2:	4422      	add	r2, r4
 8000ca4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000ca8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000cac:	3302      	adds	r3, #2
 8000cae:	e7c7      	b.n	8000c40 <_printf_common+0x58>
 8000cb0:	2301      	movs	r3, #1
 8000cb2:	4622      	mov	r2, r4
 8000cb4:	4649      	mov	r1, r9
 8000cb6:	4638      	mov	r0, r7
 8000cb8:	47c0      	blx	r8
 8000cba:	3001      	adds	r0, #1
 8000cbc:	d0e6      	beq.n	8000c8c <_printf_common+0xa4>
 8000cbe:	3601      	adds	r6, #1
 8000cc0:	e7d9      	b.n	8000c76 <_printf_common+0x8e>
	...

08000cc4 <_printf_i>:
 8000cc4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000cc8:	7e0f      	ldrb	r7, [r1, #24]
 8000cca:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000ccc:	2f78      	cmp	r7, #120	; 0x78
 8000cce:	4691      	mov	r9, r2
 8000cd0:	4680      	mov	r8, r0
 8000cd2:	460c      	mov	r4, r1
 8000cd4:	469a      	mov	sl, r3
 8000cd6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000cda:	d807      	bhi.n	8000cec <_printf_i+0x28>
 8000cdc:	2f62      	cmp	r7, #98	; 0x62
 8000cde:	d80a      	bhi.n	8000cf6 <_printf_i+0x32>
 8000ce0:	2f00      	cmp	r7, #0
 8000ce2:	f000 80d4 	beq.w	8000e8e <_printf_i+0x1ca>
 8000ce6:	2f58      	cmp	r7, #88	; 0x58
 8000ce8:	f000 80c0 	beq.w	8000e6c <_printf_i+0x1a8>
 8000cec:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000cf0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000cf4:	e03a      	b.n	8000d6c <_printf_i+0xa8>
 8000cf6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000cfa:	2b15      	cmp	r3, #21
 8000cfc:	d8f6      	bhi.n	8000cec <_printf_i+0x28>
 8000cfe:	a101      	add	r1, pc, #4	; (adr r1, 8000d04 <_printf_i+0x40>)
 8000d00:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000d04:	08000d5d 	.word	0x08000d5d
 8000d08:	08000d71 	.word	0x08000d71
 8000d0c:	08000ced 	.word	0x08000ced
 8000d10:	08000ced 	.word	0x08000ced
 8000d14:	08000ced 	.word	0x08000ced
 8000d18:	08000ced 	.word	0x08000ced
 8000d1c:	08000d71 	.word	0x08000d71
 8000d20:	08000ced 	.word	0x08000ced
 8000d24:	08000ced 	.word	0x08000ced
 8000d28:	08000ced 	.word	0x08000ced
 8000d2c:	08000ced 	.word	0x08000ced
 8000d30:	08000e75 	.word	0x08000e75
 8000d34:	08000d9d 	.word	0x08000d9d
 8000d38:	08000e2f 	.word	0x08000e2f
 8000d3c:	08000ced 	.word	0x08000ced
 8000d40:	08000ced 	.word	0x08000ced
 8000d44:	08000e97 	.word	0x08000e97
 8000d48:	08000ced 	.word	0x08000ced
 8000d4c:	08000d9d 	.word	0x08000d9d
 8000d50:	08000ced 	.word	0x08000ced
 8000d54:	08000ced 	.word	0x08000ced
 8000d58:	08000e37 	.word	0x08000e37
 8000d5c:	682b      	ldr	r3, [r5, #0]
 8000d5e:	1d1a      	adds	r2, r3, #4
 8000d60:	681b      	ldr	r3, [r3, #0]
 8000d62:	602a      	str	r2, [r5, #0]
 8000d64:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d68:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000d6c:	2301      	movs	r3, #1
 8000d6e:	e09f      	b.n	8000eb0 <_printf_i+0x1ec>
 8000d70:	6820      	ldr	r0, [r4, #0]
 8000d72:	682b      	ldr	r3, [r5, #0]
 8000d74:	0607      	lsls	r7, r0, #24
 8000d76:	f103 0104 	add.w	r1, r3, #4
 8000d7a:	6029      	str	r1, [r5, #0]
 8000d7c:	d501      	bpl.n	8000d82 <_printf_i+0xbe>
 8000d7e:	681e      	ldr	r6, [r3, #0]
 8000d80:	e003      	b.n	8000d8a <_printf_i+0xc6>
 8000d82:	0646      	lsls	r6, r0, #25
 8000d84:	d5fb      	bpl.n	8000d7e <_printf_i+0xba>
 8000d86:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000d8a:	2e00      	cmp	r6, #0
 8000d8c:	da03      	bge.n	8000d96 <_printf_i+0xd2>
 8000d8e:	232d      	movs	r3, #45	; 0x2d
 8000d90:	4276      	negs	r6, r6
 8000d92:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000d96:	485a      	ldr	r0, [pc, #360]	; (8000f00 <_printf_i+0x23c>)
 8000d98:	230a      	movs	r3, #10
 8000d9a:	e012      	b.n	8000dc2 <_printf_i+0xfe>
 8000d9c:	682b      	ldr	r3, [r5, #0]
 8000d9e:	6820      	ldr	r0, [r4, #0]
 8000da0:	1d19      	adds	r1, r3, #4
 8000da2:	6029      	str	r1, [r5, #0]
 8000da4:	0605      	lsls	r5, r0, #24
 8000da6:	d501      	bpl.n	8000dac <_printf_i+0xe8>
 8000da8:	681e      	ldr	r6, [r3, #0]
 8000daa:	e002      	b.n	8000db2 <_printf_i+0xee>
 8000dac:	0641      	lsls	r1, r0, #25
 8000dae:	d5fb      	bpl.n	8000da8 <_printf_i+0xe4>
 8000db0:	881e      	ldrh	r6, [r3, #0]
 8000db2:	4853      	ldr	r0, [pc, #332]	; (8000f00 <_printf_i+0x23c>)
 8000db4:	2f6f      	cmp	r7, #111	; 0x6f
 8000db6:	bf0c      	ite	eq
 8000db8:	2308      	moveq	r3, #8
 8000dba:	230a      	movne	r3, #10
 8000dbc:	2100      	movs	r1, #0
 8000dbe:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000dc2:	6865      	ldr	r5, [r4, #4]
 8000dc4:	60a5      	str	r5, [r4, #8]
 8000dc6:	2d00      	cmp	r5, #0
 8000dc8:	bfa2      	ittt	ge
 8000dca:	6821      	ldrge	r1, [r4, #0]
 8000dcc:	f021 0104 	bicge.w	r1, r1, #4
 8000dd0:	6021      	strge	r1, [r4, #0]
 8000dd2:	b90e      	cbnz	r6, 8000dd8 <_printf_i+0x114>
 8000dd4:	2d00      	cmp	r5, #0
 8000dd6:	d04b      	beq.n	8000e70 <_printf_i+0x1ac>
 8000dd8:	4615      	mov	r5, r2
 8000dda:	fbb6 f1f3 	udiv	r1, r6, r3
 8000dde:	fb03 6711 	mls	r7, r3, r1, r6
 8000de2:	5dc7      	ldrb	r7, [r0, r7]
 8000de4:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000de8:	4637      	mov	r7, r6
 8000dea:	42bb      	cmp	r3, r7
 8000dec:	460e      	mov	r6, r1
 8000dee:	d9f4      	bls.n	8000dda <_printf_i+0x116>
 8000df0:	2b08      	cmp	r3, #8
 8000df2:	d10b      	bne.n	8000e0c <_printf_i+0x148>
 8000df4:	6823      	ldr	r3, [r4, #0]
 8000df6:	07de      	lsls	r6, r3, #31
 8000df8:	d508      	bpl.n	8000e0c <_printf_i+0x148>
 8000dfa:	6923      	ldr	r3, [r4, #16]
 8000dfc:	6861      	ldr	r1, [r4, #4]
 8000dfe:	4299      	cmp	r1, r3
 8000e00:	bfde      	ittt	le
 8000e02:	2330      	movle	r3, #48	; 0x30
 8000e04:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000e08:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8000e0c:	1b52      	subs	r2, r2, r5
 8000e0e:	6122      	str	r2, [r4, #16]
 8000e10:	f8cd a000 	str.w	sl, [sp]
 8000e14:	464b      	mov	r3, r9
 8000e16:	aa03      	add	r2, sp, #12
 8000e18:	4621      	mov	r1, r4
 8000e1a:	4640      	mov	r0, r8
 8000e1c:	f7ff fee4 	bl	8000be8 <_printf_common>
 8000e20:	3001      	adds	r0, #1
 8000e22:	d14a      	bne.n	8000eba <_printf_i+0x1f6>
 8000e24:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000e28:	b004      	add	sp, #16
 8000e2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e2e:	6823      	ldr	r3, [r4, #0]
 8000e30:	f043 0320 	orr.w	r3, r3, #32
 8000e34:	6023      	str	r3, [r4, #0]
 8000e36:	4833      	ldr	r0, [pc, #204]	; (8000f04 <_printf_i+0x240>)
 8000e38:	2778      	movs	r7, #120	; 0x78
 8000e3a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000e3e:	6823      	ldr	r3, [r4, #0]
 8000e40:	6829      	ldr	r1, [r5, #0]
 8000e42:	061f      	lsls	r7, r3, #24
 8000e44:	f851 6b04 	ldr.w	r6, [r1], #4
 8000e48:	d402      	bmi.n	8000e50 <_printf_i+0x18c>
 8000e4a:	065f      	lsls	r7, r3, #25
 8000e4c:	bf48      	it	mi
 8000e4e:	b2b6      	uxthmi	r6, r6
 8000e50:	07df      	lsls	r7, r3, #31
 8000e52:	bf48      	it	mi
 8000e54:	f043 0320 	orrmi.w	r3, r3, #32
 8000e58:	6029      	str	r1, [r5, #0]
 8000e5a:	bf48      	it	mi
 8000e5c:	6023      	strmi	r3, [r4, #0]
 8000e5e:	b91e      	cbnz	r6, 8000e68 <_printf_i+0x1a4>
 8000e60:	6823      	ldr	r3, [r4, #0]
 8000e62:	f023 0320 	bic.w	r3, r3, #32
 8000e66:	6023      	str	r3, [r4, #0]
 8000e68:	2310      	movs	r3, #16
 8000e6a:	e7a7      	b.n	8000dbc <_printf_i+0xf8>
 8000e6c:	4824      	ldr	r0, [pc, #144]	; (8000f00 <_printf_i+0x23c>)
 8000e6e:	e7e4      	b.n	8000e3a <_printf_i+0x176>
 8000e70:	4615      	mov	r5, r2
 8000e72:	e7bd      	b.n	8000df0 <_printf_i+0x12c>
 8000e74:	682b      	ldr	r3, [r5, #0]
 8000e76:	6826      	ldr	r6, [r4, #0]
 8000e78:	6961      	ldr	r1, [r4, #20]
 8000e7a:	1d18      	adds	r0, r3, #4
 8000e7c:	6028      	str	r0, [r5, #0]
 8000e7e:	0635      	lsls	r5, r6, #24
 8000e80:	681b      	ldr	r3, [r3, #0]
 8000e82:	d501      	bpl.n	8000e88 <_printf_i+0x1c4>
 8000e84:	6019      	str	r1, [r3, #0]
 8000e86:	e002      	b.n	8000e8e <_printf_i+0x1ca>
 8000e88:	0670      	lsls	r0, r6, #25
 8000e8a:	d5fb      	bpl.n	8000e84 <_printf_i+0x1c0>
 8000e8c:	8019      	strh	r1, [r3, #0]
 8000e8e:	2300      	movs	r3, #0
 8000e90:	6123      	str	r3, [r4, #16]
 8000e92:	4615      	mov	r5, r2
 8000e94:	e7bc      	b.n	8000e10 <_printf_i+0x14c>
 8000e96:	682b      	ldr	r3, [r5, #0]
 8000e98:	1d1a      	adds	r2, r3, #4
 8000e9a:	602a      	str	r2, [r5, #0]
 8000e9c:	681d      	ldr	r5, [r3, #0]
 8000e9e:	6862      	ldr	r2, [r4, #4]
 8000ea0:	2100      	movs	r1, #0
 8000ea2:	4628      	mov	r0, r5
 8000ea4:	f7ff f9a4 	bl	80001f0 <memchr>
 8000ea8:	b108      	cbz	r0, 8000eae <_printf_i+0x1ea>
 8000eaa:	1b40      	subs	r0, r0, r5
 8000eac:	6060      	str	r0, [r4, #4]
 8000eae:	6863      	ldr	r3, [r4, #4]
 8000eb0:	6123      	str	r3, [r4, #16]
 8000eb2:	2300      	movs	r3, #0
 8000eb4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000eb8:	e7aa      	b.n	8000e10 <_printf_i+0x14c>
 8000eba:	6923      	ldr	r3, [r4, #16]
 8000ebc:	462a      	mov	r2, r5
 8000ebe:	4649      	mov	r1, r9
 8000ec0:	4640      	mov	r0, r8
 8000ec2:	47d0      	blx	sl
 8000ec4:	3001      	adds	r0, #1
 8000ec6:	d0ad      	beq.n	8000e24 <_printf_i+0x160>
 8000ec8:	6823      	ldr	r3, [r4, #0]
 8000eca:	079b      	lsls	r3, r3, #30
 8000ecc:	d413      	bmi.n	8000ef6 <_printf_i+0x232>
 8000ece:	68e0      	ldr	r0, [r4, #12]
 8000ed0:	9b03      	ldr	r3, [sp, #12]
 8000ed2:	4298      	cmp	r0, r3
 8000ed4:	bfb8      	it	lt
 8000ed6:	4618      	movlt	r0, r3
 8000ed8:	e7a6      	b.n	8000e28 <_printf_i+0x164>
 8000eda:	2301      	movs	r3, #1
 8000edc:	4632      	mov	r2, r6
 8000ede:	4649      	mov	r1, r9
 8000ee0:	4640      	mov	r0, r8
 8000ee2:	47d0      	blx	sl
 8000ee4:	3001      	adds	r0, #1
 8000ee6:	d09d      	beq.n	8000e24 <_printf_i+0x160>
 8000ee8:	3501      	adds	r5, #1
 8000eea:	68e3      	ldr	r3, [r4, #12]
 8000eec:	9903      	ldr	r1, [sp, #12]
 8000eee:	1a5b      	subs	r3, r3, r1
 8000ef0:	42ab      	cmp	r3, r5
 8000ef2:	dcf2      	bgt.n	8000eda <_printf_i+0x216>
 8000ef4:	e7eb      	b.n	8000ece <_printf_i+0x20a>
 8000ef6:	2500      	movs	r5, #0
 8000ef8:	f104 0619 	add.w	r6, r4, #25
 8000efc:	e7f5      	b.n	8000eea <_printf_i+0x226>
 8000efe:	bf00      	nop
 8000f00:	080012ee 	.word	0x080012ee
 8000f04:	080012ff 	.word	0x080012ff

08000f08 <__sflush_r>:
 8000f08:	898a      	ldrh	r2, [r1, #12]
 8000f0a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f0e:	4605      	mov	r5, r0
 8000f10:	0710      	lsls	r0, r2, #28
 8000f12:	460c      	mov	r4, r1
 8000f14:	d458      	bmi.n	8000fc8 <__sflush_r+0xc0>
 8000f16:	684b      	ldr	r3, [r1, #4]
 8000f18:	2b00      	cmp	r3, #0
 8000f1a:	dc05      	bgt.n	8000f28 <__sflush_r+0x20>
 8000f1c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000f1e:	2b00      	cmp	r3, #0
 8000f20:	dc02      	bgt.n	8000f28 <__sflush_r+0x20>
 8000f22:	2000      	movs	r0, #0
 8000f24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f28:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f2a:	2e00      	cmp	r6, #0
 8000f2c:	d0f9      	beq.n	8000f22 <__sflush_r+0x1a>
 8000f2e:	2300      	movs	r3, #0
 8000f30:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000f34:	682f      	ldr	r7, [r5, #0]
 8000f36:	6a21      	ldr	r1, [r4, #32]
 8000f38:	602b      	str	r3, [r5, #0]
 8000f3a:	d032      	beq.n	8000fa2 <__sflush_r+0x9a>
 8000f3c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000f3e:	89a3      	ldrh	r3, [r4, #12]
 8000f40:	075a      	lsls	r2, r3, #29
 8000f42:	d505      	bpl.n	8000f50 <__sflush_r+0x48>
 8000f44:	6863      	ldr	r3, [r4, #4]
 8000f46:	1ac0      	subs	r0, r0, r3
 8000f48:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000f4a:	b10b      	cbz	r3, 8000f50 <__sflush_r+0x48>
 8000f4c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000f4e:	1ac0      	subs	r0, r0, r3
 8000f50:	2300      	movs	r3, #0
 8000f52:	4602      	mov	r2, r0
 8000f54:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f56:	6a21      	ldr	r1, [r4, #32]
 8000f58:	4628      	mov	r0, r5
 8000f5a:	47b0      	blx	r6
 8000f5c:	1c43      	adds	r3, r0, #1
 8000f5e:	89a3      	ldrh	r3, [r4, #12]
 8000f60:	d106      	bne.n	8000f70 <__sflush_r+0x68>
 8000f62:	6829      	ldr	r1, [r5, #0]
 8000f64:	291d      	cmp	r1, #29
 8000f66:	d82b      	bhi.n	8000fc0 <__sflush_r+0xb8>
 8000f68:	4a29      	ldr	r2, [pc, #164]	; (8001010 <__sflush_r+0x108>)
 8000f6a:	410a      	asrs	r2, r1
 8000f6c:	07d6      	lsls	r6, r2, #31
 8000f6e:	d427      	bmi.n	8000fc0 <__sflush_r+0xb8>
 8000f70:	2200      	movs	r2, #0
 8000f72:	6062      	str	r2, [r4, #4]
 8000f74:	04d9      	lsls	r1, r3, #19
 8000f76:	6922      	ldr	r2, [r4, #16]
 8000f78:	6022      	str	r2, [r4, #0]
 8000f7a:	d504      	bpl.n	8000f86 <__sflush_r+0x7e>
 8000f7c:	1c42      	adds	r2, r0, #1
 8000f7e:	d101      	bne.n	8000f84 <__sflush_r+0x7c>
 8000f80:	682b      	ldr	r3, [r5, #0]
 8000f82:	b903      	cbnz	r3, 8000f86 <__sflush_r+0x7e>
 8000f84:	6560      	str	r0, [r4, #84]	; 0x54
 8000f86:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000f88:	602f      	str	r7, [r5, #0]
 8000f8a:	2900      	cmp	r1, #0
 8000f8c:	d0c9      	beq.n	8000f22 <__sflush_r+0x1a>
 8000f8e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000f92:	4299      	cmp	r1, r3
 8000f94:	d002      	beq.n	8000f9c <__sflush_r+0x94>
 8000f96:	4628      	mov	r0, r5
 8000f98:	f7ff fbea 	bl	8000770 <_free_r>
 8000f9c:	2000      	movs	r0, #0
 8000f9e:	6360      	str	r0, [r4, #52]	; 0x34
 8000fa0:	e7c0      	b.n	8000f24 <__sflush_r+0x1c>
 8000fa2:	2301      	movs	r3, #1
 8000fa4:	4628      	mov	r0, r5
 8000fa6:	47b0      	blx	r6
 8000fa8:	1c41      	adds	r1, r0, #1
 8000faa:	d1c8      	bne.n	8000f3e <__sflush_r+0x36>
 8000fac:	682b      	ldr	r3, [r5, #0]
 8000fae:	2b00      	cmp	r3, #0
 8000fb0:	d0c5      	beq.n	8000f3e <__sflush_r+0x36>
 8000fb2:	2b1d      	cmp	r3, #29
 8000fb4:	d001      	beq.n	8000fba <__sflush_r+0xb2>
 8000fb6:	2b16      	cmp	r3, #22
 8000fb8:	d101      	bne.n	8000fbe <__sflush_r+0xb6>
 8000fba:	602f      	str	r7, [r5, #0]
 8000fbc:	e7b1      	b.n	8000f22 <__sflush_r+0x1a>
 8000fbe:	89a3      	ldrh	r3, [r4, #12]
 8000fc0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000fc4:	81a3      	strh	r3, [r4, #12]
 8000fc6:	e7ad      	b.n	8000f24 <__sflush_r+0x1c>
 8000fc8:	690f      	ldr	r7, [r1, #16]
 8000fca:	2f00      	cmp	r7, #0
 8000fcc:	d0a9      	beq.n	8000f22 <__sflush_r+0x1a>
 8000fce:	0793      	lsls	r3, r2, #30
 8000fd0:	680e      	ldr	r6, [r1, #0]
 8000fd2:	bf08      	it	eq
 8000fd4:	694b      	ldreq	r3, [r1, #20]
 8000fd6:	600f      	str	r7, [r1, #0]
 8000fd8:	bf18      	it	ne
 8000fda:	2300      	movne	r3, #0
 8000fdc:	eba6 0807 	sub.w	r8, r6, r7
 8000fe0:	608b      	str	r3, [r1, #8]
 8000fe2:	f1b8 0f00 	cmp.w	r8, #0
 8000fe6:	dd9c      	ble.n	8000f22 <__sflush_r+0x1a>
 8000fe8:	6a21      	ldr	r1, [r4, #32]
 8000fea:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000fec:	4643      	mov	r3, r8
 8000fee:	463a      	mov	r2, r7
 8000ff0:	4628      	mov	r0, r5
 8000ff2:	47b0      	blx	r6
 8000ff4:	2800      	cmp	r0, #0
 8000ff6:	dc06      	bgt.n	8001006 <__sflush_r+0xfe>
 8000ff8:	89a3      	ldrh	r3, [r4, #12]
 8000ffa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000ffe:	81a3      	strh	r3, [r4, #12]
 8001000:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001004:	e78e      	b.n	8000f24 <__sflush_r+0x1c>
 8001006:	4407      	add	r7, r0
 8001008:	eba8 0800 	sub.w	r8, r8, r0
 800100c:	e7e9      	b.n	8000fe2 <__sflush_r+0xda>
 800100e:	bf00      	nop
 8001010:	dfbffffe 	.word	0xdfbffffe

08001014 <_fflush_r>:
 8001014:	b538      	push	{r3, r4, r5, lr}
 8001016:	690b      	ldr	r3, [r1, #16]
 8001018:	4605      	mov	r5, r0
 800101a:	460c      	mov	r4, r1
 800101c:	b913      	cbnz	r3, 8001024 <_fflush_r+0x10>
 800101e:	2500      	movs	r5, #0
 8001020:	4628      	mov	r0, r5
 8001022:	bd38      	pop	{r3, r4, r5, pc}
 8001024:	b118      	cbz	r0, 800102e <_fflush_r+0x1a>
 8001026:	6a03      	ldr	r3, [r0, #32]
 8001028:	b90b      	cbnz	r3, 800102e <_fflush_r+0x1a>
 800102a:	f7ff fa9b 	bl	8000564 <__sinit>
 800102e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001032:	2b00      	cmp	r3, #0
 8001034:	d0f3      	beq.n	800101e <_fflush_r+0xa>
 8001036:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001038:	07d0      	lsls	r0, r2, #31
 800103a:	d404      	bmi.n	8001046 <_fflush_r+0x32>
 800103c:	0599      	lsls	r1, r3, #22
 800103e:	d402      	bmi.n	8001046 <_fflush_r+0x32>
 8001040:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001042:	f7ff fb93 	bl	800076c <__retarget_lock_acquire_recursive>
 8001046:	4628      	mov	r0, r5
 8001048:	4621      	mov	r1, r4
 800104a:	f7ff ff5d 	bl	8000f08 <__sflush_r>
 800104e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001050:	07da      	lsls	r2, r3, #31
 8001052:	4605      	mov	r5, r0
 8001054:	d4e4      	bmi.n	8001020 <_fflush_r+0xc>
 8001056:	89a3      	ldrh	r3, [r4, #12]
 8001058:	059b      	lsls	r3, r3, #22
 800105a:	d4e1      	bmi.n	8001020 <_fflush_r+0xc>
 800105c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800105e:	f7ff fb86 	bl	800076e <__retarget_lock_release_recursive>
 8001062:	e7dd      	b.n	8001020 <_fflush_r+0xc>

08001064 <__swbuf_r>:
 8001064:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001066:	460e      	mov	r6, r1
 8001068:	4614      	mov	r4, r2
 800106a:	4605      	mov	r5, r0
 800106c:	b118      	cbz	r0, 8001076 <__swbuf_r+0x12>
 800106e:	6a03      	ldr	r3, [r0, #32]
 8001070:	b90b      	cbnz	r3, 8001076 <__swbuf_r+0x12>
 8001072:	f7ff fa77 	bl	8000564 <__sinit>
 8001076:	69a3      	ldr	r3, [r4, #24]
 8001078:	60a3      	str	r3, [r4, #8]
 800107a:	89a3      	ldrh	r3, [r4, #12]
 800107c:	071a      	lsls	r2, r3, #28
 800107e:	d525      	bpl.n	80010cc <__swbuf_r+0x68>
 8001080:	6923      	ldr	r3, [r4, #16]
 8001082:	b31b      	cbz	r3, 80010cc <__swbuf_r+0x68>
 8001084:	6823      	ldr	r3, [r4, #0]
 8001086:	6922      	ldr	r2, [r4, #16]
 8001088:	1a98      	subs	r0, r3, r2
 800108a:	6963      	ldr	r3, [r4, #20]
 800108c:	b2f6      	uxtb	r6, r6
 800108e:	4283      	cmp	r3, r0
 8001090:	4637      	mov	r7, r6
 8001092:	dc04      	bgt.n	800109e <__swbuf_r+0x3a>
 8001094:	4621      	mov	r1, r4
 8001096:	4628      	mov	r0, r5
 8001098:	f7ff ffbc 	bl	8001014 <_fflush_r>
 800109c:	b9e0      	cbnz	r0, 80010d8 <__swbuf_r+0x74>
 800109e:	68a3      	ldr	r3, [r4, #8]
 80010a0:	3b01      	subs	r3, #1
 80010a2:	60a3      	str	r3, [r4, #8]
 80010a4:	6823      	ldr	r3, [r4, #0]
 80010a6:	1c5a      	adds	r2, r3, #1
 80010a8:	6022      	str	r2, [r4, #0]
 80010aa:	701e      	strb	r6, [r3, #0]
 80010ac:	6962      	ldr	r2, [r4, #20]
 80010ae:	1c43      	adds	r3, r0, #1
 80010b0:	429a      	cmp	r2, r3
 80010b2:	d004      	beq.n	80010be <__swbuf_r+0x5a>
 80010b4:	89a3      	ldrh	r3, [r4, #12]
 80010b6:	07db      	lsls	r3, r3, #31
 80010b8:	d506      	bpl.n	80010c8 <__swbuf_r+0x64>
 80010ba:	2e0a      	cmp	r6, #10
 80010bc:	d104      	bne.n	80010c8 <__swbuf_r+0x64>
 80010be:	4621      	mov	r1, r4
 80010c0:	4628      	mov	r0, r5
 80010c2:	f7ff ffa7 	bl	8001014 <_fflush_r>
 80010c6:	b938      	cbnz	r0, 80010d8 <__swbuf_r+0x74>
 80010c8:	4638      	mov	r0, r7
 80010ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010cc:	4621      	mov	r1, r4
 80010ce:	4628      	mov	r0, r5
 80010d0:	f000 f806 	bl	80010e0 <__swsetup_r>
 80010d4:	2800      	cmp	r0, #0
 80010d6:	d0d5      	beq.n	8001084 <__swbuf_r+0x20>
 80010d8:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 80010dc:	e7f4      	b.n	80010c8 <__swbuf_r+0x64>
	...

080010e0 <__swsetup_r>:
 80010e0:	b538      	push	{r3, r4, r5, lr}
 80010e2:	4b2a      	ldr	r3, [pc, #168]	; (800118c <__swsetup_r+0xac>)
 80010e4:	4605      	mov	r5, r0
 80010e6:	6818      	ldr	r0, [r3, #0]
 80010e8:	460c      	mov	r4, r1
 80010ea:	b118      	cbz	r0, 80010f4 <__swsetup_r+0x14>
 80010ec:	6a03      	ldr	r3, [r0, #32]
 80010ee:	b90b      	cbnz	r3, 80010f4 <__swsetup_r+0x14>
 80010f0:	f7ff fa38 	bl	8000564 <__sinit>
 80010f4:	89a3      	ldrh	r3, [r4, #12]
 80010f6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80010fa:	0718      	lsls	r0, r3, #28
 80010fc:	d422      	bmi.n	8001144 <__swsetup_r+0x64>
 80010fe:	06d9      	lsls	r1, r3, #27
 8001100:	d407      	bmi.n	8001112 <__swsetup_r+0x32>
 8001102:	2309      	movs	r3, #9
 8001104:	602b      	str	r3, [r5, #0]
 8001106:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800110a:	81a3      	strh	r3, [r4, #12]
 800110c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001110:	e034      	b.n	800117c <__swsetup_r+0x9c>
 8001112:	0758      	lsls	r0, r3, #29
 8001114:	d512      	bpl.n	800113c <__swsetup_r+0x5c>
 8001116:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001118:	b141      	cbz	r1, 800112c <__swsetup_r+0x4c>
 800111a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800111e:	4299      	cmp	r1, r3
 8001120:	d002      	beq.n	8001128 <__swsetup_r+0x48>
 8001122:	4628      	mov	r0, r5
 8001124:	f7ff fb24 	bl	8000770 <_free_r>
 8001128:	2300      	movs	r3, #0
 800112a:	6363      	str	r3, [r4, #52]	; 0x34
 800112c:	89a3      	ldrh	r3, [r4, #12]
 800112e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001132:	81a3      	strh	r3, [r4, #12]
 8001134:	2300      	movs	r3, #0
 8001136:	6063      	str	r3, [r4, #4]
 8001138:	6923      	ldr	r3, [r4, #16]
 800113a:	6023      	str	r3, [r4, #0]
 800113c:	89a3      	ldrh	r3, [r4, #12]
 800113e:	f043 0308 	orr.w	r3, r3, #8
 8001142:	81a3      	strh	r3, [r4, #12]
 8001144:	6923      	ldr	r3, [r4, #16]
 8001146:	b94b      	cbnz	r3, 800115c <__swsetup_r+0x7c>
 8001148:	89a3      	ldrh	r3, [r4, #12]
 800114a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800114e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001152:	d003      	beq.n	800115c <__swsetup_r+0x7c>
 8001154:	4621      	mov	r1, r4
 8001156:	4628      	mov	r0, r5
 8001158:	f000 f850 	bl	80011fc <__smakebuf_r>
 800115c:	89a0      	ldrh	r0, [r4, #12]
 800115e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001162:	f010 0301 	ands.w	r3, r0, #1
 8001166:	d00a      	beq.n	800117e <__swsetup_r+0x9e>
 8001168:	2300      	movs	r3, #0
 800116a:	60a3      	str	r3, [r4, #8]
 800116c:	6963      	ldr	r3, [r4, #20]
 800116e:	425b      	negs	r3, r3
 8001170:	61a3      	str	r3, [r4, #24]
 8001172:	6923      	ldr	r3, [r4, #16]
 8001174:	b943      	cbnz	r3, 8001188 <__swsetup_r+0xa8>
 8001176:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800117a:	d1c4      	bne.n	8001106 <__swsetup_r+0x26>
 800117c:	bd38      	pop	{r3, r4, r5, pc}
 800117e:	0781      	lsls	r1, r0, #30
 8001180:	bf58      	it	pl
 8001182:	6963      	ldrpl	r3, [r4, #20]
 8001184:	60a3      	str	r3, [r4, #8]
 8001186:	e7f4      	b.n	8001172 <__swsetup_r+0x92>
 8001188:	2000      	movs	r0, #0
 800118a:	e7f7      	b.n	800117c <__swsetup_r+0x9c>
 800118c:	20000058 	.word	0x20000058

08001190 <_sbrk_r>:
 8001190:	b538      	push	{r3, r4, r5, lr}
 8001192:	4d06      	ldr	r5, [pc, #24]	; (80011ac <_sbrk_r+0x1c>)
 8001194:	2300      	movs	r3, #0
 8001196:	4604      	mov	r4, r0
 8001198:	4608      	mov	r0, r1
 800119a:	602b      	str	r3, [r5, #0]
 800119c:	f7ff f908 	bl	80003b0 <_sbrk>
 80011a0:	1c43      	adds	r3, r0, #1
 80011a2:	d102      	bne.n	80011aa <_sbrk_r+0x1a>
 80011a4:	682b      	ldr	r3, [r5, #0]
 80011a6:	b103      	cbz	r3, 80011aa <_sbrk_r+0x1a>
 80011a8:	6023      	str	r3, [r4, #0]
 80011aa:	bd38      	pop	{r3, r4, r5, pc}
 80011ac:	200001b8 	.word	0x200001b8

080011b0 <__swhatbuf_r>:
 80011b0:	b570      	push	{r4, r5, r6, lr}
 80011b2:	460c      	mov	r4, r1
 80011b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011b8:	2900      	cmp	r1, #0
 80011ba:	b096      	sub	sp, #88	; 0x58
 80011bc:	4615      	mov	r5, r2
 80011be:	461e      	mov	r6, r3
 80011c0:	da0d      	bge.n	80011de <__swhatbuf_r+0x2e>
 80011c2:	89a3      	ldrh	r3, [r4, #12]
 80011c4:	f013 0f80 	tst.w	r3, #128	; 0x80
 80011c8:	f04f 0100 	mov.w	r1, #0
 80011cc:	bf0c      	ite	eq
 80011ce:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80011d2:	2340      	movne	r3, #64	; 0x40
 80011d4:	2000      	movs	r0, #0
 80011d6:	6031      	str	r1, [r6, #0]
 80011d8:	602b      	str	r3, [r5, #0]
 80011da:	b016      	add	sp, #88	; 0x58
 80011dc:	bd70      	pop	{r4, r5, r6, pc}
 80011de:	466a      	mov	r2, sp
 80011e0:	f000 f848 	bl	8001274 <_fstat_r>
 80011e4:	2800      	cmp	r0, #0
 80011e6:	dbec      	blt.n	80011c2 <__swhatbuf_r+0x12>
 80011e8:	9901      	ldr	r1, [sp, #4]
 80011ea:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80011ee:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80011f2:	4259      	negs	r1, r3
 80011f4:	4159      	adcs	r1, r3
 80011f6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80011fa:	e7eb      	b.n	80011d4 <__swhatbuf_r+0x24>

080011fc <__smakebuf_r>:
 80011fc:	898b      	ldrh	r3, [r1, #12]
 80011fe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001200:	079d      	lsls	r5, r3, #30
 8001202:	4606      	mov	r6, r0
 8001204:	460c      	mov	r4, r1
 8001206:	d507      	bpl.n	8001218 <__smakebuf_r+0x1c>
 8001208:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800120c:	6023      	str	r3, [r4, #0]
 800120e:	6123      	str	r3, [r4, #16]
 8001210:	2301      	movs	r3, #1
 8001212:	6163      	str	r3, [r4, #20]
 8001214:	b002      	add	sp, #8
 8001216:	bd70      	pop	{r4, r5, r6, pc}
 8001218:	ab01      	add	r3, sp, #4
 800121a:	466a      	mov	r2, sp
 800121c:	f7ff ffc8 	bl	80011b0 <__swhatbuf_r>
 8001220:	9900      	ldr	r1, [sp, #0]
 8001222:	4605      	mov	r5, r0
 8001224:	4630      	mov	r0, r6
 8001226:	f7ff fb0f 	bl	8000848 <_malloc_r>
 800122a:	b948      	cbnz	r0, 8001240 <__smakebuf_r+0x44>
 800122c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001230:	059a      	lsls	r2, r3, #22
 8001232:	d4ef      	bmi.n	8001214 <__smakebuf_r+0x18>
 8001234:	f023 0303 	bic.w	r3, r3, #3
 8001238:	f043 0302 	orr.w	r3, r3, #2
 800123c:	81a3      	strh	r3, [r4, #12]
 800123e:	e7e3      	b.n	8001208 <__smakebuf_r+0xc>
 8001240:	89a3      	ldrh	r3, [r4, #12]
 8001242:	6020      	str	r0, [r4, #0]
 8001244:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001248:	81a3      	strh	r3, [r4, #12]
 800124a:	9b00      	ldr	r3, [sp, #0]
 800124c:	6163      	str	r3, [r4, #20]
 800124e:	9b01      	ldr	r3, [sp, #4]
 8001250:	6120      	str	r0, [r4, #16]
 8001252:	b15b      	cbz	r3, 800126c <__smakebuf_r+0x70>
 8001254:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001258:	4630      	mov	r0, r6
 800125a:	f000 f81d 	bl	8001298 <_isatty_r>
 800125e:	b128      	cbz	r0, 800126c <__smakebuf_r+0x70>
 8001260:	89a3      	ldrh	r3, [r4, #12]
 8001262:	f023 0303 	bic.w	r3, r3, #3
 8001266:	f043 0301 	orr.w	r3, r3, #1
 800126a:	81a3      	strh	r3, [r4, #12]
 800126c:	89a3      	ldrh	r3, [r4, #12]
 800126e:	431d      	orrs	r5, r3
 8001270:	81a5      	strh	r5, [r4, #12]
 8001272:	e7cf      	b.n	8001214 <__smakebuf_r+0x18>

08001274 <_fstat_r>:
 8001274:	b538      	push	{r3, r4, r5, lr}
 8001276:	4d07      	ldr	r5, [pc, #28]	; (8001294 <_fstat_r+0x20>)
 8001278:	2300      	movs	r3, #0
 800127a:	4604      	mov	r4, r0
 800127c:	4608      	mov	r0, r1
 800127e:	4611      	mov	r1, r2
 8001280:	602b      	str	r3, [r5, #0]
 8001282:	f7ff f86c 	bl	800035e <_fstat>
 8001286:	1c43      	adds	r3, r0, #1
 8001288:	d102      	bne.n	8001290 <_fstat_r+0x1c>
 800128a:	682b      	ldr	r3, [r5, #0]
 800128c:	b103      	cbz	r3, 8001290 <_fstat_r+0x1c>
 800128e:	6023      	str	r3, [r4, #0]
 8001290:	bd38      	pop	{r3, r4, r5, pc}
 8001292:	bf00      	nop
 8001294:	200001b8 	.word	0x200001b8

08001298 <_isatty_r>:
 8001298:	b538      	push	{r3, r4, r5, lr}
 800129a:	4d06      	ldr	r5, [pc, #24]	; (80012b4 <_isatty_r+0x1c>)
 800129c:	2300      	movs	r3, #0
 800129e:	4604      	mov	r4, r0
 80012a0:	4608      	mov	r0, r1
 80012a2:	602b      	str	r3, [r5, #0]
 80012a4:	f7ff f86b 	bl	800037e <_isatty>
 80012a8:	1c43      	adds	r3, r0, #1
 80012aa:	d102      	bne.n	80012b2 <_isatty_r+0x1a>
 80012ac:	682b      	ldr	r3, [r5, #0]
 80012ae:	b103      	cbz	r3, 80012b2 <_isatty_r+0x1a>
 80012b0:	6023      	str	r3, [r4, #0]
 80012b2:	bd38      	pop	{r3, r4, r5, pc}
 80012b4:	200001b8 	.word	0x200001b8

080012b8 <_init>:
 80012b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012ba:	bf00      	nop
 80012bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012be:	bc08      	pop	{r3}
 80012c0:	469e      	mov	lr, r3
 80012c2:	4770      	bx	lr

080012c4 <_fini>:
 80012c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012c6:	bf00      	nop
 80012c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012ca:	bc08      	pop	{r3}
 80012cc:	469e      	mov	lr, r3
 80012ce:	4770      	bx	lr
